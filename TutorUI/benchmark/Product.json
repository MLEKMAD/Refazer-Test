[{"ErrorFlag":0,"Id":1,"studentId":0,"date":"2016-02-11 13:58:50.178606","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while k <= n: =>           \r\n    if k <= n:    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 1\n    a = 1\n    if k <= n:\n    \ta = a * term(k)\n    \tk += 1\n    return a \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 1\n    a = 1\n    while k <= n:\n    \ta = a * term(k)\n    \tk += 1\n    return a \n\n","SubmissionTime":"2016-02-11T13:58:50.178606","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":2,"studentId":0,"date":"2016-02-10 13:04:54.863175","diff":"\r\nInputObject              SideIndicator\r\n-----------              -------------\r\n            y *= term(x) =>           \r\n            y * term(x)  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(x, y):\n    \tif x == n:\n    \t\treturn y * term(n)\n    \telse:\n    \t\ty * term(x)\n    \t\treturn helper(x + 1, y)\n    return helper(1, 1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(x, y):\n    \tif x == n:\n    \t\treturn y * term(n)\n    \telse:\n    \t\ty *= term(x)\n    \t\treturn helper(x + 1, y)\n    return helper(1, 1)\n\n","SubmissionTime":"2016-02-10T13:04:54.863175","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","3","","# Error: expected","#     6","# but got","#     3","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":3,"studentId":0,"date":"2016-02-08 19:26:49.986285","diff":"\r\nInputObject                        SideIndicator\r\n-----------                        -------------\r\n        product= product*term(num) =>           \r\n        num+=1                     =>           \r\n        product= product*term(n)   <=           \r\n        n+=1                       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    num=2\n    product= term(1)\n    while num<=n:\n        product= product*term(n)\n        n+=1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    num=2\n    product= term(1)\n    while num<=n:\n        product= product*term(num)\n        num+=1\n    return product\n\n","SubmissionTime":"2016-02-08T19:26:49.986285","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":4,"studentId":0,"date":"2016-02-12 17:42:17.289624","diff":"\r\nInputObject                      SideIndicator\r\n-----------                      -------------\r\n        total=total*term(k)      =>           \r\n        total=total*term_of_n(k) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \n    total, k=1,1\n    while k<=n:\n        total=total*term_of_n(k)\n        k+=1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \n    total, k=1,1\n    while k<=n:\n        total=total*term(k)\n        k+=1\n    return total\n\n","SubmissionTime":"2016-02-12T17:42:17.289624","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    total=total*term_of_n(k)","NameError: name 'term_of_n' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":5,"studentId":0,"date":"2016-02-09 22:53:32.348103","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n        return 1                        =>           \r\n    return term(n) * product(n-1, term) =>           \r\n        return 0                        <=           \r\n    return term * product(n-1, term)    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    return term * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-09T22:53:32.348103","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return term * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return term * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return term * product(n-1, term)","TypeError: unsupported operand type(s) for *: 'function' and 'int'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":6,"studentId":0,"date":"2016-02-15 22:12:17.580564","diff":"\r\nInputObject                                                             SideIndicator\r\n-----------                                                             -------------\r\n    >>> product(3, identity) # 1 * 2 * 3                                =>           \r\n    if n <= 0:                                                          =>           \r\n        return 1                                                        =>           \r\n        return term(n) * product(n-1,term)                              =>           \r\n    if n <= 1:                                                          =>           \r\n        return 1                                                        =>           \r\n    else:                                                               =>           \r\n        return n * product(n-1,identity)                                =>           \r\n    if n <= 1:                                                          =>           \r\n        return combiner(term(n), base)                                  =>           \r\n        return combiner(term(n), accumulate(combiner, base, n-1, term)) =>           \r\n                                                                        =>           \r\n    return accumulate(add, 0, n, term)                                  =>           \r\n    return accumulate(mul, 1, n, term)                                  =>           \r\n    else:                                                               =>           \r\n    >>> product(3, identity) # 1 * 2 * 3                                <=           \r\n    if n < 1:                                                           <=           \r\n        return 0                                                        <=           \r\n        print(term(m))                                                  <=           \r\n        m = term(n) * product(n-1, term)                                <=           \r\n        print(m)                                                        <=           \r\n        return m                                                        <=           \r\n    return _______                                                      <=           \r\n    return _______                                                      <=           \r\n    return _______                                                      <=           \r\n    \"*** YOUR CODE HERE ***\"                                            <=           \r\n    \"*** YOUR CODE HERE ***\"                                            <=           \r\n    \"*** YOUR CODE HERE ***\"                                            <=           \r\n    \"*** YOUR CODE HERE ***\"                                            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 1:\n        return 0\n    else:\n        print(term(m))\n        m = term(n) * product(n-1, term)\n        print(m)\n        return m\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3 \n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n <= 0:\n        return 1\n    else:\n        return term(n) * product(n-1,term)\n\n","SubmissionTime":"2016-02-15T22:12:17.580564","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    print(term(m))","UnboundLocalError: local variable 'm' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":7,"studentId":0,"date":"2016-02-14 12:28:29.987133","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n    result = term(1)              =>           \r\n    for i in range (1, n+1):      =>           \r\n        result = term(i) * result =>           \r\n    return result                 =>           \r\n    \"*** YOUR CODE HERE ***\"      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = term(1)\n    for i in range (1, n+1):\n        result = term(i) * result\n    return result \n\n","SubmissionTime":"2016-02-14T12:28:29.987133","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":8,"studentId":0,"date":"2016-02-12 18:40:37.363263","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) * term(n-1)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * term(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-12T18:40:37.363263","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":9,"studentId":0,"date":"2016-02-09 10:33:46.655294","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n    \"\"\"while n > 0:\n        term(n) * product(term(n-1), term)\"\"\"\n\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n    \"\"\"while n > 0:\n        term(n) * product(term(n-1), term)\"\"\"\n\n    \"*** YOUR CODE HERE ***\"\n\n","SubmissionTime":"2016-02-09T10:33:46.655294","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":10,"studentId":0,"date":"2016-02-09 21:25:16.591616","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n        return 1 =>           \r\n        return   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return \n    else:\n        return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-09T21:25:16.591616","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n-1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":11,"studentId":0,"date":"2016-02-08 12:22:56.068759","diff":"\r\nInputObject                                     SideIndicator\r\n-----------                                     -------------\r\n                                                =>           \r\n    if n == 1:                                  =>           \r\n        return term(n)                          =>           \r\n    else:                                       =>           \r\n        return term(n) * product(n-1, term)     =>           \r\n    def inner_product(n):                       <=           \r\n        if n == 1:                              <=           \r\n            return term(n)                      <=           \r\n        else:                                   <=           \r\n            return term(n) * product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def inner_product(n):\n        if n == 1:\n            return term(n)\n        else:\n            return term(n) * product(n-1, term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n\n","SubmissionTime":"2016-02-08T12:22:56.068759","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":12,"studentId":0,"date":"2016-02-14 18:28:55.502769","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    if n == 0:   =>           \r\n        return 1 =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    return term(n) * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 1\n    return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-14T18:28:55.502769","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n - 1, term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":13,"studentId":0,"date":"2016-02-09 08:28:46.449986","diff":"\r\nInputObject                    SideIndicator\r\n-----------                    -------------\r\n                               =>           \r\n    if n == 0:                 <=           \r\n        return 1               <=           \r\n                               <=           \r\n        result = n * term(n-1) <=           \r\n    result = 1                 <=           \r\n    return result              <=           \r\n    else:                      <=           \r\n                               <=           \r\n                               <=           \r\n                               <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n    if n == 0:\n        return 1\n    else:\n        \n        result = n * term(n-1)\n\n\n    return result\n\n\n    result = 1\n    \n    number = 1    \n    while n > 0:\n            result = result * term(number)\n            number = number + 1\n            n = n - 1\n\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n\n    result = 1\n    \n    number = 1    \n    while n > 0:\n            result = result * term(number)\n            number = number + 1\n            n = n - 1\n\n    return result\n\n","SubmissionTime":"2016-02-09T08:28:46.449986","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":14,"studentId":0,"date":"2016-02-10 12:48:05.160798","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n            return helper(i+1, k) =>           \r\n            return helper(i, k)   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(i,k):\n        if i > n:\n            return k\n        else:\n            k = k * term(i)\n            return helper(i, k)\n    return helper(1,1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(i,k):\n        if i > n:\n            return k\n        else:\n            k = k * term(i)\n            return helper(i+1, k)\n    return helper(1,1)\n\n","SubmissionTime":"2016-02-10T12:48:05.160798","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in helper","    return helper(i, k)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in helper","    return helper(i, k)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in helper","    return helper(i, k)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in helper","    return helper(i, k)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in helper","    return helper(i, k)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in helper","    return helper(i, k)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in helper","    if i > n:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":15,"studentId":0,"date":"2016-02-08 14:46:28.477455","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n)                      =>           \r\n        return term(n) * product(n-1, term) =>           \r\n    prod = iterm                            =>           \r\n    if n == 1:                              =>           \r\n    else:                                   =>           \r\n                                            =>           \r\n    prod = iterm*prod                       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    iterm = term(n)\n    prod = iterm*prod\n    if n == 1:\n        return prod\n    else:\n        return product(n-1, term)\n    '''def counter(n):\n        if n == 1:\n            return prod\n        else:\n            n -= 1\n            prod = prod * term(n)\n            return counter(n)\n    return counter(n)\n'''\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n    iterm = term(n)\n    prod = iterm\n    if n == 1:\n        return prod\n    else:\n        return product(n-1, term)\n    '''def counter(n):\n        if n == 1:\n            return prod\n        else:\n            n -= 1\n            prod = prod * term(n)\n            return counter(n)\n    return counter(n)\n'''\n\n","SubmissionTime":"2016-02-08T14:46:28.477455","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    prod = iterm*prod","UnboundLocalError: local variable 'prod' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":16,"studentId":0,"date":"2016-02-15 15:49:39.091302","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n        return term(n)*product(n-1,term) =>           \r\n        return (n)*product(n-1,term)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n   \n    if n==1:\n        return 1\n    else:\n        return (n)*product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n   \n    if n==1:\n        return 1\n    else:\n        return term(n)*product(n-1,term)\n\n","SubmissionTime":"2016-02-15T15:49:39.091302","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":17,"studentId":0,"date":"2016-02-09 15:58:33.224544","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    while n > 1:\n        total *= term(n)\n        n -= 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n > 1:\n        total *= term(n)\n        n -= 1\n    return total\n\n","SubmissionTime":"2016-02-09T15:58:33.224544","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":18,"studentId":0,"date":"2016-02-13 22:45:12.517595","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n        return term(n) + product(n - 1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) + product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-13T22:45:12.517595","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":19,"studentId":0,"date":"2016-02-16 00:51:04.306810","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    if term == identity:    =>           \r\n    if term == identity(n): <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if term == identity(n):\n        total, k = 1, 1\n        while k <= n:\n            total, k = total * k, k + 1\n        return total\n    else:\n        total, k = 1, 1\n        while k <= n:\n            total, k = total * (k*k), k + 1\n        return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if term == identity:\n        total, k = 1, 1\n        while k <= n:\n            total, k = total * k, k + 1\n        return total\n    else:\n        total, k = 1, 1\n        while k <= n:\n            total, k = total * (k*k), k + 1\n        return total\n\n\n","SubmissionTime":"2016-02-16T00:51:04.30681","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","36","","# Error: expected","#     6","# but got","#     36","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":20,"studentId":0,"date":"2016-02-13 14:16:41.031903","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    if n == 0:                              =>           \r\n        return 0                            =>           \r\n    elif n == 1:                            =>           \r\n        return n                            =>           \r\n    else:                                   =>           \r\n        return term(n) * product(n-1, term) =>           \r\n    # if n == 0:                            <=           \r\n    #     return 0                          <=           \r\n    # elif n == 1:                          <=           \r\n    #     return n                          <=           \r\n    # else:                                 <=           \r\n    return term(n) * product(n-1, term)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    # if n == 0:\n    #     return 0\n    # elif n == 1:\n    #     return n\n    # else:\n    return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return n\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-13T14:16:41.031903","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return term(n) * product(n-1, term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":21,"studentId":0,"date":"2016-02-08 16:24:38.907814","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n    return total     =>           \r\n        return total <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    total = 1\n    while i <= n:\n        total, i = total * term(i), i + 1\n        return total\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    total = 1\n    while i <= n:\n        total, i = total * term(i), i + 1\n    return total\n\n\n\n","SubmissionTime":"2016-02-08T16:24:38.907814","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":22,"studentId":0,"date":"2016-02-15 23:27:34.960787","diff":"\r\nInputObject                  SideIndicator\r\n-----------                  -------------\r\n    total = 1                =>           \r\n        total *= term(i)     =>           \r\n    total = 0                <=           \r\n        total *= i * term(i) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    i = 1\n    while i <= n:\n        total *= i * term(i)\n        i += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    i = 1\n    while i <= n:\n        total *= term(i)\n        i += 1\n    return total\n\n","SubmissionTime":"2016-02-15T23:27:34.960787","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":23,"studentId":0,"date":"2016-02-09 18:15:29.809517","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        k, total = k + 1, total * term(k)   =>           \r\n        k, total = k + 1, total * term(k,1) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, total = 1, 1\n    while k <=n:\n        k, total = k + 1, total * term(k,1)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, total = 1, 1\n    while k <=n:\n        k, total = k + 1, total * term(k)\n    return total\n\n","SubmissionTime":"2016-02-09T18:15:29.809517","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    k, total = k + 1, total * term(k,1)","TypeError: identity() takes 1 positional argument but 2 were given","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":25,"studentId":0,"date":"2016-02-11 16:41:45.294757","diff":"\r\nInputObject                                           SideIndicator\r\n-----------                                           -------------\r\n            return total                              =>           \r\n        else:                                         =>           \r\n            return total_prod(x+1, total * term(x+1)) =>           \r\n    return product(n, identity)                       =>           \r\n            return total * term(x)                    <=           \r\n        #else:                                        <=           \r\n            #return product(x+1, total * term(x+1))   <=           \r\n    product()                                         <=           \r\n    return _______                                    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def total_prod(x, total):\n        if x == n:\n            return total * term(x)\n        #else:\n            #return product(x+1, total * term(x+1))\n    return total_prod(1, 1)\n\n# term becomes 1 instead of staying as square\n    # n goes down 1 every time you go through the code until it reaches 1, where\n    # you just return the total\n    # everytime you go through the loop, multiply the term applied to n by\n    # the term applied to (n-1) since you decrease 1 each time until you reach 1.\n    # but every time you go through the loop, you need to multiply your previous\n    # term(n) you got to total\n    #base case--> start from n and go down to 1\n    # if n is 1, return 1 * total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def total_prod(x, total):\n        if x == n:\n            return total\n        else:\n            return total_prod(x+1, total * term(x+1))\n    return total_prod(1, 1)\n\n# term becomes 1 instead of staying as square\n    # n goes down 1 every time you go through the code until it reaches 1, where\n    # you just return the total\n    # everytime you go through the loop, multiply the term applied to n by\n    # the term applied to (n-1) since you decrease 1 each time until you reach 1.\n    # but every time you go through the loop, you need to multiply your previous\n    # term(n) you got to total\n    #base case--> start from n and go down to 1\n    # if n is 1, return 1 * total\n\n","SubmissionTime":"2016-02-11T16:41:45.294757","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":26,"studentId":0,"date":"2016-02-08 11:40:11.329357","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, x = 1, 1 =>           \r\n    total, x = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, x = 0, 1\n    while x <= n:\n        total, x = total * term(x), x +1\n    return total \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, x = 1, 1\n    while x <= n:\n        total, x = total * term(x), x +1\n    return total \n\n","SubmissionTime":"2016-02-08T11:40:11.329357","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":27,"studentId":0,"date":"2016-02-15 16:26:42.611010","diff":"\r\nInputObject                                  SideIndicator\r\n-----------                                  -------------\r\n    if n < 1 or not isinstance(n, int):      =>           \r\n        print(\"n is not a positive integer\") =>           \r\n        return -99                           =>           \r\n    if n == 1:                               =>           \r\n        return term(1)                       =>           \r\n    return term(n) * product(n-1, term)      =>           \r\n                                             =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n < 1 or not isinstance(n, int):\n        print(\"n is not a positive integer\")\n        return -99\n\n    if n == 1:\n        return term(1)\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-15T16:26:42.61101","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":28,"studentId":0,"date":"2016-02-08 10:54:21.882554","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    if n == 0:                          =>           \r\n    if n == 1:                          =>           \r\n    return term(n)*product(n-1,term)    =>           \r\n    \"\"\"if term(n) == 0:                 <=           \r\n    if term(n) == 1:                    <=           \r\n    return n*product(term(n-1),term)\"\"\" <=           \r\n    return 1                            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \"\"\"if term(n) == 0:\n    \treturn term(0)\n    if term(n) == 1:\n    \treturn term(1)\n    return n*product(term(n-1),term)\"\"\"\n    return 1\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n    \treturn term(0)\n    if n == 1:\n    \treturn term(1)\n    return term(n)*product(n-1,term)\n\n","SubmissionTime":"2016-02-08T10:54:21.882554","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":29,"studentId":0,"date":"2016-02-10 14:27:23.176928","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    return helper(1,n) =>           \r\n    return helper(0,n) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(a,n):\n        if n==0:\n            return a\n        else:\n            a=a*term(n)\n        return helper(a,n-1)\n    return helper(0,n)\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(a,n):\n        if n==0:\n            return a\n        else:\n            a=a*term(n)\n        return helper(a,n-1)\n    return helper(1,n)\n","SubmissionTime":"2016-02-10T14:27:23.176928","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":30,"studentId":0,"date":"2016-02-16 10:39:58.807372","diff":"\r\nInputObject                         SideIndicator\r\n-----------                         -------------\r\n    while count < n:                =>           \r\n        value = value * term(count) =>           \r\n    return value * term(n)          =>           \r\n    while count != n:               <=           \r\n        value *= term(count)        <=           \r\n    return value                    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    count = 1\n    value = 1\n    while count != n:\n        value *= term(count)\n        count += 1\n    return value\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    count = 1\n    value = 1\n    while count < n:\n        value = value * term(count)\n        count += 1\n    return value * term(n)\n\n\n","SubmissionTime":"2016-02-16T10:39:58.807372","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":31,"studentId":0,"date":"2016-02-14 21:43:21.578539","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    count = 1\n    while count <= n:\n        total = total*term(count)\n        count = count + 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    count = 1\n    while count <= n:\n        total = total*term(count)\n        count = count + 1\n    return total\n\n\n","SubmissionTime":"2016-02-14T21:43:21.578539","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":32,"studentId":0,"date":"2016-02-16 20:30:38.907520","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    if n <= 0:                              =>           \r\n        return 1                            =>           \r\n        return term(n) * product(n-1, term) =>           \r\n    if n <= 0:                              =>           \r\n        return 1                            =>           \r\n    else:                                   =>           \r\n        return n * factorial(n-1)           =>           \r\n    else:                                   =>           \r\n    return term(n) + product(n-1,term)      <=           \r\n    return _______                          <=           \r\n    \"*** YOUR CODE HERE ***\"                <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    return term(n) + product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n <= 0:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-16T20:30:38.90752","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) + product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) + product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) + product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) + product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) + product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) + product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) + product(n-1,term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":33,"studentId":0,"date":"2016-02-13 18:29:25.719975","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-13T18:29:25.719975","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":34,"studentId":0,"date":"2016-02-10 15:43:17.240753","diff":"\r\nInputObject                            SideIndicator\r\n-----------                            -------------\r\n    return partial_product(n, term, 1) =>           \r\n    return partial_product(n, term, n) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def partial_product(n, term, k):\n        if n==1:\n            return k\n        else:\n            k*=term(n)\n            return partial_product(n-1, term, k)\n    return partial_product(n, term, n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def partial_product(n, term, k):\n        if n==1:\n            return k\n        else:\n            k*=term(n)\n            return partial_product(n-1, term, k)\n    return partial_product(n, term, 1)\n\n","SubmissionTime":"2016-02-10T15:43:17.240753","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","18","","# Error: expected","#     6","# but got","#     18","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":35,"studentId":0,"date":"2016-02-11 14:48:42.380703","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-11T14:48:42.380703","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":36,"studentId":0,"date":"2016-02-13 17:22:58.822538","diff":"\r\nInputObject                                                 SideIndicator\r\n-----------                                                 -------------\r\n    total = 1                                               =>           \r\n        total, counter = total * term(counter), counter + 1 =>           \r\n    total = 0                                               <=           \r\n        total, counter = total + term(counter), counter + 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter = 1\n    total = 0\n    while counter <= n:\n        total, counter = total + term(counter), counter + 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter = 1\n    total = 1\n    while counter <= n:\n        total, counter = total * term(counter), counter + 1\n    return total\n\n\n","SubmissionTime":"2016-02-13T17:22:58.822538","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":37,"studentId":0,"date":"2016-02-11 23:49:08.972475","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n    return term(n)*product(n-1,term)     =>           \r\n    return turm(n)*product(n-1,term)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if (n==1):\n    \treturn term(n)\n    return turm(n)*product(n-1,term)    \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if (n==1):\n    \treturn term(n)\n    return term(n)*product(n-1,term)    \n\n","SubmissionTime":"2016-02-11T23:49:08.972475","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return turm(n)*product(n-1,term)","NameError: name 'turm' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":38,"studentId":0,"date":"2016-02-09 02:40:00.368825","diff":"\r\nInputObject                   SideIndicator\r\n-----------                   -------------\r\n    prod = 1                  =>           \r\n        prod = prod * term(i) =>           \r\n    prod = 0                  <=           \r\n        prod += term(i)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    prod = 0\n    while i < n + 1:\n        prod += term(i)\n        i += 1\n    return prod\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    prod = 1\n    while i < n + 1:\n        prod = prod * term(i)\n        i += 1\n    return prod\n\n","SubmissionTime":"2016-02-09T02:40:00.368825","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":39,"studentId":0,"date":"2016-02-13 12:57:29.035402","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    return n*product(n-1, term)         <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(n)\n    return n*product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(n)\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-13T12:57:29.035402","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":40,"studentId":0,"date":"2016-02-16 19:59:38.973309","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n    while index <= n:             =>           \r\n        sum1 = sum1 * term(index) =>           \r\n        index += 1                =>           \r\n    return product (n, identity)  =>           \r\n    while i <= n:                 <=           \r\n        sum1 = sum1 * term(i)     <=           \r\n        i += 1                    <=           \r\n    return _______                <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    index, sum1 =  1, 1\n    while i <= n:\n        sum1 = sum1 * term(i)\n        i += 1\n    return sum1\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    index, sum1 =  1, 1\n    while index <= n:\n        sum1 = sum1 * term(index)\n        index += 1\n    return sum1\n\n","SubmissionTime":"2016-02-16T19:59:38.973309","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    while i <= n:","UnboundLocalError: local variable 'i' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":41,"studentId":0,"date":"2016-02-09 16:04:13.693940","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    i = 1                                 =>           \r\n    def helper(n,i,term):                 =>           \r\n        if i == n:                        =>           \r\n        return term(i)*helper(n,i+1,term) =>           \r\n    return helper(n,i,term)               =>           \r\n    i, product = 1, 0                     <=           \r\n    def helper(n,i,term, product):        <=           \r\n        if n == i:                        <=           \r\n        product += term(i)                <=           \r\n        i += 1                            <=           \r\n    return helper(n,i,term,product)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, product = 1, 0\n    def helper(n,i,term, product):\n        if n == i:\n            return term(i)\n        product += term(i)\n        i += 1\n    return helper(n,i,term,product)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    def helper(n,i,term):\n        if i == n:\n            return term(i)\n        return term(i)*helper(n,i+1,term)\n    return helper(n,i,term)\n\n","SubmissionTime":"2016-02-09T16:04:13.69394","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":42,"studentId":0,"date":"2016-02-08 22:05:36.503592","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        return product(n-1, term)*term(n) =>           \r\n        return product(n-1, term)         <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n<=1:\n        return term(n)\n    else:\n        return product(n-1, term)\n  \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n<=1:\n        return term(n)\n    else:\n        return product(n-1, term)*term(n)\n  \n\n","SubmissionTime":"2016-02-08T22:05:36.503592","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":43,"studentId":0,"date":"2016-02-11 15:21:57.141722","diff":"\r\nInputObject                         SideIndicator\r\n-----------                         -------------\r\n    while identity <= n:            =>           \r\n    return total                    =>           \r\n                                    =>           \r\n    while identity < n:             <=           \r\n    return product(total, identity) <=           \r\n                                    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, identity = 1, 1\n    while identity < n:\n        total, identity = total * term(identity), identity + 1\n    return product(total, identity)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, identity = 1, 1\n    while identity <= n:\n        total, identity = total * term(identity), identity + 1\n    return total\n    \n","SubmissionTime":"2016-02-11T15:21:57.141722","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(total, identity)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    total, identity = total * term(identity), identity + 1","TypeError: 'int' object is not callable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":44,"studentId":0,"date":"2016-02-08 22:35:25.275808","diff":"\r\nInputObject               SideIndicator\r\n-----------               -------------\r\n    total, counter = 1, 1 =>           \r\n    total, counter = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, counter = 0, 1\n    while counter <= n:\n        total, counter =  total * term(counter), counter + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, counter = 1, 1\n    while counter <= n:\n        total, counter =  total * term(counter), counter + 1\n    return total\n\n","SubmissionTime":"2016-02-08T22:35:25.275808","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":45,"studentId":0,"date":"2016-02-12 14:45:24.801642","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    return term(n) * product(n-1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    return term(n) * product(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-12T14:45:24.801642","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return term(n) * product(n-1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":46,"studentId":0,"date":"2016-02-10 18:15:11.163126","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n            total = total * term(x)     =>           \r\n            total = total * term(x - 1) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    def helper(x, total):\n        if x == 1:\n            return total\n        else:\n            total = total * term(x - 1)\n            return helper(x - 1, total)\n    return helper(n, total)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    def helper(x, total):\n        if x == 1:\n            return total\n        else:\n            total = total * term(x)\n            return helper(x - 1, total)\n    return helper(n, total)\n\n","SubmissionTime":"2016-02-10T18:15:11.163126","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":47,"studentId":0,"date":"2016-02-16 16:20:28.113902","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n==1:           =>           \r\n        return term(1) =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    return product(n-1,term)*term(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(1)\n    return product(n-1,term)*term(n)\n\n","SubmissionTime":"2016-02-16T16:20:28.113902","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return product(n-1,term)*term(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return product(n-1,term)*term(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return product(n-1,term)*term(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return product(n-1,term)*term(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return product(n-1,term)*term(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return product(n-1,term)*term(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return product(n-1,term)*term(n)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":48,"studentId":0,"date":"2016-02-09 09:18:04.902954","diff":"\r\nInputObject                SideIndicator\r\n-----------                -------------\r\n            return term(n) =>           \r\n            return n       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def times(x):\n        if x==n:\n            return n\n        else:\n            return term(x)*times(increment(x))\n    return times(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def times(x):\n        if x==n:\n            return term(n)\n        else:\n            return term(x)*times(increment(x))\n    return times(1)\n\n","SubmissionTime":"2016-02-09T09:18:04.902954","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","12","","# Error: expected","#     36","# but got","#     12","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":49,"studentId":0,"date":"2016-02-11 14:59:22.107714","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n        total = total * term(k)\n        k = k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 1\n    while k <= n:\n        total = total * term(k)\n        k = k + 1\n    return total\n\n","SubmissionTime":"2016-02-11T14:59:22.107714","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":50,"studentId":0,"date":"2016-02-11 12:33:32.464880","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    return term(n) * product(term(n-1)) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    return term(n) * product(term(n-1))\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-11T12:33:32.46488","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return term(n) * product(term(n-1))","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":51,"studentId":0,"date":"2016-02-10 17:50:57.044291","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total = total * term(k)\n        k += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total = total * term(k)\n        k += 1\n    return total\n\n","SubmissionTime":"2016-02-10T17:50:57.044291","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":52,"studentId":0,"date":"2016-02-10 20:34:53.563535","diff":"\r\nInputObject                                           SideIndicator\r\n-----------                                           -------------\r\n    value=1                                           =>           \r\n            return find_value(value*term(n),n-1,term) =>           \r\n    value=0                                           <=           \r\n            return find_value(value+term(n),n-1,term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    value=0\n    def find_value(value, n, term):\n        if n<=0:\n            return value\n        else:\n            return find_value(value+term(n),n-1,term)\n    return find_value(value, n, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    value=1\n    def find_value(value, n, term):\n        if n<=0:\n            return value\n        else:\n            return find_value(value*term(n),n-1,term)\n    return find_value(value, n, term)\n\n","SubmissionTime":"2016-02-10T20:34:53.563535","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":53,"studentId":0,"date":"2016-02-15 15:42:49.560158","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n        return term(n)*product(n-1,term) =>           \r\n        return n*product(n-1,term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==1:\n        return term(1)\n    else:\n        return n*product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==1:\n        return term(1)\n    else:\n        return term(n)*product(n-1,term)\n\n","SubmissionTime":"2016-02-15T15:42:49.560158","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":55,"studentId":0,"date":"2016-02-10 18:17:56.947256","diff":"\r\nInputObject                                        SideIndicator\r\n-----------                                        -------------\r\n        return term(n) * product(n-1, term)        =>           \r\n        return term(1)                             =>           \r\n        return product(identity(n), identity(n-1)) <=           \r\n        return 1                                   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n > 0:\n        return product(identity(n), identity(n-1))\n    else:\n        return 1\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n > 0:\n        return term(n) * product(n-1, term)\n    else:\n        return term(1)\n\n","SubmissionTime":"2016-02-10T18:17:56.947256","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return product(identity(n), identity(n-1))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return product(identity(n), identity(n-1))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return product(identity(n), identity(n-1))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return product(identity(n), identity(n-1))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return product(identity(n), identity(n-1))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return product(identity(n), identity(n-1))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    if n > 0:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":56,"studentId":0,"date":"2016-02-15 17:40:52.546294","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    if n==1:                =>           \r\n        return int(term(n)) =>           \r\n                            =>           \r\n    if n==0:                <=           \r\n        return              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return\n    else:\n        return int(term(n))*product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    if n==1:\n        return int(term(n))\n    else:\n        return int(term(n))*product(n-1,term)\n\n","SubmissionTime":"2016-02-15T17:40:52.546294","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return int(term(n))*product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return int(term(n))*product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return int(term(n))*product(n-1,term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":57,"studentId":0,"date":"2016-02-12 13:40:27.199940","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    return term(n) *product((n-1), term)    =>           \r\n    return term(n) *product((n-1), term(x)) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    if n == 0:\n        return 0\n    if n == 1:\n        return term(1)\n    return term(n) *product((n-1), term(x))\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    if n == 0:\n        return 0\n    if n == 1:\n        return term(1)\n    return term(n) *product((n-1), term)\n\n\n","SubmissionTime":"2016-02-12T13:40:27.19994","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return term(n) *product((n-1), term(x))","NameError: name 'x' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":58,"studentId":0,"date":"2016-02-09 14:56:57.762375","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n    while a < n:                           =>           \r\n    return product(n, identity)            =>           \r\n    a = 1                                  =>           \r\n    Total = term(a)                        =>           \r\n    while a < n:                           =>           \r\n        Total = combiner(Total, term(a+1)) =>           \r\n        a += 1                             =>           \r\n    return combiner(base, Total)           =>           \r\n                                           =>           \r\n    while a <= n:                          <=           \r\n    if n == 0:                             <=           \r\n        return 1                           <=           \r\n        return product(n, identity)        <=           \r\n    else:                                  <=           \r\n    \"*** YOUR CODE HERE ***\"               <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a = 1\n    Product = term(a)\n    while a <= n:\n        Product = Product * term(a+1)\n        a += 1\n    return Product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a = 1\n    Product = term(a)\n    while a < n:\n        Product = Product * term(a+1)\n        a += 1\n    return Product\n\n","SubmissionTime":"2016-02-09T14:56:57.762375","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","24","","# Error: expected","#     6","# but got","#     24","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":59,"studentId":0,"date":"2016-02-08 22:39:19.079240","diff":"\r\nInputObject                                  SideIndicator\r\n-----------                                  -------------\r\n        num = term(counter)                  =>           \r\n        mul = mul * num                      =>           \r\n        num, mul = term(counter), mul * num  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter = 1\n    mul = 1\n    while counter <= n:\n        num, mul = term(counter), mul * num \n        counter = counter + 1\n    return mul\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter = 1\n    mul = 1\n    while counter <= n:\n        num = term(counter)\n        mul = mul * num \n        counter = counter + 1\n    return mul\n\n","SubmissionTime":"2016-02-08T22:39:19.07924","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    num, mul = term(counter), mul * num","UnboundLocalError: local variable 'num' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":60,"studentId":0,"date":"2016-02-11 21:46:19.569462","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while k <= n: =>           \r\n    return total  =>           \r\n                  =>           \r\n    if k <= n:    <=           \r\n                  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    k = 1\n    if k <= n:\n        total = total * term(k)\n        k += 1\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    k = 1\n    while k <= n:\n        total = total * term(k)\n        k += 1\n    return total\n\n","SubmissionTime":"2016-02-11T21:46:19.569462","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":61,"studentId":0,"date":"2016-02-11 14:28:18.230689","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n    final = 1                              =>           \r\n        final = final * result             =>           \r\n        counter += 1                       =>           \r\n        if n == 0:                         <=           \r\n            return 0                       <=           \r\n        if n == 1:                         <=           \r\n            return 1                       <=           \r\n        final = result * term(counter + 1) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter = 1\n    while counter != n + 1:\n        if n == 0:\n            return 0\n        if n == 1:\n            return 1\n        result = term(counter)\n        final = result * term(counter + 1)\n    return final \n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter = 1\n    final = 1\n    while counter != n + 1:\n        result = term(counter)\n        final = final * result\n        counter += 1\n    return final \n\n\n\n","SubmissionTime":"2016-02-11T14:28:18.230689","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":62,"studentId":0,"date":"2016-02-14 20:35:05.834455","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n    def multi(x,func):                     =>           \r\n            return func(n)                 =>           \r\n            return multi(x+1,func)*func(x) =>           \r\n    return multi(1,term)                   =>           \r\n    def multi(x):                          <=           \r\n            return term(n)                 <=           \r\n            return term(x+1)*x             <=           \r\n    return multi(1)                        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def multi(x):\n        if x==n:\n            return term(n)\n        else:\n            return term(x+1)*x\n    return multi(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def multi(x,func):\n        if x==n:\n            return func(n)\n        else:\n            return multi(x+1,func)*func(x)\n    return multi(1,term)\n\n","SubmissionTime":"2016-02-14T20:35:05.834455","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":63,"studentId":0,"date":"2016-02-09 16:23:18.709480","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 0\n    while n > 0:\n        total = total * term (n)\n        n -= 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    while n > 0:\n        total = total * term (n)\n        n -= 1\n    return total\n\n","SubmissionTime":"2016-02-09T16:23:18.70948","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":64,"studentId":0,"date":"2016-02-09 15:28:08.859623","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        term(n) * product(n-1, term)        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-09T15:28:08.859623","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    term(n) * product(n-1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":65,"studentId":0,"date":"2016-02-16 12:29:41.767617","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n    x, y = n, 1                   =>           \r\n    while x >= 1:                 =>           \r\n        x, y = x - 1, y * term(x) =>           \r\n    return y                      =>           \r\n    while x >= 1:                 =>           \r\n        temp = x                  =>           \r\n        y = y * term(temp)        =>           \r\n                                  =>           \r\n    while x > 1:                  <=           \r\n        y = y * term(x)           <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    x = n\n    y = 1\n    while x > 1: \n        x -= 1\n        y = y * term(x)\n    return y \n\n    \n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    x, y = n, 1\n    while x >= 1:\n        x, y = x - 1, y * term(x)\n    return y\n\n    x = n\n    y = 1\n    while x >= 1: \n        temp = x \n        x -= 1\n        y = y * term(temp)\n    return y \n\n    \n","SubmissionTime":"2016-02-16T12:29:41.767617","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":66,"studentId":0,"date":"2016-02-09 10:42:05.802008","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n        return 1 =>           \r\n        return   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    if (n==0):\n        return\n    else:\n        return term(n)* product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    if (n==0):\n        return 1\n    else:\n        return term(n)* product(n-1, term)\n\n","SubmissionTime":"2016-02-09T10:42:05.802008","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return term(n)* product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return term(n)* product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return term(n)* product(n-1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":67,"studentId":0,"date":"2016-02-11 23:47:37.818295","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    total=1                     =>           \r\n        total = term(i) * total =>           \r\n    total=0                     <=           \r\n        total = total * term(i) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=1\n    total=0\n    while i<=n:\n        total = total * term(i)\n        i+=1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=1\n    total=1\n    while i<=n:\n        total = term(i) * total\n        i+=1\n    return total\n\n","SubmissionTime":"2016-02-11T23:47:37.818295","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":68,"studentId":0,"date":"2016-02-10 13:53:58.519800","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n    if n == 1:                                =>           \r\n        return term(1)                        =>           \r\n        return term(n) * product(n - 1, term) =>           \r\n    if n == 0:                                <=           \r\n        return 0                              <=           \r\n        return term(n) + product(n - 1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return term(n) + product(n - 1, term)\n    \n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term)\n    \n","SubmissionTime":"2016-02-10T13:53:58.5198","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":69,"studentId":0,"date":"2016-02-15 18:11:47.294120","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        product, k = product*(term(k)), k+1   =>           \r\n        product, k = product*(term-f(k)), k+1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, product = 1, 1\n    while k <= n:\n        product, k = product*(term-f(k)), k+1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, product = 1, 1\n    while k <= n:\n        product, k = product*(term(k)), k+1\n    return product\n\n","SubmissionTime":"2016-02-15T18:11:47.29412","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    product, k = product*(term-f(k)), k+1","NameError: name 'f' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":70,"studentId":0,"date":"2016-02-13 13:48:26.335831","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n\n","SubmissionTime":"2016-02-13T13:48:26.335831","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":71,"studentId":0,"date":"2016-02-09 11:06:19.892156","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return 1                            =>           \r\n        return term(n) * product(n-1, term) =>           \r\n        return                              <=           \r\n        return term * product(n-1, term)    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n ==0:\n        return\n    else:\n        return term * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n ==0:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-09T11:06:19.892156","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term * product(n-1, term)","TypeError: unsupported operand type(s) for *: 'function' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":73,"studentId":0,"date":"2016-02-08 19:43:47.072077","diff":"\r\nInputObject                   SideIndicator\r\n-----------                   -------------\r\n    for num in range(1, n+1): =>           \r\n    for num in range(n+1):    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for num in range(n+1):\n        total = total * term(num)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for num in range(1, n+1):\n        total = total * term(num)\n    return total\n\n","SubmissionTime":"2016-02-08T19:43:47.072077","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":74,"studentId":0,"date":"2016-02-10 07:13:05.780423","diff":"\r\nInputObject        SideIndicator\r\n-----------        -------------\r\n        p*=term(_) =>           \r\n        p*=_       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    p=1\n    for _ in range(1,n+1):\n        p*=_\n    return p\n        \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    p=1\n    for _ in range(1,n+1):\n        p*=term(_)\n    return p\n        \n\n","SubmissionTime":"2016-02-10T07:13:05.780423","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":75,"studentId":0,"date":"2016-02-13 23:27:43.204325","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    counter=n                           =>           \r\n    z=1                                 =>           \r\n    while 2<=counter:                   =>           \r\n        x=term(n)                       =>           \r\n        y=term(n-1)                     =>           \r\n        counter-=2                      =>           \r\n        n-=2                            =>           \r\n        z*=x*y                          =>           \r\n    return z                            =>           \r\n    if term==identity:                  <=           \r\n        n*n-1                           <=           \r\n        n**2*(n-1)**2                   <=           \r\n    if n==0:                            <=           \r\n        return 1                        <=           \r\n    else:                               <=           \r\n        return product(n-1,lambda n: x) <=           \r\n    else:                               <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if term==identity:\n        n*n-1\n    else:\n        n**2*(n-1)**2\n    if n==0:\n        return 1\n    else:\n        return product(n-1,lambda n: x)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter=n\n    z=1\n    while 2<=counter:\n        x=term(n)\n        y=term(n-1)\n        counter-=2\n        n-=2\n        z*=x*y\n    return z\n\n","SubmissionTime":"2016-02-13T23:27:43.204325","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":76,"studentId":0,"date":"2016-02-13 22:22:31.546091","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term*product(n-1, term)      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return term*product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-13T22:22:31.546091","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term*product(n-1, term)","TypeError: unsupported operand type(s) for *: 'function' and 'int'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":77,"studentId":0,"date":"2016-02-09 15:10:35.377875","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    return result   =>           \r\n    return resultcd <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result=1\n    while n>0:\n        result= result*term(n)\n        n-=1\n    return resultcd\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result=1\n    while n>0:\n        result= result*term(n)\n        n-=1\n    return result\n\n","SubmissionTime":"2016-02-09T15:10:35.377875","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return resultcd","NameError: name 'resultcd' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":78,"studentId":0,"date":"2016-02-14 12:36:32.309182","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    sum=1   =>           \r\n    sum=0   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    sum=0\n    for i in range(1,n+1):\n        sum=sum*term(i) \n    return sum\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    sum=1\n    for i in range(1,n+1):\n        sum=sum*term(i) \n    return sum\n\n","SubmissionTime":"2016-02-14T12:36:32.309182","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":79,"studentId":0,"date":"2016-02-08 16:29:12.433863","diff":"\r\nInputObject                            SideIndicator\r\n-----------                            -------------\r\n    while counter<n:                   =>           \r\n        if term==identity:             =>           \r\n            total*=tracker             =>           \r\n            total*=(tracker**2)        =>           \r\n            tracker+=1                 =>           \r\n    return total                       =>           \r\n                                       =>           \r\n                                       =>           \r\n    while(counter>n):                  <=           \r\n        if term == identity:           <=           \r\n            total*=tracker*(tracker+1) <=           \r\n            n*=(n+1)**2                <=           \r\n        return total                   <=           \r\n                                       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n    counter=0\n    tracker=1\n    total=1\n    while(counter>n):\n        if term == identity:\n            total*=tracker*(tracker+1)\n            counter+=1\n            tracker+=1\n        elif term==square:\n            n*=(n+1)**2\n            counter+=1\n            \n        return total\n    \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    counter=0\n    tracker=1\n    total=1\n    while counter<n:\n        if term==identity:\n            total*=tracker\n            tracker+=1\n            counter+=1\n            \n        elif term==square:\n            total*=(tracker**2)\n            tracker+=1\n            counter+=1\n\n    return total\n            \n\n\n","SubmissionTime":"2016-02-08T16:29:12.433863","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":80,"studentId":0,"date":"2016-02-13 15:47:59.862372","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    else:\n        return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-13T15:47:59.862372","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":81,"studentId":0,"date":"2016-02-08 17:55:08.443066","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n    total, k = 1, 1  =>           \r\n    total, k = 1, 0  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 0 \n    while k <= n: \n        total, k = total * term(k), k + 1\n    return total \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1 \n    while k <= n: \n        total, k = total * term(k), k + 1\n    return total \n\n","SubmissionTime":"2016-02-08T17:55:08.443066","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":82,"studentId":0,"date":"2016-02-09 17:46:17.670914","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n)*product(n - 1, term) =>           \r\n        return term(n)*term(n-1)            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    else:\n        return term(n)*term(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    else:\n        return term(n)*product(n - 1, term)\n\n","SubmissionTime":"2016-02-09T17:46:17.670914","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":83,"studentId":0,"date":"2016-02-11 23:36:36.010679","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    for i in range(1, n + 1):\n        total = total * term(i)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for i in range(1, n + 1):\n        total = total * term(i)\n    return total\n\n","SubmissionTime":"2016-02-11T23:36:36.010679","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":84,"studentId":0,"date":"2016-02-12 20:04:11.055231","diff":"\r\nInputObject           SideIndicator\r\n-----------           -------------\r\n    product = 1       =>           \r\n    product = term(n) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product = term(n)\n    while n>0:\n    \tn = n-1\n    \tproduct = product * term(n)\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product = 1\n    while n>0:\n    \tproduct = product * term(n)\n    \tn = n-1\n    return product\n\n","SubmissionTime":"2016-02-12T20:04:11.055231","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":85,"studentId":0,"date":"2016-02-16 17:41:33.988557","diff":"\r\nInputObject                                           SideIndicator\r\n-----------                                           -------------\r\n        return mul(term(n), product(n-1, term))       =>           \r\n        return combiner(term(n), combiner(n-1, term)) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    if n == 1:\n\n        return term(1)\n    else:\n        \n        return combiner(term(n), combiner(n-1, term))\n    \n\n\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    if n == 1:\n\n        return term(1)\n    else:\n        \n        return mul(term(n), product(n-1, term))\n    \n\n\n    \"*** YOUR CODE HERE ***\"\n\n","SubmissionTime":"2016-02-16T17:41:33.988557","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return combiner(term(n), combiner(n-1, term))","NameError: name 'combiner' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":86,"studentId":0,"date":"2016-02-09 17:02:49.215782","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    while x<n+1: =>           \r\n    while x<n:   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x=1\n    total=1\n    while x<n:\n        total=total*term(x)\n        x+=1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x=1\n    total=1\n    while x<n+1:\n        total=total*term(x)\n        x+=1\n    return total\n\n","SubmissionTime":"2016-02-09T17:02:49.215782","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":87,"studentId":0,"date":"2016-02-08 13:42:31.734803","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n        return term(n) * term(n - 1)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * term(n - 1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-08T13:42:31.734803","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":88,"studentId":0,"date":"2016-02-08 20:31:09.343384","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    while n >0:  =>           \r\n    while n < 0: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    total = 1\n    while n < 0:\n        total = total * term(n)\n        n = n -1 \n\n    return total\n    \n    \n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    total = 1\n    while n >0:\n        total = total * term(n)\n        n = n -1 \n\n    return total\n    \n    \n\n\n","SubmissionTime":"2016-02-08T20:31:09.343384","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":89,"studentId":0,"date":"2016-02-09 20:57:41.070962","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    total=1 =>           \r\n    total=0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=0\n    total=0\n    while i<n:\n        i+=1\n        total=total*term(i)\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=0\n    total=1\n    while i<n:\n        i+=1\n        total=total*term(i)\n    return total\n\n\n","SubmissionTime":"2016-02-09T20:57:41.070962","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":90,"studentId":0,"date":"2016-02-10 14:40:28.803018","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    def helper(n):                        =>           \r\n        if n > 0:                         =>           \r\n            return term(n) * helper(n-1)  =>           \r\n        else:                             =>           \r\n            return 1                      =>           \r\n    return helper(n)                      =>           \r\n    total = 0                             <=           \r\n    if n > 0:                             <=           \r\n        def helper(n):                    <=           \r\n            total = term(n) * helper(n-1) <=           \r\n    else:                                 <=           \r\n        return total                      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    if n > 0:\n        def helper(n):\n            total = term(n) * helper(n-1)\n    else:\n        return total\n\n\n\n    # a = 1\n    # total = 0\n    # def helper(a):\n    #     if a < n:\n    #         b = term(a)\n    #         a = a + 1\n    #     return b * helper(a)\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(n):\n        if n > 0:\n            return term(n) * helper(n-1)\n        else:\n            return 1\n    return helper(n)\n\n\n\n    # a = 1\n    # total = 0\n    # def helper(a):\n    #     if a < n:\n    #         b = term(a)\n    #         a = a + 1\n    #     return b * helper(a)\n\n\n\n","SubmissionTime":"2016-02-10T14:40:28.803018","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":91,"studentId":0,"date":"2016-02-14 18:35:21.320657","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    return total =>           \r\n    return x     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for x in range(1, n + 1):\n        total *= term(x)\n    return x\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for x in range(1, n + 1):\n        total *= term(x)\n    return total\n\n","SubmissionTime":"2016-02-14T18:35:21.320657","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","3","","# Error: expected","#     6","# but got","#     3","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":92,"studentId":0,"date":"2016-02-10 17:50:36.636660","diff":"\r\nInputObject           SideIndicator\r\n-----------           -------------\r\n    return prod(1,1)  =>           \r\n                      =>           \r\n    return prod(12,1) <=           \r\n                      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def prod(k,ans):\n        if k ==n+1:\n            return ans\n        else:\n            ans*=term(k)\n            return prod(k+1,ans)\n    return prod(12,1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def prod(k,ans):\n        if k ==n+1:\n            return ans\n        else:\n            ans*=term(k)\n            return prod(k+1,ans)\n    return prod(1,1)\n\n","SubmissionTime":"2016-02-10T17:50:36.63666","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in prod","    return prod(k+1,ans)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in prod","    return prod(k+1,ans)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in prod","    return prod(k+1,ans)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in prod","    return prod(k+1,ans)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in prod","    return prod(k+1,ans)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in prod","    return prod(k+1,ans)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in prod","    if k ==n+1:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":93,"studentId":0,"date":"2016-02-08 08:23:17.778319","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n        total = total * term(n)   =>           \r\n        total = total * term(n-1) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n > 0:\n        total = total * term(n-1)\n        n -= 1\n    return total \n        \n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n > 0:\n        total = total * term(n)\n        n -= 1\n    return total \n        \n","SubmissionTime":"2016-02-08T08:23:17.778319","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":94,"studentId":0,"date":"2016-02-09 21:14:20.178934","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n        return 1 =>           \r\n        return 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if (n == 0):\n        return 0\n    else:\n        return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if (n == 0):\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-09T21:14:20.178934","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":95,"studentId":0,"date":"2016-02-10 10:45:27.142431","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    total = 1                             =>           \r\n        total, n = total * term(n), n - 1 =>           \r\n    total = 0                             <=           \r\n        total, n = total + term(n), n - 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    while n > 0:\n        total, n = total + term(n), n - 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n > 0:\n        total, n = total * term(n), n - 1\n    return total\n\n","SubmissionTime":"2016-02-10T10:45:27.142431","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":96,"studentId":0,"date":"2016-02-08 10:59:52.008527","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    if n == 1:   =>           \r\n        return 1 =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T10:59:52.008527","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return term(n) * product(n-1, term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":97,"studentId":0,"date":"2016-02-11 14:56:36.309848","diff":"\r\nInputObject     SideIndicator\r\n-----------     -------------\r\n    return f(n) =>           \r\n    f(n)        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def f(n):\n        if n==1:\n            return 1\n        else:\n            return term(n)*g(n-1)\n    def g(n):\n        if n==1:\n            return 1\n        else:\n            return term(n)*f(n-1)\n    f(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def f(n):\n        if n==1:\n            return 1\n        else:\n            return term(n)*g(n-1)\n    def g(n):\n        if n==1:\n            return 1\n        else:\n            return term(n)*f(n-1)\n    return f(n)\n\n","SubmissionTime":"2016-02-11T14:56:36.309848","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":98,"studentId":0,"date":"2016-02-15 16:11:24.394658","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 0\n    while i <= n:\n        total *= term(i)\n        i+=1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i <= n:\n        total *= term(i)\n        i+=1\n    return total\n\n","SubmissionTime":"2016-02-15T16:11:24.394658","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":99,"studentId":0,"date":"2016-02-08 19:55:10.539700","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n    i = 1                                  =>           \r\n    total = 1                              =>           \r\n    while i <= n:                          =>           \r\n        total *= term(i)                   =>           \r\n        i += 1                             =>           \r\n    return total                           =>           \r\n    #lst = []                              =>           \r\n    #for i in range (1, n + 1):            =>           \r\n    #    lst.append(i)                     =>           \r\n    #return combine [term(x) for x in lst] =>           \r\n    lst = []                               <=           \r\n    for i in range (1, n + 1):             <=           \r\n        lst.append(i)                      <=           \r\n    return [term(x) for x in lst]          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    lst = []\n    for i in range (1, n + 1):\n        lst.append(i)\n    return [term(x) for x in lst]\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    total = 1\n    while i <= n:\n        total *= term(i)\n        i += 1\n    return total\n    #lst = []\n    #for i in range (1, n + 1):\n    #    lst.append(i)\n    #return combine [term(x) for x in lst]\n\n","SubmissionTime":"2016-02-08T19:55:10.5397","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","[1, 2, 3]","","# Error: expected","#     6","# but got","#     [1, 2, 3]","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":101,"studentId":0,"date":"2016-02-08 15:05:07.072348","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    #total, i = 1, 1                        =>           \r\n    #while i <= n:                          =>           \r\n    #    total *= term(i)                   =>           \r\n    #    i += 1                             =>           \r\n    #return total                           =>           \r\n    #OR RECURSIVELY                         =>           \r\n    if n == 1:                              =>           \r\n        return term(n)                      =>           \r\n        return term(n) * product(n-1, term) =>           \r\n    return product(n, identity)             =>           \r\n    else:                                   =>           \r\n                                            =>           \r\n    total, i = 1, 0                         <=           \r\n    while i <= n:                           <=           \r\n        total *= term(i)                    <=           \r\n        i += 1                              <=           \r\n    return total                            <=           \r\n    return _______                          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, i = 1, 0\n    while i <= n:\n        total *= term(i)\n        i += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    #total, i = 1, 1\n    #while i <= n:\n    #    total *= term(i)\n    #    i += 1\n    #return total\n\n    #OR RECURSIVELY\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T15:05:07.072348","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":102,"studentId":0,"date":"2016-02-10 19:28:31.979954","diff":"\r\nInputObject    SideIndicator\r\n-----------    -------------\r\n    if n == 1: =>           \r\n    if n == 0: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-10T19:28:31.979954","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":103,"studentId":0,"date":"2016-02-12 11:38:32.933504","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        return term(n)*product(n-1, term) =>           \r\n    if n == 1:                            =>           \r\n        return 1                          =>           \r\n        return n*factorial(n-1)           =>           \r\n    else:                                 =>           \r\n        return term(n)*term(n-1)          <=           \r\n    return _______                        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n)*term(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-12T11:38:32.933504","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":104,"studentId":0,"date":"2016-02-08 14:18:46.596390","diff":"\r\nInputObject                    SideIndicator\r\n-----------                    -------------\r\n    total = 1                  =>           \r\n    while n > 1:               =>           \r\n        total = total *term(n) =>           \r\n    return total               =>           \r\n    while n > 0:               <=           \r\n        n = k                  <=           \r\n        k = term(k)* term(n)   <=           \r\n    return k                   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 1:\n        return 0\n    while n > 0:\n        n = k\n        k = term(k)* term(n)\n        n = n-1\n    return k\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 1:\n        return 0\n    total = 1\n    while n > 1:\n        total = total *term(n)\n        n = n-1\n    return total\n\n","SubmissionTime":"2016-02-08T14:18:46.59639","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    n = k","UnboundLocalError: local variable 'k' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":105,"studentId":0,"date":"2016-02-08 12:23:44.930594","diff":"\r\nInputObject                         SideIndicator\r\n-----------                         -------------\r\n    k, product = 1, 1               =>           \r\n        product = product * term(k) =>           \r\n    return product                  =>           \r\n    k, sum = 1, 0                   <=           \r\n        sum += term(k)              <=           \r\n    return sum                      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, sum = 1, 0\n    while k <= n:\n        sum += term(k)\n        k += 1\n    return sum\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, product = 1, 1\n    while k <= n:\n        product = product * term(k)\n        k += 1\n    return product\n\n","SubmissionTime":"2016-02-08T12:23:44.930594","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":106,"studentId":0,"date":"2016-02-08 10:02:48.824422","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        total, x = total * term(x), x + 1 =>           \r\n    return total                          =>           \r\n    while n >= 0:                         =>           \r\n        return n * product(n-1)           =>           \r\n        total, x = total * x, x + 1       <=           \r\n    return total                          <=           \r\n    \"*** YOUR CODE HERE ***\"              <=           \r\n    return _______                        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, x = 1, 1\n\n    while x <= n:\n        total, x = total * x, x + 1\n\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, x = 1, 1\n\n    while x <= n:\n        total, x = total * term(x), x + 1\n\n    return total    \n\n","SubmissionTime":"2016-02-08T10:02:48.824422","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":107,"studentId":0,"date":"2016-02-13 17:35:01.643628","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n        return term(n) * product(n-1,term) =>           \r\n        return n * product(n-1,term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n > 1:\n        return n * product(n-1,term)\n    else:\n        return 1\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n > 1:\n        return term(n) * product(n-1,term)\n    else:\n        return 1\n\n","SubmissionTime":"2016-02-13T17:35:01.643628","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":108,"studentId":0,"date":"2016-02-12 15:37:52.470138","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n        return 1 =>           \r\n        return 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if (n==0):\n        return 0\n    else:\n        return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if (n==0):\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-12T15:37:52.470138","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":109,"studentId":0,"date":"2016-02-15 17:36:56.903853","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n        k += 1       =>           \r\n        increment(k) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    summed = 1\n    k = 1\n    while k <= n:\n        summed *= term(k)\n        increment(k)\n    return summed\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    summed = 1\n    k = 1\n    while k <= n:\n        summed *= term(k)\n        k += 1\n    return summed\n\n","SubmissionTime":"2016-02-15T17:36:56.903853","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":110,"studentId":0,"date":"2016-02-08 14:44:11.831060","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n)                      =>           \r\n        return term(n) * product(n-1, term) =>           \r\n        return                              <=           \r\n        term(n) * product(n-1, term)        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return\n    else:\n        term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T14:44:11.83106","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    term(n) * product(n-1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":111,"studentId":0,"date":"2016-02-08 23:33:31.259912","diff":"\r\nInputObject                                     SideIndicator\r\n-----------                                     -------------\r\n    if n > 0:                                   =>           \r\n        return term(n) * product(n - 1, term)   =>           \r\n                                                =>           \r\n                                                =>           \r\n    if n < 1:                                   <=           \r\n        return term(n) * product((n - 1), term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 1:\n        return term(n) * product((n - 1), term)\n    else:\n        return term(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n > 0:\n        return term(n) * product(n - 1, term)\n    else:\n        return term(1)\n\n\n\n","SubmissionTime":"2016-02-08T23:33:31.259912","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":112,"studentId":0,"date":"2016-02-10 14:05:42.297611","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n        total = total * term(i)   =>           \r\n    x = lambda anything: identity =>           \r\n    x = lambda term: term         <=           \r\n        total = total * x(i)      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = lambda term: term \n    total = 1\n    for i in range (1, n + 1):\n        total = total * x(i)\n    return total \n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for i in range (1, n + 1):\n        total = total * term(i)\n    return total \n\n\n\n\n","SubmissionTime":"2016-02-10T14:05:42.297611","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":113,"studentId":0,"date":"2016-02-08 14:27:03.516017","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0 or n ==1:\n        return 1\n    else:\n        return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0 or n ==1:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T14:27:03.516017","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":114,"studentId":0,"date":"2016-02-12 18:46:13.808426","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n        return 1 =>           \r\n        return 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-12T18:46:13.808426","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":115,"studentId":0,"date":"2016-02-14 04:01:47.867037","diff":"\r\nInputObject                                        SideIndicator\r\n-----------                                        -------------\r\n    return term(n) * product(n - 1, term)          =>           \r\n    return product(n, term) * product(n - 1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    return product(n, term) * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-14T04:01:47.867037","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    if n == 0:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":116,"studentId":0,"date":"2016-02-16 19:19:31.914617","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n    total, k = 1, 1                        =>           \r\n                                           =>           \r\n    return product(n, lambda x: square(x)) =>           \r\n    total, k = 0, 1                        <=           \r\n    if n ==0:                              <=           \r\n        return 0                           <=           \r\n        return n * factorial(n-1)          <=           \r\n    return product (n, lambda x: x)        <=           \r\n    else:                                  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, k = 0, 1\n    while k <= n:\n        total = term (k) * total\n        k += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, k = 1, 1\n    while k <= n:\n        total = term (k) * total\n        k += 1\n    return total\n\n","SubmissionTime":"2016-02-16T19:19:31.914617","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":117,"studentId":0,"date":"2016-02-13 18:22:10.541973","diff":"\r\nInputObject                                            SideIndicator\r\n-----------                                            -------------\r\n        return term(n) * product(n - 1, term)          =>           \r\n        return product(n, term) * product(n - 1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return product(n, term) * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-13T18:22:10.541973","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    if n == 1:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":118,"studentId":0,"date":"2016-02-15 19:29:34.564060","diff":"\r\nInputObject                           SideIndicator\r\n-----------                           -------------\r\n        return term(i) * mult_up(i+1) =>           \r\n        return term(i) + mult_up(i+1) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def mult_up(i):\n        if(i==n):\n            return term(n)\n        return term(i) + mult_up(i+1)\n\n    return mult_up(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def mult_up(i):\n        if(i==n):\n            return term(n)\n        return term(i) * mult_up(i+1)\n\n    return mult_up(1)\n\n","SubmissionTime":"2016-02-15T19:29:34.56406","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":119,"studentId":0,"date":"2016-02-15 12:11:41.055574","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while k <= n: =>           \r\n    while k < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k < n:\n        total, k = total * term(k), k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-15T12:11:41.055574","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":120,"studentId":0,"date":"2016-02-09 11:29:40.089255","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n        total = (total*term(m)) =>           \r\n    return product(n, identity) =>           \r\n        total = (total*m)       <=           \r\n    return _______              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    m = 1\n    while m <= n:\n        total = (total*m)\n        m += 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    m = 1\n    while m <= n:\n        total = (total*term(m))\n        m += 1\n    return total\n\n\n","SubmissionTime":"2016-02-09T11:29:40.089255","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":121,"studentId":0,"date":"2016-02-08 12:21:44.596897","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, i = 1, 1 =>           \r\n    total, i = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, i = 0, 1\n    while i <= n:\n        total = total * term(i)\n        i += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, i = 1, 1\n    while i <= n:\n        total = total * term(i)\n        i += 1\n    return total\n\n","SubmissionTime":"2016-02-08T12:21:44.596897","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":122,"studentId":0,"date":"2016-02-13 12:55:59.801915","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        return term(n)*product(n-1, term) =>           \r\n    if n==0 or n==1:                      =>           \r\n        return n                          =>           \r\n        return n*factorial(n-1)           =>           \r\n    else:                                 =>           \r\n        return product(n-1, term(n))      <=           \r\n    return _______                        <=           \r\n    \"*** YOUR CODE HERE ***\"              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0 or n==1:\n        return term(n)\n    else:\n        return product(n-1, term(n))\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0 or n==1:\n        return term(n)\n    else:\n        return term(n)*product(n-1, term)\n\n\n","SubmissionTime":"2016-02-13T12:55:59.801915","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n-1, term(n))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n-1, term(n))","TypeError: 'int' object is not callable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":123,"studentId":0,"date":"2016-02-15 22:24:48.278023","diff":"\r\nInputObject                                         SideIndicator\r\n-----------                                         -------------\r\n        if n>0:                                     =>           \r\n            return total                            =>           \r\n    total=1                                         =>           \r\n    def multiply(n,total,term):                     =>           \r\n        else:                                       =>           \r\n            return multiply(n-1,total*term(n),term) =>           \r\n    return multiply(n,total,term)\"\"\"                =>           \r\n    \"\"\"                                             =>           \r\n                                                    =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total=1\n    def multiply(n,total,term):\n        if n==0:\n            return 0\n        elif n<1:\n            return 1\n        else:\n            return multiply(n-1,total*term(n),term)\n    return multiply(n,total,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total=1\n    def multiply(n,total,term):\n        if n>0:\n            return multiply(n-1,total*term(n),term)\n        else:\n            return total\n    return multiply(n,total,term)\n\n    \"\"\"\n    total=1\n    def multiply(n,total,term):\n        if n==0:\n            return 0\n        elif n<1:\n            return 1\n        else:\n            return multiply(n-1,total*term(n),term)\n    return multiply(n,total,term)\"\"\"\n\n","SubmissionTime":"2016-02-15T22:24:48.278023","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":124,"studentId":0,"date":"2016-02-09 10:04:23.708605","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        return term(n)*product(n-1, term) =>           \r\n        return term(n-1)                  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-09T10:04:23.708605","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":125,"studentId":0,"date":"2016-02-08 16:26:33.123654","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    return term(n) * product(n - 1, term) =>           \r\n    return term(n) * product(n - 1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return term(n) * product(n - 1)\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return term(n) * product(n - 1, term)\n\n\n\n","SubmissionTime":"2016-02-08T16:26:33.123654","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return term(n) * product(n - 1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":126,"studentId":0,"date":"2016-02-08 15:59:06.688081","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while i <= n: =>           \r\n    while i < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i < n:\n        total = total * term(i)\n        i += 1\n    return total \n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i <= n:\n        total = total * term(i)\n        i += 1\n    return total \n\n\n","SubmissionTime":"2016-02-08T15:59:06.688081","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":127,"studentId":0,"date":"2016-02-08 19:24:09.567409","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n==1:           =>           \r\n        return term(1) =>           \r\n    if n==0:           <=           \r\n        return 0       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return 0\n    return term(n)*product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(1)\n    return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-08T19:24:09.567409","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":128,"studentId":0,"date":"2016-02-11 19:32:26.127207","diff":"\r\nInputObject                         SideIndicator\r\n-----------                         -------------\r\n                                    =>           \r\n        total = total * term(count) =>           \r\n    count = 1                       =>           \r\n    while count <= n:               =>           \r\n        count += 1                  =>           \r\n                                    =>           \r\n                                    =>           \r\nfrom functools import reduce        <=           \r\n    list1 = []                      <=           \r\n    theList = list(range(1, n+1))   <=           \r\n    for i in theList:               <=           \r\n        list1 = [term(i)]           <=           \r\n    total = reduce(mul, list1, 1)   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    list1 = []\n    total = 1\n    theList = list(range(1, n+1))\n    for i in theList:\n        list1 = [term(i)]\n    total = reduce(mul, list1, 1)\n    return total\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \n    total = 1\n    count = 1\n    while count <= n:\n        total = total * term(count)\n        count += 1\n    return total\n\n","SubmissionTime":"2016-02-11T19:32:26.127207","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","3","","# Error: expected","#     6","# but got","#     3","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":129,"studentId":0,"date":"2016-02-09 16:05:43.912999","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n==1:           =>           \r\n        return term(1) =>           \r\n    if n==0:           <=           \r\n        return term(0) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return term(0)\n    return term(n) * product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(1)\n    return term(n) * product(n-1,term)\n\n","SubmissionTime":"2016-02-09T16:05:43.912999","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":130,"studentId":0,"date":"2016-02-13 17:16:24.772580","diff":"\r\nInputObject                        SideIndicator\r\n-----------                        -------------\r\n    total = 1                      =>           \r\n        total = total * term(x)    =>           \r\n    return total                   =>           \r\n        return term(n*(n+1)*(n+2)) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \n    x = 1\n    while x<=n:\n        return term(n*(n+1)*(n+2))\n        x+=1\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \n    x = 1\n    total = 1 \n    while x<=n:\n        total = total * term(x)\n        x+=1\n    return total\n\n\n","SubmissionTime":"2016-02-13T17:16:24.77258","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","60","","# Error: expected","#     6","# but got","#     60","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":131,"studentId":0,"date":"2016-02-08 21:36:31.059447","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total \n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total \n\n\n","SubmissionTime":"2016-02-08T21:36:31.059447","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":132,"studentId":0,"date":"2016-02-10 15:37:25.873176","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 0\n    for i in range(0, n):\n        total *= term(i + 1)\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    for i in range(0, n):\n        total *= term(i + 1)\n    return total\n\n\n","SubmissionTime":"2016-02-10T15:37:25.873176","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":133,"studentId":0,"date":"2016-02-14 11:38:43.259900","diff":"\r\nInputObject              SideIndicator\r\n-----------              -------------\r\n        i = increment(i) =>           \r\n        k = increment(k) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    prod, i = 1, 1\n    while i <=n:\n        prod = prod * term(i)\n        k = increment(k)\n    return prod\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    prod, i = 1, 1\n    while i <=n:\n        prod = prod * term(i)\n        i = increment(i)\n    return prod\n\n","SubmissionTime":"2016-02-14T11:38:43.2599","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    k = increment(k)","UnboundLocalError: local variable 'k' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":134,"studentId":0,"date":"2016-02-13 19:40:20.114510","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    x = 1   =>           \r\n    x = 0   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    count = 1\n    x = 0\n    while count <= n:\n        x = x * term(count)\n        count += 1\n    return x\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    count = 1\n    x = 1\n    while count <= n:\n        x = x * term(count)\n        count += 1\n    return x\n\n\n","SubmissionTime":"2016-02-13T19:40:20.11451","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":135,"studentId":0,"date":"2016-02-09 11:31:06.566100","diff":"\r\nInputObject                SideIndicator\r\n-----------                -------------\r\n        product *= term(i) =>           \r\n        product *= i       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    product = 1\n    while i <= n:\n        product *= i\n        i += 1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    product = 1\n    while i <= n:\n        product *= term(i)\n        i += 1\n    return product\n\n","SubmissionTime":"2016-02-09T11:31:06.5661","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":137,"studentId":0,"date":"2016-02-16 11:07:56.649395","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while i <= n: =>           \r\n    while i < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    sum = 1\n    while i < n:\n        sum = sum * term(i)\n        i += 1\n    return sum\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    sum = 1\n    while i <= n:\n        sum = sum * term(i)\n        i += 1\n    return sum\n\n\n","SubmissionTime":"2016-02-16T11:07:56.649395","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":138,"studentId":0,"date":"2016-02-09 20:14:19.855077","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n                                =>           \r\n    count = term(1)             =>           \r\n    for i in range(2, n+1):     =>           \r\n        num = term(i)           =>           \r\n        count = count * num     =>           \r\n    count = 1                   <=           \r\n    i = 1                       <=           \r\n    while i <= n:               <=           \r\n        count = count * term(i) <=           \r\n                                <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    count = 1\n    i = 1\n    while i <= n:\n        count = count * term(i)\n        increment(i)\n    return count\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \n    count = term(1)\n    for i in range(2, n+1):\n        num = term(i)\n        count = count * num\n        increment(i)\n    return count\n\n","SubmissionTime":"2016-02-09T20:14:19.855077","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":139,"studentId":0,"date":"2016-02-15 18:30:22.550685","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    k, product = 1, 1                       =>           \r\n        product, k = product*term(k), k+1   =>           \r\n    k, product = 1, 0                       <=           \r\n        product, k = (product*term(k)), k+1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, product = 1, 0\n    while k <= n:\n        product, k = (product*term(k)), k+1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, product = 1, 1\n    while k <= n:\n        product, k = product*term(k), k+1\n    return product\n\n","SubmissionTime":"2016-02-15T18:30:22.550685","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":140,"studentId":0,"date":"2016-02-11 17:13:17.980460","diff":"","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return total\n    total = term(n)\n    return product(n-1, term) * total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = term(n)\n    if n == 1:\n        return total\n    return product(n-1, term) * total\n\n\n","SubmissionTime":"2016-02-11T17:13:17.98046","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n-1, term) * total","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n-1, term) * total","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return total","UnboundLocalError: local variable 'total' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":141,"studentId":0,"date":"2016-02-15 20:48:05.390103","diff":"\r\nInputObject                                     SideIndicator\r\n-----------                                     -------------\r\n    total, k = 1, 1                             =>           \r\n        total, k = (total) * term(k), k + 1     =>           \r\n    total, k = 0, 0                             <=           \r\n        total, k = (total + 1) * term(k), k + 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 0\n    while k <= n:\n        total, k = (total + 1) * term(k), k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = (total) * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-15T20:48:05.390103","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","15","","# Error: expected","#     6","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":143,"studentId":0,"date":"2016-02-10 12:28:05.150361","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n    return helper(n) =>           \r\n    helper(n)        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(i):\n        if i==0:\n            return 1\n        else:\n            return term(i) * product(i-1, term)\n    helper(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(i):\n        if i==0:\n            return 1\n        else:\n            return term(i) * product(i-1, term)\n    return helper(n)\n\n","SubmissionTime":"2016-02-10T12:28:05.150361","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    helper(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in helper","    return term(i) * product(i-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    helper(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in helper","    return term(i) * product(i-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    helper(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in helper","    return term(i) * product(i-1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":144,"studentId":0,"date":"2016-02-14 15:11:24.882649","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    i = 1                   =>           \r\n    while i <= n:           =>           \r\n            i += 1          =>           \r\n    for i in range(1, n+1): <=           \r\n        while i <= n:       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for i in range(1, n+1):\n        while i <= n:\n            total = total * term(i)\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    i = 1\n    while i <= n:\n            total = total * term(i)\n            i += 1\n    return total\n\n\n","SubmissionTime":"2016-02-14T15:11:24.882649","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":145,"studentId":0,"date":"2016-02-09 15:00:27.876174","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    k, total = 1, 1             =>           \r\n        total = total * term(k) =>           \r\n    k, total = 1, 0             <=           \r\n        total = total + term(k) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, total = 1, 0\n    while k <= n:\n        total = total + term(k)\n        k += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, total = 1, 1\n    while k <= n:\n        total = total * term(k)\n        k += 1\n    return total\n\n","SubmissionTime":"2016-02-09T15:00:27.876174","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":146,"studentId":0,"date":"2016-02-12 13:10:12.818816","diff":"\r\nInputObject                                  SideIndicator\r\n-----------                                  -------------\r\n        return term(n) * product( n-1, term) =>           \r\n        return n * product( n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==1:\n        return 1\n    else:\n        return n * product( n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==1:\n        return 1\n    else:\n        return term(n) * product( n-1, term)\n\n","SubmissionTime":"2016-02-12T13:10:12.818816","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":147,"studentId":0,"date":"2016-02-12 20:12:14.476552","diff":"\r\nInputObject                         SideIndicator\r\n-----------                         -------------\r\n    return product_counter(1)       =>           \r\n    return product_counter(1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_counter(i):\n    \tif i == n:\n    \t\treturn term(i)\n    \telse:\n    \t\treturn term(i) * product_counter(i + 1)\n    return product_counter(1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_counter(i):\n    \tif i == n:\n    \t\treturn term(i)\n    \telse:\n    \t\treturn term(i) * product_counter(i + 1)\n    return product_counter(1)\n\n","SubmissionTime":"2016-02-12T20:12:14.476552","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return product_counter(1, term)","TypeError: product_counter() takes 1 positional argument but 2 were given","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":148,"studentId":0,"date":"2016-02-15 23:35:37.168306","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n        return product(n-1,term)*term(n) =>           \r\n        return product(n-1)*term(n)      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(n)\n    else:\n        return product(n-1)*term(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(n)\n    else:\n        return product(n-1,term)*term(n)\n\n","SubmissionTime":"2016-02-15T23:35:37.168306","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n-1)*term(n)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":149,"studentId":0,"date":"2016-02-09 08:22:52.132478","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    k = 1         =>           \r\n    while k < n:  =>           \r\n    k = 0         <=           \r\n    while k <= n: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 0\n    product = term(k)\n    while k <= n:\n        k += 1\n        product = product * term(k)\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 1\n    product = term(k)\n    while k < n:\n        k += 1\n        product = product * term(k)\n    return product\n\n","SubmissionTime":"2016-02-09T08:22:52.132478","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":150,"studentId":0,"date":"2016-02-09 19:42:25.237654","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while k <= n: =>           \r\n    while k <= 1: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 1\n    while k <= 1:\n        total = total * term(k)\n        k = k + 1\n    return total\n\n    \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 1\n    while k <= n:\n        total = total * term(k)\n        k = k + 1\n    return total\n\n    \n\n","SubmissionTime":"2016-02-09T19:42:25.237654","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":151,"studentId":0,"date":"2016-02-08 12:07:04.709815","diff":"\r\nInputObject                          SideIndicator\r\n-----------                          -------------\r\n            total = total * term(i)  =>           \r\n        return total                 =>           \r\n            total == total * term(i) <=           \r\n            return total             <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    if n == 0 or n == 1:\n        return n\n    if n > 0:\n        while i <= n:\n            total == total * term(i)\n            i += 1\n            return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    if n == 0 or n == 1:\n        return n\n    if n > 0:\n        while i <= n:\n            total = total * term(i)\n            i += 1\n        return total\n\n\n","SubmissionTime":"2016-02-08T12:07:04.709815","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":154,"studentId":0,"date":"2016-02-12 14:51:51.151916","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n        return 1 =>           \r\n        return n <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def products(i):\n        if i <= n:\n            return term(i) * products(i+1)\n        return n\n    return products(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def products(i):\n        if i <= n:\n            return term(i) * products(i+1)\n        return 1\n    return products(1)\n\n","SubmissionTime":"2016-02-12T14:51:51.151916","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","18","","# Error: expected","#     6","# but got","#     18","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":155,"studentId":0,"date":"2016-02-11 12:24:27.960131","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    return n * term(n-1)                <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    return n * term(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-11T12:24:27.960131","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":156,"studentId":0,"date":"2016-02-09 22:24:19.486115","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n, product(n-1, term))  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    else:\n        return term(n, product(n-1, term))\n    \n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n    \n","SubmissionTime":"2016-02-09T22:24:19.486115","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(n, product(n-1, term))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(n, product(n-1, term))","TypeError: identity() takes 1 positional argument but 2 were given","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":157,"studentId":0,"date":"2016-02-10 15:59:36.592076","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return tern(n) * product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return tern(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-10T15:59:36.592076","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return tern(n) * product(n-1, term)","NameError: name 'tern' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":158,"studentId":0,"date":"2016-02-09 17:26:26.752987","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n == 1:         =>           \r\n        return term(n) =>           \r\n    if n == 0:         <=           \r\n        return 0       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return term(n) * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-09T17:26:26.752987","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":159,"studentId":0,"date":"2016-02-08 08:29:27.538856","diff":"\r\nInputObject                                          SideIndicator\r\n-----------                                          -------------\r\n        return term(n)* product(n-1, term)           =>           \r\n        return product(n, term) * product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1: \n        return term(1)\n    else:\n        return product(n, term) * product(n-1, term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1: \n        return term(1)\n    else:\n        return term(n)* product(n-1, term)\n\n\n","SubmissionTime":"2016-02-08T08:29:27.538856","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    if n == 1:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":160,"studentId":0,"date":"2016-02-08 21:27:00.293323","diff":"\r\nInputObject    SideIndicator\r\n-----------    -------------\r\n    if n == 1: =>           \r\n    if n == 0: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    # result = 1\n    # count = 1\n    # while count <= n:\n    #     result *= term(count)\n    #     count += 1\n    # return result\n    if n == 0:\n        return n\n    else:\n        return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    # result = 1\n    # count = 1\n    # while count <= n:\n    #     result *= term(count)\n    #     count += 1\n    # return result\n    if n == 1:\n        return n\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T21:27:00.293323","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":161,"studentId":0,"date":"2016-02-09 22:35:03.675583","diff":"\r\nInputObject                      SideIndicator\r\n-----------                      -------------\r\n        a  = a * term(n)         =>           \r\n        n -= 1                   =>           \r\n        a  = a * product(n,term) <=           \r\n        n = n - 1                <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a = 1\n    while n > 1:\n        a  = a * product(n,term)\n        n = n - 1\n    if n == 1:\n        return a\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a = 1\n    while n > 1:\n        a  = a * term(n) \n        n -= 1 \n    if n == 1:\n        return a\n\n\n","SubmissionTime":"2016-02-09T22:35:03.675583","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    a  = a * product(n,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    a  = a * product(n,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    a  = a * product(n,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    a  = a * product(n,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    a  = a * product(n,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    a  = a * product(n,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    while n > 1:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":162,"studentId":0,"date":"2016-02-08 21:09:14.002558","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        product, k = product*term(k), k+1 =>           \r\n        product, k = product+term(k), k+1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, product = 1, 1\n    while k <= n:\n        product, k = product+term(k), k+1\n    return product\n\n    \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, product = 1, 1\n    while k <= n:\n        product, k = product*term(k), k+1\n    return product\n\n    \n\n","SubmissionTime":"2016-02-08T21:09:14.002558","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","7","","# Error: expected","#     6","# but got","#     7","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":164,"studentId":0,"date":"2016-02-09 00:09:31.491546","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return n\n    else:\n        return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return n\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-09T00:09:31.491546","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":165,"studentId":0,"date":"2016-02-13 22:22:58.454380","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) * term(n-1)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n <= 1:\n        return 1\n    else:\n        return term(n) * term(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n <= 1:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-13T22:22:58.45438","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":166,"studentId":0,"date":"2016-02-09 00:25:30.322171","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n    while n + 1 > x: =>           \r\n    while n > x:     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x , total = 1 , 1\n    while n > x:\n        total = total * term(x) \n        x += 1\n    return total \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x , total = 1 , 1\n    while n + 1 > x:\n        total = total * term(x) \n        x += 1\n    return total \n\n","SubmissionTime":"2016-02-09T00:25:30.322171","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":167,"studentId":0,"date":"2016-02-08 20:43:03.228485","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    t,i = 1,1 =>           \r\n    i = 1     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    while i <= n:\n        t *= term(i)\n        i+=1\n    return t\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    t,i = 1,1\n    while i <= n:\n        t *= term(i)\n        i+=1\n    return t\n\n","SubmissionTime":"2016-02-08T20:43:03.228485","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    t *= term(i)","UnboundLocalError: local variable 't' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":168,"studentId":0,"date":"2016-02-09 21:21:40.752611","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n        return 1 =>           \r\n        return 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 0\n    else:\n        return term(n) * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 1\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-09T21:21:40.752611","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":169,"studentId":0,"date":"2016-02-14 14:19:46.661396","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n        total = total * term(k)\n        k += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 1\n    while k <= n:\n        total = total * term(k)\n        k += 1\n    return total\n\n","SubmissionTime":"2016-02-14T14:19:46.661396","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":170,"studentId":0,"date":"2016-02-13 14:18:59.703714","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n        total = total * term(k) =>           \r\n        total = total * k       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total = total * k\n        k = increment(k)\n        \n    return total\n\n        \n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total = total * term(k)\n        k = increment(k)\n        \n    return total\n\n        \n\n\n\n","SubmissionTime":"2016-02-13T14:18:59.703714","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":171,"studentId":0,"date":"2016-02-09 10:54:48.655114","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n            return start(m, accum*term(m)) =>           \r\n            return start(m, accum*m)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def start(m, accum):\n        if m==n:\n            return accum\n        else:\n            m+=1\n            return start(m, accum*m)\n    return start(1,1)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def start(m, accum):\n        if m==n:\n            return accum\n        else:\n            m+=1\n            return start(m, accum*term(m))\n    return start(1,1)\n\n\n","SubmissionTime":"2016-02-09T10:54:48.655114","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":173,"studentId":0,"date":"2016-02-09 10:46:28.804354","diff":"\r\nInputObject                                  SideIndicator\r\n-----------                                  -------------\r\n        return term(n) * product((n-1),term) =>           \r\n        return term(n) * product(term(n-1))  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return term(n) * product(term(n-1))\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return term(n) * product((n-1),term)\n\n","SubmissionTime":"2016-02-09T10:46:28.804354","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(term(n-1))","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":174,"studentId":0,"date":"2016-02-16 19:27:54.989995","diff":"\r\nInputObject                                            SideIndicator\r\n-----------                                            -------------\r\n    total, x = 1, 1                                    =>           \r\n    total, x = base, 1                                 =>           \r\n    while x <= n:                                      =>           \r\n        total, x = combiner(base, product(n,term)),x+1 =>           \r\n    return total                                       =>           \r\n    total, x = 0, 1                                    <=           \r\n    \"*** YOUR CODE HERE ***\"                           <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, x = 0, 1\n    while x <= n:\n        total, x = total * term(x), x + 1\n    return total\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, x = 1, 1\n    while x <= n:\n        total, x = total * term(x), x + 1\n    return total\n\n\n\n","SubmissionTime":"2016-02-16T19:27:54.989995","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":175,"studentId":0,"date":"2016-02-13 16:04:20.525495","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n            return term(i)* counter(i+1) =>           \r\n            return term(i)+ counter(i+1) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def counter(i):\n        \n        if i == n:\n            return term(i)\n        else:\n            return term(i)+ counter(i+1)\n    return counter(1)        \n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def counter(i):\n        \n        if i == n:\n            return term(i)\n        else:\n            return term(i)* counter(i+1)\n    return counter(1)        \n\n\n","SubmissionTime":"2016-02-13T16:04:20.525495","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":176,"studentId":0,"date":"2016-02-15 15:10:28.238397","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    total = 1                   =>           \r\n    k = 1                       =>           \r\n    while k <= n:               =>           \r\n        total = total * term(k) =>           \r\n        k = k + 1               =>           \r\n    return total                =>           \r\n    product = 1                 <=           \r\n    count = n                   <=           \r\n    while count>0:              <=           \r\n        product *= term(n)      <=           \r\n        n -= 1                  <=           \r\n    return product              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product = 1\n    count = n\n    while count>0:\n        product *= term(n)\n        n -= 1\n    return product\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 1\n    while k <= n:\n        total = total * term(k)\n        k = k + 1\n    return total\n    \"*** YOUR CODE HERE ***\"\n\n","SubmissionTime":"2016-02-15T15:10:28.238397","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":177,"studentId":0,"date":"2016-02-11 11:03:47.329188","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n    if n == 1:                              =>           \r\n        return 1                            =>           \r\n        return n * factorial(n-1)           =>           \r\n    else:                                   =>           \r\n        return term(n) * product(n-1)       <=           \r\n    return _______                          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-11T11:03:47.329188","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n-1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":178,"studentId":0,"date":"2016-02-10 15:51:53.093101","diff":"\r\nInputObject                                    SideIndicator\r\n-----------                                    -------------\r\n        return term(n)*product(n-1, term)      =>           \r\n                                               =>           \r\n        return term(n)*product(n-1, term(n-1)) <=           \r\n                                               <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n)*product(n-1, term(n-1))\n        \n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-10T15:51:53.093101","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n)*product(n-1, term(n-1))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n)*product(n-1, term(n-1))","TypeError: 'int' object is not callable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":179,"studentId":0,"date":"2016-02-09 20:27:49.501333","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total *= term(k)\n        k += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total *= term(k)\n        k += 1\n    return total\n\n","SubmissionTime":"2016-02-09T20:27:49.501333","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":180,"studentId":0,"date":"2016-02-10 16:07:42.590105","diff":"\r\nInputObject                                          SideIndicator\r\n-----------                                          -------------\r\n    def helper(k, term):                             =>           \r\n        if k == n:                                   =>           \r\n            return term(k)                           =>           \r\n        else:                                        =>           \r\n            return term(k) * helper(k + 1, term)     =>           \r\n    return helper(1, term)                           =>           \r\n    def helper(k):                                   <=           \r\n        if k >= n:                                   <=           \r\n            return term(1) * product(k + 1, term(k)) <=           \r\n    helper(1)                                        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    def helper(k):\n        if k >= n: \n            return term(1) * product(k + 1, term(k))\n    helper(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    def helper(k, term):\n        if k == n: \n            return term(k)\n        else: \n            return term(k) * helper(k + 1, term)\n    return helper(1, term)\n\n","SubmissionTime":"2016-02-10T16:07:42.590105","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":181,"studentId":0,"date":"2016-02-15 10:26:45.499132","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    k, sum = 1, 1 =>           \r\n    k, sum = 1, 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, sum = 1, 0\n    while k <= n:\n        sum, k = sum*term(k), k+1\n    return sum\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, sum = 1, 1\n    while k <= n:\n        sum, k = sum*term(k), k+1\n    return sum\n\n\n","SubmissionTime":"2016-02-15T10:26:45.499132","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":182,"studentId":0,"date":"2016-02-13 13:53:08.982709","diff":"\r\nInputObject        SideIndicator\r\n-----------        -------------\r\n    i,total = 0, 1 =>           \r\n    i,total = 0, 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    #create a list that has all the values until n (including n)\n    max_count = list (range(1,n+1))\n    #using that list\n    i,total = 0, 0\n\n    while i < n:\n      total *= term(max_count[i])\n      i += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    #create a list that has all the values until n (including n)\n    max_count = list (range(1,n+1))\n    #using that list\n    i,total = 0, 1\n\n    while i < n:\n      total *= term(max_count[i])\n      i += 1\n    return total\n\n","SubmissionTime":"2016-02-13T13:53:08.982709","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":183,"studentId":0,"date":"2016-02-12 00:53:43.335105","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n              =>           \r\n    total = 0 <=           \r\n              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    i, k = 1, 1\n    total = 0\n\n    while i <= n:\n        total *= term(k)\n        i += 1\n        k += 1\n    \n    return total\n    \n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    i, k = 1, 1\n    total = 1\n\n    while i <= n:\n        total *= term(k)\n        i += 1\n        k += 1\n    \n    return total\n\n\n\n\n","SubmissionTime":"2016-02-12T00:53:43.335105","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":184,"studentId":0,"date":"2016-02-08 14:14:19.559157","diff":"\r\nInputObject                  SideIndicator\r\n-----------                  -------------\r\n        product *= term(i+1) =>           \r\n        product *= term(i)   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=0\n    product=1\n    while i<n:\n        product *= term(i)\n        i += 1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=0\n    product=1\n    while i<n:\n        product *= term(i+1)\n        i += 1\n    return product\n\n","SubmissionTime":"2016-02-08T14:14:19.559157","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":185,"studentId":0,"date":"2016-02-08 12:01:59.322953","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    while(n > 0):\n        total *= term(n)\n        n -= 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while(n > 0):\n        total *= term(n)\n        n -= 1\n    return total\n\n","SubmissionTime":"2016-02-08T12:01:59.322953","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":186,"studentId":0,"date":"2016-02-09 09:35:05.077893","diff":"\r\nInputObject                   SideIndicator\r\n-----------                   -------------\r\n# print(product(4, identity)) =>           \r\n        print(term(n))        <=           \r\nprint(product(4, identity))   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    else:\n        print(term(n))\n        return term(n) * product(n-1, term)\n \nprint(product(4, identity))\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n \n# print(product(4, identity))\n\n","SubmissionTime":"2016-02-09T09:35:05.077893","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","4","3","2","24","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","3","2","6","","# Error: expected","#     6","# but got","#     3","#     2","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":187,"studentId":0,"date":"2016-02-10 04:54:23.569111","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        nextnumber =term(a+1)             =>           \r\n        result=term(a)*nextnumber         =>           \r\n        return term(a)*final_product(a+1) =>           \r\n    a=n                                   =>           \r\n    def final_factorial(a):               =>           \r\n        nextnumber=a                      =>           \r\n        result=a*nextnumber               =>           \r\n        if a==1:                          =>           \r\n            return result                 =>           \r\n        return a*final_factorial(a-1)     =>           \r\n    return final_factorial(a)             =>           \r\n        result=term(a) * term(a+1)        <=           \r\n        return final_product(a+1)         <=           \r\n    return _______                        <=           \r\n    \"*** YOUR CODE HERE ***\"              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a=1\n    def final_product(a):\n        result=term(a) * term(a+1)\n        if a+1==n:\n            return result\n        return final_product(a+1)\n    return final_product(a)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a=1\n    def final_product(a):\n        nextnumber =term(a+1)\n        result=term(a)*nextnumber\n        if a+1==n:\n            return result\n        return term(a)*final_product(a+1)\n    return final_product(a)\n\n","SubmissionTime":"2016-02-10T04:54:23.569111","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":188,"studentId":0,"date":"2016-02-11 18:34:36.067302","diff":"\r\nInputObject           SideIndicator\r\n-----------           -------------\r\n    k, product = 1, 1 =>           \r\n    k, product = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, product = 0, 1\n    while k<=n:\n\n        product, k = product*term(k), k +1\n\n    return product\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, product = 1, 1\n    while k<=n:\n\n        product, k = product*term(k), k +1\n\n    return product\n\n\n\n","SubmissionTime":"2016-02-11T18:34:36.067302","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":189,"studentId":0,"date":"2016-02-10 08:14:11.339166","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n    fac = term(1)                 =>           \r\n    for i in range(2, n + 1):     =>           \r\n        fac *= term(i)            =>           \r\n    return fac                    =>           \r\n                                  =>           \r\n    if term == identity:          <=           \r\n        fac = 1                   <=           \r\n        for i in range(2, n + 1): <=           \r\n            fac *= i              <=           \r\n        print(fac)                <=           \r\n    elif term == square:          <=           \r\n        print(\"square\")           <=           \r\n                                  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n    if term == identity:\n        fac = 1\n        for i in range(2, n + 1):\n            fac *= i\n        print(fac)\n    elif term == square:\n        print(\"square\")\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    fac = term(1)\n    for i in range(2, n + 1):\n        fac *= term(i)\n    return fac\n        \n\n","SubmissionTime":"2016-02-10T08:14:11.339166","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","square","","# Error: expected","#     36","# but got","#     square","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":190,"studentId":0,"date":"2016-02-16 06:16:01.488531","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) * term(n-1)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if not n:\n        return term(1)\n    else:\n        return term(n) * term(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if not n:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-16T06:16:01.488531","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":191,"studentId":0,"date":"2016-02-08 12:26:37.861372","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n        return product(n-1, term)* term(n) =>           \r\n        return product(n-1, term)*n        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n    if n == 1:\n        return 1\n    else:\n        return product(n-1, term)*n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n    if n == 1:\n        return 1\n    else:\n        return product(n-1, term)* term(n)\n\n","SubmissionTime":"2016-02-08T12:26:37.861372","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":192,"studentId":0,"date":"2016-02-16 11:24:36.773123","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n            total *= t**2         =>           \r\n    return total                  =>           \r\n            total *= total*(t**2) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=0\n    t=1\n    total=1\n    while i < n:\n        if term == identity:\n            total *= t\n            i += 1\n            t += 1 \n        elif term == square:\n            total *= total*(t**2)\n            i += 1\n            t += 1\n\n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=0\n    t=1\n    total=1\n    while i < n:\n        if term == identity:\n            total *= t\n            i += 1\n            t += 1 \n        elif term == square:\n            total *= t**2\n            i += 1\n            t += 1\n    return total\n\n\n\n\n\n","SubmissionTime":"2016-02-16T11:24:36.773123","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":193,"studentId":0,"date":"2016-02-08 15:01:43.328490","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while i < n:  =>           \r\n    while i <= n: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    product = term(i)\n    while i <= n:\n        i += 1\n        product = product * term(i)\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    product = term(i)\n    while i < n:\n        i += 1\n        product = product * term(i)\n    return product\n\n","SubmissionTime":"2016-02-08T15:01:43.32849","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","24","","# Error: expected","#     6","# but got","#     24","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":194,"studentId":0,"date":"2016-02-15 00:25:29.481794","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    if n == 1:                              =>           \r\n        return term(1)                      =>           \r\n        return term(n) * product(n-1, term) =>           \r\n    return product(n, mul)                  =>           \r\n    else:                                   =>           \r\n                                            =>           \r\n    return _______                          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n\n","SubmissionTime":"2016-02-15T00:25:29.481794","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":195,"studentId":0,"date":"2016-02-08 22:21:17.093821","diff":"\r\nInputObject                   SideIndicator\r\n-----------                   -------------\r\n        prod = prod * term(i) =>           \r\n        prod = prod * i       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    prod = 1\n    for i in range (1,n+1):\n        prod = prod * i\n    return prod\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    prod = 1\n    for i in range (1,n+1):\n        prod = prod * term(i)\n    return prod\n\n","SubmissionTime":"2016-02-08T22:21:17.093821","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":196,"studentId":0,"date":"2016-02-08 22:21:17.093821","diff":"\r\nInputObject                   SideIndicator\r\n-----------                   -------------\r\n        prod = prod * term(i) =>           \r\n        prod = prod * i       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    prod = 1\n    for i in range (1,n+1):\n        prod = prod * i\n    return prod\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    prod = 1\n    for i in range (1,n+1):\n        prod = prod * term(i)\n    return prod\n\n","SubmissionTime":"2016-02-08T22:21:17.093821","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":197,"studentId":0,"date":"2016-02-08 13:31:56.731450","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n == 1:         =>           \r\n        return term(1) =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T13:31:56.73145","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":198,"studentId":0,"date":"2016-02-09 07:47:43.374723","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-09T07:47:43.374723","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":199,"studentId":0,"date":"2016-02-10 09:32:25.341030","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    while k <= n:               =>           \r\n    fact = product(n, identity) =>           \r\n    return fact                 =>           \r\n    while k < n:                <=           \r\n    \"*** YOUR CODE HERE ***\"    <=           \r\n    return _______              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 1\n    product = 1\n    while k < n:\n        num = term(k)\n        product *= num\n        k += 1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 1\n    product = 1\n    while k <= n:\n        num = term(k)\n        product *= num\n        k += 1\n    return product\n\n","SubmissionTime":"2016-02-10T09:32:25.34103","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":201,"studentId":0,"date":"2016-02-08 14:50:49.813870","diff":"\r\nInputObject             SideIndicator\r\n-----------             -------------\r\n        print (term(n)) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product_sum = 1 \n    while n:\n        product_sum = product_sum * term(n)\n        print (term(n))\n        n -= 1\n    return product_sum\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product_sum = 1 \n    while n:\n        product_sum = product_sum * term(n)\n        n -= 1\n    return product_sum\n\n","SubmissionTime":"2016-02-08T14:50:49.81387","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","3","2","1","6","","# Error: expected","#     6","# but got","#     3","#     2","#     1","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":203,"studentId":0,"date":"2016-02-11 12:39:04.140529","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n == 1:         =>           \r\n        return term(1) =>           \r\n    if n == 0:         <=           \r\n        return 0       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-11T12:39:04.140529","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":204,"studentId":0,"date":"2016-02-14 09:07:25.255394","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n    return product(n, identity)               =>           \r\n        return term(n) + product(n - 1, term) <=           \r\n    return _______                            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) + product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-14T09:07:25.255394","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":205,"studentId":0,"date":"2016-02-15 12:19:24.411866","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n        return term(n)*product(n-1, term)  =>           \r\n        return product(term(n), term(n-1)) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return 1\n    else:\n        return product(term(n), term(n-1))\n\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return 1\n    else:\n        return term(n)*product(n-1, term)\n\n    \"*** YOUR CODE HERE ***\"\n\n","SubmissionTime":"2016-02-15T12:19:24.411866","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(term(n), term(n-1))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(term(n), term(n-1))","TypeError: 'int' object is not callable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":206,"studentId":0,"date":"2016-02-12 15:01:17.766761","diff":"\r\nInputObject                SideIndicator\r\n-----------                -------------\r\n            return term(n) =>           \r\n            return 1       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def counter(i):\n        if i == n:\n            return 1\n        else:\n            return term(i) * counter(i+1)\n    return counter(1)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def counter(i):\n        if i == n:\n            return term(n)\n        else:\n            return term(i) * counter(i+1)\n    return counter(1)\n\n\n","SubmissionTime":"2016-02-12T15:01:17.766761","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":207,"studentId":0,"date":"2016-02-11 15:50:34.345069","diff":"\r\nInputObject                                             SideIndicator\r\n-----------                                             -------------\r\n    def counter(count, term):                           =>           \r\n            return term(count) * counter(count+1, term) =>           \r\n    return counter(1, term)                             =>           \r\n    def counter(count):                                 <=           \r\n            return term(count) * product(count+1, term) <=           \r\n    return counter(1)                                   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def counter(count):\n        if count == n:\n            return term(n)\n        else:\n            return term(count) * product(count+1, term)\n    return counter(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def counter(count, term):\n        if count == n:\n            return term(n)\n        else:\n            return term(count) * counter(count+1, term)\n    return counter(1, term)\n\n","SubmissionTime":"2016-02-11T15:50:34.345069","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in counter","    return term(count) * product(count+1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return counter(1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in counter","    return term(count) * product(count+1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return counter(1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in counter","    return term(count) * product(count+1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return counter(1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in counter","    if count == n:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":208,"studentId":0,"date":"2016-02-15 22:35:34.239495","diff":"\r\nInputObject                         SideIndicator\r\n-----------                         -------------\r\n    i = 1                           =>           \r\n    total = 1                       =>           \r\n    while i <= n:                   =>           \r\n        total = total * term(i)     =>           \r\n        i += 1                      =>           \r\n    return total                    =>           \r\n    return product(n, identity)     =>           \r\n    if combiner == add:             =>           \r\n        i = 1                       =>           \r\n        total = base                =>           \r\n        while (i <= n):             =>           \r\n            total = total + term(i) =>           \r\n            i += 1                  =>           \r\n        return total                =>           \r\n        i = 1                       =>           \r\n        total = base                =>           \r\n        while (i <= n):             =>           \r\n            total = total * term(i) =>           \r\n            i += 1                  =>           \r\n        return total                =>           \r\n                                    =>           \r\n    else:                           =>           \r\nfrom math import factorial          <=           \r\n    return term(factorial(n))       <=           \r\n    return factorial(n)             <=           \r\n    \"*** YOUR CODE HERE ***\"        <=           \r\n                                    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    return term(factorial(n))\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i <= n:\n        total = total * term(i)\n        i += 1\n    return total\n\n","SubmissionTime":"2016-02-15T22:35:34.239495","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 45, in factorial","    return factorial(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 45, in factorial","    return factorial(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 45, in factorial","    return factorial(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 45, in factorial","    return factorial(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 45, in factorial","    return factorial(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 45, in factorial","    return factorial(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 45, in factorial","    return factorial(n)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":209,"studentId":0,"date":"2016-02-16 14:01:29.183051","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        if k == 1:                        =>           \r\n            total = 1                     =>           \r\n            k = k+1                       =>           \r\n        else:                             =>           \r\n            total, k = total*term(k), k+1 =>           \r\n        total, k = total*term(k), k+1     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total*term(k), k+1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        if k == 1:\n            total = 1\n            k = k+1\n        else:\n            total, k = total*term(k), k+1\n    return total\n\n","SubmissionTime":"2016-02-16T14:01:29.183051","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":210,"studentId":0,"date":"2016-02-15 22:57:14.930827","diff":"\r\nInputObject                                  SideIndicator\r\n-----------                                  -------------\r\n        return term(n)                       =>           \r\n    if(n == 1):                              =>           \r\n        return 1                             =>           \r\n        return n * product(n - 1, factorial) =>           \r\n    if(n == 1):                              =>           \r\n    else:                                    =>           \r\n    n = n * factorial(n - 1)                 <=           \r\n    return product(n, factorial)             <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    return term(n) * product(n - 1, term)\n    \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if(n == 1):\n        return term(n)\n    return term(n) * product(n - 1, term)\n    \n\n","SubmissionTime":"2016-02-15T22:57:14.930827","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":211,"studentId":0,"date":"2016-02-15 14:21:36.913154","diff":"\r\nInputObject                SideIndicator\r\n-----------                -------------\r\n        final*=term(count) =>           \r\n        final*=term(n)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    count = 1\n    final = 1\n    while count < n+1:\n        final*=term(n)\n        count+=1\n        \n\n    return final\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    count = 1\n    final = 1\n    while count < n+1:\n        final*=term(count)\n        count+=1\n        \n\n    return final\n\n","SubmissionTime":"2016-02-15T14:21:36.913154","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","27","","# Error: expected","#     6","# but got","#     27","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":212,"studentId":0,"date":"2016-02-14 13:01:56.270854","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n        if a == n+1: =>           \r\n        if a+1 == n: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def count_mult(a):\n        if a+1 == n:\n            return 1\n        else:\n            return count_mult(a+1) * term(a)\n    return count_mult(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def count_mult(a):\n        if a == n+1:\n            return 1\n        else:\n            return count_mult(a+1) * term(a)\n    return count_mult(1)\n\n","SubmissionTime":"2016-02-14T13:01:56.270854","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":213,"studentId":0,"date":"2016-02-08 21:37:02.778389","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n        y *= term(x) =>           \r\n        y += term(x) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x, y = 1, 1\n    while x <= n:\n        y += term(x)\n        x += 1\n    return y\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x, y = 1, 1\n    while x <= n:\n        y *= term(x)\n        x += 1\n    return y\n\n","SubmissionTime":"2016-02-08T21:37:02.778389","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","7","","# Error: expected","#     6","# but got","#     7","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":214,"studentId":0,"date":"2016-02-10 12:42:17.285033","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n    total = 1                            =>           \r\n    k = 1                                =>           \r\n    while k <= n:                        =>           \r\n        total = total * term(k)          =>           \r\n        k += 1                           =>           \r\n    return total                         =>           \r\n    if n <= 2:                           <=           \r\n        return n                         <=           \r\n    else:                                <=           \r\n        return n * product(n-1, term(n)) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n <= 2:  \n        return n \n    else: \n        return n * product(n-1, term(n))\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 1 \n    while k <= n:  \n        total = total * term(k)\n        k += 1 \n    return total \n\n\n\n","SubmissionTime":"2016-02-10T12:42:17.285033","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return n * product(n-1, term(n))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return n * product(n-1, term(n))","TypeError: 'int' object is not callable","","# Error: expected","#     120","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":215,"studentId":0,"date":"2016-02-08 21:03:22.783739","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n    x, result = 1, 1 =>           \r\n    x, result = 1, 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x, result = 1, 0\n    while x <= n:\n        result = result * term(x)\n        x += 1\n    return result\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x, result = 1, 1\n    while x <= n:\n        result = result * term(x)\n        x += 1\n    return result\n\n\n","SubmissionTime":"2016-02-08T21:03:22.783739","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":216,"studentId":0,"date":"2016-02-08 15:00:54.227036","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n        return n * product(n - 1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    if n == 1:\n        return 1\n    else:\n        return n * product(n - 1, term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    if n == 1:\n        return 1\n    else:\n        return term(n) * product(n - 1, term)\n\n\n","SubmissionTime":"2016-02-08T15:00:54.227036","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":217,"studentId":0,"date":"2016-02-13 15:21:05.742356","diff":"\r\nInputObject                SideIndicator\r\n-----------                -------------\r\n            return term(i) =>           \r\n            return i       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_of_sequence(i):\n        if i==n: \n            return i\n        else:\n            return term(i) * product_of_sequence(i+1)\n    return product_of_sequence(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_of_sequence(i):\n        if i==n: \n            return term(i)\n        else:\n            return term(i) * product_of_sequence(i+1)\n    return product_of_sequence(1)\n\n","SubmissionTime":"2016-02-13T15:21:05.742356","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","12","","# Error: expected","#     36","# but got","#     12","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":218,"studentId":0,"date":"2016-02-09 19:13:18.759910","diff":"\r\nInputObject               SideIndicator\r\n-----------               -------------\r\n        result *= term(n) =>           \r\n        result *= n       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n    while n > 0:\n        result *= n\n        n -= 1\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n    while n > 0:\n        result *= term(n)\n        n -= 1\n    return result\n\n","SubmissionTime":"2016-02-09T19:13:18.75991","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":219,"studentId":0,"date":"2016-02-09 10:50:36.010405","diff":"\r\nInputObject                                        SideIndicator\r\n-----------                                        -------------\r\n        return term(n) * product(n-1,term)         =>           \r\n        return product(n,term) * product(n-1,term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n<=1:\n        return term(1)\n    else:\n        return product(n,term) * product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n<=1:\n        return term(1)\n    else:\n        return term(n) * product(n-1,term)\n\n","SubmissionTime":"2016-02-09T10:50:36.010405","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n,term) * product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n,term) * product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n,term) * product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n,term) * product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n,term) * product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n,term) * product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    if n<=1:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":220,"studentId":0,"date":"2016-02-13 20:54:04.617683","diff":"\r\nInputObject                                         SideIndicator\r\n-----------                                         -------------\r\n        return term(n) * product(n-1, term)         =>           \r\n        return identity(n) * product(n-1, identity) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n<2:\n        return 1\n    else:\n        return identity(n) * product(n-1, identity)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n<2:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-13T20:54:04.617683","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":221,"studentId":0,"date":"2016-02-09 10:50:21.006610","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) * product(n-1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-09T10:50:21.00661","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n-1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":222,"studentId":0,"date":"2016-02-11 18:16:15.247372","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while k < n:  =>           \r\n    while k <= n: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k = 1\n    total = 1\n    while k <= n:\n        k = k + 1\n        total = total * term(k)\n    return total\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k = 1\n    total = 1\n    while k < n:\n        k = k + 1\n        total = total * term(k)\n    return total\n","SubmissionTime":"2016-02-11T18:16:15.247372","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","24","","# Error: expected","#     6","# but got","#     24","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":223,"studentId":0,"date":"2016-02-10 22:45:23.504552","diff":"\r\nInputObject                                                  SideIndicator\r\n-----------                                                  -------------\r\n            return term(i) * helper_function(i + 1, n, term) =>           \r\n    return helper_function(1, n, term)                       =>           \r\n            return term(i) * term(i + 1)                     <=           \r\n    return term(1)                                           <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper_function(i, n, term):\n        if i > n:\n            return 1\n        else:\n            return term(i) * term(i + 1)\n    return term(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper_function(i, n, term):\n        if i > n:\n            return 1\n        else:\n            return term(i) * helper_function(i + 1, n, term)\n    return helper_function(1, n, term)\n\n","SubmissionTime":"2016-02-10T22:45:23.504552","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":224,"studentId":0,"date":"2016-02-16 22:16:46.552524","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while x < n:  =>           \r\n    while x <= n: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, x = 1 , 1\n    while x <= n:\n        total = total*term(x+1)\n        x += 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, x = 1 , 1\n    while x < n:\n        total = total*term(x+1)\n        x += 1\n    return total\n\n\n","SubmissionTime":"2016-02-16T22:16:46.552524","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","24","","# Error: expected","#     6","# but got","#     24","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":225,"studentId":0,"date":"2016-02-09 15:35:11.330201","diff":"\r\nInputObject                   SideIndicator\r\n-----------                   -------------\r\n        sum = sum * term(k+1) =>           \r\n        sum = sum * term(k)   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 0\n    sum = 1\n    while k < n:\n        sum = sum * term(k)\n        k += 1\n    return sum\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 0\n    sum = 1\n    while k < n:\n        sum = sum * term(k+1)\n        k += 1\n    return sum\n\n\n","SubmissionTime":"2016-02-09T15:35:11.330201","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":226,"studentId":0,"date":"2016-02-13 12:22:21.651872","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        return term(n)*product(n-1, term) =>           \r\n        return n*product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return 1\n    if n > 1:\n        return n*product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return 1\n    if n > 1:\n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-13T12:22:21.651872","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":227,"studentId":0,"date":"2016-02-08 15:45:30.102192","diff":"\r\nInputObject                          SideIndicator\r\n-----------                          -------------\r\n        counter = increment(counter) =>           \r\n        increment(counter)           <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter = 1\n    result = 1\n    while counter <= n:\n        num = term(counter)\n        result *= num\n        increment(counter)\n    return result\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter = 1\n    result = 1\n    while counter <= n:\n        num = term(counter)\n        result *= num\n        counter = increment(counter)\n    return result\n\n\n","SubmissionTime":"2016-02-08T15:45:30.102192","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":228,"studentId":0,"date":"2016-02-14 16:50:38.960946","diff":"\r\nInputObject                          SideIndicator\r\n-----------                          -------------\r\n    if(n==0):                        =>           \r\n        return 1                     =>           \r\n    return product(n-1,term)*term(n) =>           \r\n    count=1                          <=           \r\n    num=1                            <=           \r\n    if(count<n):                     <=           \r\n        val=term(num)                <=           \r\n    num+=1                           <=           \r\n    count+=1                         <=           \r\n    return product(n,val)            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    count=1\n    num=1\n    if(count<n):\n        val=term(num)\n    num+=1\n    count+=1\n    return product(n,val)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if(n==0):\n        return 1\n    return product(n-1,term)*term(n)\n\n","SubmissionTime":"2016-02-14T16:50:38.960946","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return product(n,val)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    val=term(num)","TypeError: 'int' object is not callable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":229,"studentId":0,"date":"2016-02-08 12:00:28.794022","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n        total = total * term(x) =>           \r\n        total = total * x       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    x = 1\n    total = 1\n    while x <= n:\n        total = total * x\n        x += 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    x = 1\n    total = 1\n    while x <= n:\n        total = total * term(x)\n        x += 1\n    return total\n\n\n","SubmissionTime":"2016-02-08T12:00:28.794022","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":230,"studentId":0,"date":"2016-02-09 21:34:34.547341","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while n > 1:  =>           \r\n    while n >= 1: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = term(n)\n    while n >= 1:\n        n -= 1\n        x *= term(n)\n    return x\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = term(n)\n    while n > 1:\n        n -= 1\n        x *= term(n)\n    return x\n\n\n","SubmissionTime":"2016-02-09T21:34:34.547341","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":231,"studentId":0,"date":"2016-02-11 21:41:23.838804","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    k = 1   =>           \r\n    k = 0   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 0\n    while k <= n:\n        total= total * term(k)\n        k += 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 1\n    while k <= n:\n        total= total * term(k)\n        k += 1\n    return total\n\n\n","SubmissionTime":"2016-02-11T21:41:23.838804","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":232,"studentId":0,"date":"2016-02-09 16:20:18.257603","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n    k, result = 1, 1 =>           \r\n    k, result = 1, 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, result = 1, 0\n    while k <= n:\n        k, result = k + 1, result * term(k)\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, result = 1, 1\n    while k <= n:\n        k, result = k + 1, result * term(k)\n    return result\n\n","SubmissionTime":"2016-02-09T16:20:18.257603","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":233,"studentId":0,"date":"2016-02-13 09:09:25.265138","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n            return term(i) * the_count(i + 1) =>           \r\n            return i * the_count(i + 1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def the_count(i):\n        if i == n:\n            return term(n)\n        else:\n            return i * the_count(i + 1)\n    return the_count(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def the_count(i):\n        if i == n:\n            return term(n)\n        else:\n            return term(i) * the_count(i + 1)\n    return the_count(1)\n\n","SubmissionTime":"2016-02-13T09:09:25.265138","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","18","","# Error: expected","#     36","# but got","#     18","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":234,"studentId":0,"date":"2016-02-10 08:14:30.725345","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n            return 1 =>           \r\n            return 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_helper(num):\n        if num > n:\n            return 0\n        else:\n            return term(num) * product_helper(num+1)\n    return product_helper(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_helper(num):\n        if num > n:\n            return 1\n        else:\n            return term(num) * product_helper(num+1)\n    return product_helper(1)\n\n","SubmissionTime":"2016-02-10T08:14:30.725345","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":235,"studentId":0,"date":"2016-02-15 12:59:02.752004","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n        return term(n)* product(n-1, term) =>           \r\n        return n* product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return n* product(n-1, term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return term(n)* product(n-1, term)\n\n\n","SubmissionTime":"2016-02-15T12:59:02.752004","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":236,"studentId":0,"date":"2016-02-15 21:49:04.925448","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    if n == 1:                              =>           \r\n        return term(1)                      =>           \r\n    else:                                   =>           \r\n        return term(n) * product(n-1, term) =>           \r\n    i == 1                                  <=           \r\n                                            <=           \r\n    while i < n:                            <=           \r\n        return term(i) * product(i+1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i == 1\n    \n    while i < n:\n        return term(i) * product(i+1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-15T21:49:04.925448","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    i == 1","NameError: name 'i' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":237,"studentId":0,"date":"2016-02-16 20:44:14.882933","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    total = 1                   =>           \r\n        total = total * term(k) =>           \r\n    total = 0                   <=           \r\n        total = total + term(k) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    for k in range(1, n+1):\n        total = total + term(k)\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for k in range(1, n+1):\n        total = total * term(k)\n    return total\n\n\n","SubmissionTime":"2016-02-16T20:44:14.882933","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":238,"studentId":0,"date":"2016-02-09 21:48:20.947986","diff":"\r\nInputObject                    SideIndicator\r\n-----------                    -------------\r\n        total = total*term(i)  =>           \r\n        total = total*i        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, i = 1, 1\n    while i<=n:\n        total = total*i \n        i+=1\n    return total \n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, i = 1, 1\n    while i<=n:\n        total = total*term(i) \n        i+=1\n    return total \n\n\n","SubmissionTime":"2016-02-09T21:48:20.947986","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":239,"studentId":0,"date":"2016-02-10 18:34:45.535812","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n        prod, k = prod * term(k), k+1   =>           \r\n        prod, k = prod * term(k,1), k+1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, prod = 1,1\n    while k <= n:\n        prod, k = prod * term(k,1), k+1\n    return prod\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, prod = 1,1\n    while k <= n:\n        prod, k = prod * term(k), k+1\n    return prod\n\n","SubmissionTime":"2016-02-10T18:34:45.535812","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    prod, k = prod * term(k,1), k+1","TypeError: identity() takes 1 positional argument but 2 were given","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":240,"studentId":0,"date":"2016-02-08 20:46:33.827205","diff":"\r\nInputObject                                          SideIndicator\r\n-----------                                          -------------\r\n        return term(n) * product(n - 1, term)        =>           \r\n        return term(n) * product(n - 1, term(n - 1)) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term(n - 1))\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-08T20:46:33.827205","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(n) * product(n - 1, term(n - 1))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(n) * product(n - 1, term(n - 1))","TypeError: 'int' object is not callable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":241,"studentId":0,"date":"2016-02-15 15:31:51.346503","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n        else:                            =>           \r\n            return total                 =>           \r\n    return product_maker(n, term, total) =>           \r\n    return total                         <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    def product_maker(n, term, total):\n        if n > 0:\n            total = total * (term(n))\n            return product_maker(n-1, term, total)\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    def product_maker(n, term, total):\n        if n > 0:\n            total = total * (term(n))\n            return product_maker(n-1, term, total)\n        else:\n            return total\n    return product_maker(n, term, total)\n\n\n","SubmissionTime":"2016-02-15T15:31:51.346503","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":242,"studentId":0,"date":"2016-02-09 23:23:15.109988","diff":"\r\nInputObject                                    SideIndicator\r\n-----------                                    -------------\r\n        return product(n-1,term) * term(n)     =>           \r\n        return product(n-1,term) + term(n)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return product(n-1,term) + term(n)    \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return product(n-1,term) * term(n)    \n\n","SubmissionTime":"2016-02-09T23:23:15.109988","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":244,"studentId":0,"date":"2016-02-10 19:19:34.516891","diff":"\r\nInputObject  SideIndicator\r\n-----------  -------------\r\n        k+=1 =>           \r\n        k+1  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k=1\n    total=1\n    while k<n+1:\n        total=total*term(k)\n        k+1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k=1\n    total=1\n    while k<n+1:\n        total=total*term(k)\n        k+=1\n    return total\n\n","SubmissionTime":"2016-02-10T19:19:34.516891","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":245,"studentId":0,"date":"2016-02-09 18:15:26.097783","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    if n == 1:                              =>           \r\n        return term(n)                      =>           \r\n        p = term(n) * product(n-1, term)    =>           \r\n        return p                            =>           \r\n    else:                                   =>           \r\n    i = 1                                   <=           \r\n    if i < n:                               <=           \r\n        return term(i) * product(i+1, term) <=           \r\n                                            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    if i < n:\n        return term(i) * product(i+1, term)\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    else:\n        p = term(n) * product(n-1, term)\n        return p\n\n\n","SubmissionTime":"2016-02-09T18:15:26.097783","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(i) * product(i+1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(i) * product(i+1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(i) * product(i+1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(i) * product(i+1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(i) * product(i+1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(i) * product(i+1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    if i < n:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":246,"studentId":0,"date":"2016-02-10 20:57:29.310016","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    for i in range(1, n+1): =>           \r\n    for i in range(1, n):   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    for i in range(1, n):\n        if term == identity:\n            total *= i\n        elif term == square:\n            total *= square(i)\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    for i in range(1, n+1):\n        if term == identity:\n            total *= i\n        elif term == square:\n            total *= square(i)\n    return total\n\n\n","SubmissionTime":"2016-02-10T20:57:29.310016","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":247,"studentId":0,"date":"2016-02-11 12:07:43.321574","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) * product(n-1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-11T12:07:43.321574","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n-1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":248,"studentId":0,"date":"2016-02-14 15:15:44.760871","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n        return n * product(n - 1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return n * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-14T15:15:44.760871","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":249,"studentId":0,"date":"2016-02-08 12:42:56.980527","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n        result = result * term(x) =>           \r\n        result = term(x)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    result = 1\n    for x in range(1,n+1):\n        result = term(x)\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    result = 1\n    for x in range(1,n+1):\n        result = result * term(x)\n    return result\n\n","SubmissionTime":"2016-02-08T12:42:56.980527","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","3","","# Error: expected","#     6","# but got","#     3","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":250,"studentId":0,"date":"2016-02-08 21:13:52.594274","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n        return term(n)*product((n-1),term) =>           \r\n        return term(n)*term(n-1)           <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==1:\n        return n\n    else:\n        return term(n)*term(n-1)\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==1:\n        return n\n    else:\n        return term(n)*product((n-1),term)\n","SubmissionTime":"2016-02-08T21:13:52.594274","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":251,"studentId":0,"date":"2016-02-12 10:44:21.071753","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-12T10:44:21.071753","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":252,"studentId":0,"date":"2016-02-15 14:54:57.215233","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n        total = total * term(c) =>           \r\n        total = total * term(k) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    total = 1\n    c = 1\n    while c <= n:\n        total = total * term(k)\n        c = c + 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    total = 1\n    c = 1\n    while c <= n:\n        total = total * term(c)\n        c = c + 1\n    return total\n\n\n","SubmissionTime":"2016-02-15T14:54:57.215233","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    total = total * term(k)","NameError: name 'k' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":253,"studentId":0,"date":"2016-02-12 22:58:39.700811","diff":"\r\nInputObject                          SideIndicator\r\n-----------                          -------------\r\n    return product(n-1,term)*term(n) =>           \r\n    return product(n-1)*term(n)      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return product(n-1)*term(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return product(n-1,term)*term(n)\n\n","SubmissionTime":"2016-02-12T22:58:39.700811","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return product(n-1)*term(n)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":254,"studentId":0,"date":"2016-02-12 13:48:53.978499","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    while k <= n:               =>           \r\n    if k <= n:                  <=           \r\n        return product(n, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 1\n    answer = 1\n    if k <= n:\n        answer = answer * term(k)\n        k += 1\n        return product(n, term)\n    return answer\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 1\n    answer = 1\n    while k <= n:\n        answer = answer * term(k)\n        k += 1\n    return answer\n\n","SubmissionTime":"2016-02-12T13:48:53.978499","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    if k <= n:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":255,"studentId":0,"date":"2016-02-15 01:57:58.152893","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    return multiplier(1, 1) =>           \r\n    return multiplier(1, 0) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def multiplier(x, total):\n        if x > n:\n            return total\n        else:\n            return multiplier(x + 1, total * term(x))\n    return multiplier(1, 0)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def multiplier(x, total):\n        if x > n:\n            return total\n        else:\n            return multiplier(x + 1, total * term(x))\n    return multiplier(1, 1)\n\n","SubmissionTime":"2016-02-15T01:57:58.152893","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":256,"studentId":0,"date":"2016-02-13 17:37:09.987613","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n        product = product * term(i + 1) =>           \r\n        product = product * term(i)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    product = term(1)\n    for i in range(1, n):\n\t    product = product * term(i)\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    product = term(1)\n    for i in range(1, n):\n\t    product = product * term(i + 1)\n    return product\n\n","SubmissionTime":"2016-02-13T17:37:09.987613","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":257,"studentId":0,"date":"2016-02-13 14:28:18.180979","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n        if k < n:                          =>           \r\n            return term(k) * helper(k + 1) =>           \r\n        elif k == n:                       =>           \r\n        if k <= n:                         <=           \r\n            return term(k) * term(k + 1)   <=           \r\n        else:                              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(k):\n        if k <= n:\n            return term(k) * term(k + 1)\n        else: \n            return term(k) \n    return helper(1) \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(k):\n        if k < n:\n            return term(k) * helper(k + 1)\n        elif k == n: \n            return term(k) \n    return helper(1) \n\n","SubmissionTime":"2016-02-13T14:28:18.180979","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":258,"studentId":0,"date":"2016-02-09 17:30:10.765028","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while i <= n: =>           \r\n    while i < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, total = 1, 1\n    while i < n:\n        total = total * term(i)\n        i += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, total = 1, 1\n    while i <= n:\n        total = total * term(i)\n        i += 1\n    return total\n\n","SubmissionTime":"2016-02-09T17:30:10.765028","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":259,"studentId":0,"date":"2016-02-09 10:28:24.055775","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n    if n==1:                               =>           \r\n        return 1                           =>           \r\n        return term(n) * product(n-1,term) =>           \r\n    return product(n,product)              =>           \r\n    if n==0 or n==1:                       =>           \r\n        return 1                           =>           \r\n    else:                                  =>           \r\n        n=1                                =>           \r\n        return n*factorial(n-1)            =>           \r\n    else:                                  =>           \r\n                                           =>           \r\n                                           =>           \r\n                                           =>           \r\n    \"*** YOUR CODE HERE ***\"               <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n    \treturn 1\n    else:\n    \treturn term(n) * product(n-1,term)\n\n","SubmissionTime":"2016-02-09T10:28:24.055775","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":260,"studentId":0,"date":"2016-02-16 18:12:21.042510","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while i <= n: =>           \r\n    while i < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i < n:\n        total = total * term(i)\n        i += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i <= n:\n        total = total * term(i)\n        i += 1\n    return total\n\n","SubmissionTime":"2016-02-16T18:12:21.04251","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":261,"studentId":0,"date":"2016-02-11 23:36:14.023147","diff":"\r\nInputObject                                                        SideIndicator\r\n-----------                                                        -------------\r\n            return term(n)*product_partial(n-1,term)               =>           \r\n    return product(n,identity)                                     =>           \r\n    def accumulate_partial (n,term):                               =>           \r\n        if n==2:                                                   =>           \r\n            return combiner(term(1), term(2))                      =>           \r\n        else:                                                      =>           \r\n            return combiner(term(n), accumulate_partial(n-1,term)) =>           \r\n    return combiner(base,accumulate_partial(n,term))               =>           \r\n            return term(n)*product_partial(n-1)                    <=           \r\n    return _______                                                 <=           \r\n    \"*** YOUR CODE HERE ***\"                                       <=           \r\n    \"*** YOUR CODE HERE ***\"                                       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_partial(n,term):\n        if n==2:\n            return term(1)*term(2)\n        else:\n            return term(n)*product_partial(n-1)\n    return product_partial(n,term)\n  \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_partial(n,term):\n        if n==2:\n            return term(1)*term(2)\n        else:\n            return term(n)*product_partial(n-1,term)\n    return product_partial(n,term)\n  \n\n","SubmissionTime":"2016-02-11T23:36:14.023147","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return product_partial(n,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product_partial","    return term(n)*product_partial(n-1)","TypeError: product_partial() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":262,"studentId":0,"date":"2016-02-09 21:09:42.854378","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n    result = 1                             =>           \r\n            result = result * term(n)      =>           \r\n    return result                          =>           \r\n            product = term(n) * term (n-1) <=           \r\n            return product                 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        while n > 1:\n            product = term(n) * term (n-1)\n            n -= 1\n            return product\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        while n > 1:\n            result = result * term(n)\n            n -= 1\n    return result\n\n\n","SubmissionTime":"2016-02-09T21:09:42.854378","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":264,"studentId":0,"date":"2016-02-10 20:07:24.390935","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    i, total = 1, 1 =>           \r\n    i, total = 1, 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, total = 1, 0\n    while i <= n:\n       total *= term(i)\n       i += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, total = 1, 1\n    while i <= n:\n       total *= term(i)\n       i += 1\n    return total\n\n","SubmissionTime":"2016-02-10T20:07:24.390935","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":265,"studentId":0,"date":"2016-02-14 20:40:38.129012","diff":"\r\nInputObject                           SideIndicator\r\n-----------                           -------------\r\n    counter = n - 1                   <=           \r\n    while counter > 0:                <=           \r\n        total = total * term(counter) <=           \r\n        counter -= 1                  <=           \r\n    total = 1                         <=           \r\n    return total                      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    counter = n - 1\n    while counter > 0:\n        total = total * term(counter)\n        counter -= 1\n    return total\n\n    total = 1\n    for i in range(1, n+1, 1):\n        total = total * term(i)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    total = 1\n    for i in range(1, n+1, 1):\n        total = total * term(i)\n    return total\n\n","SubmissionTime":"2016-02-14T20:40:38.129012","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":266,"studentId":0,"date":"2016-02-16 18:08:55.267635","diff":"\r\nInputObject                                                                                         SideIndicator\r\n-----------                                                                                         -------------\r\n    total=1                                                                                         =>           \r\n    i=1                                                                                             =>           \r\n    while i <= n:                                                                                   =>           \r\n        total=total*term(i)                                                                         =>           \r\n        i+=1                                                                                        =>           \r\n    return total                                                                                    =>           \r\n                                                                                                    =>           \r\n    return accumulate(base if not pred(term) else lambda term,base:combiner(term,base),base,n,term) =>           \r\n    # total=1                                                                                       <=           \r\n    # i=1                                                                                           <=           \r\n    # while i <= n:                                                                                 <=           \r\n    #     total=total*term(i)                                                                       <=           \r\n    #     i+=1                                                                                      <=           \r\n    # return total                                                                                  <=           \r\n    return term(n)*product(n-1,term)                                                                <=           \r\n    return accumulate(lambda term,base:combiner(term,base) if pred(term) else base,base,n,term)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    # total=1\n    # i=1\n    # while i <= n:\n    #     total=total*term(i)\n    #     i+=1\n    # return total\n    return term(n)*product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total=1\n    i=1\n    while i <= n:\n        total=total*term(i)\n        i+=1\n    return total\n    \n\n","SubmissionTime":"2016-02-16T18:08:55.267635","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return term(n)*product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return term(n)*product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return term(n)*product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return term(n)*product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return term(n)*product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return term(n)*product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return term(n)*product(n-1,term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":267,"studentId":0,"date":"2016-02-15 15:23:28.305540","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n: \n        total, k = total * term(k), k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n: \n        total, k = total * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-15T15:23:28.30554","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":268,"studentId":0,"date":"2016-02-13 17:40:56.827035","diff":"\r\nInputObject                                         SideIndicator\r\n-----------                                         -------------\r\n            return helper(n - 1, term, x * term(n)) =>           \r\n    return helper(n, term, 1)                       =>           \r\n            return x * term(n)                      <=           \r\n    return (n - 1, term, x)                         <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(n, term, x):\n        if n == 0:\n            return x\n        else:\n            return x * term(n)\n    return (n - 1, term, x)\n\n\n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(n, term, x):\n        if n == 0:\n            return x\n        else:\n            return helper(n - 1, term, x * term(n))\n    return helper(n, term, 1)\n\n\n\n\n\n\n","SubmissionTime":"2016-02-13T17:40:56.827035","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return (n - 1, term, x)","NameError: name 'x' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":269,"studentId":0,"date":"2016-02-09 20:53:15.231735","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    if n==1:     =>           \r\n        return 1 =>           \r\n    if n == 1:   <=           \r\n        return   <=           \r\n    if n==0:     <=           \r\n        return 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return\n    if n==0:\n        return 0\n    return term(n)*product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return 1\n    return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-09T20:53:15.231735","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(n)*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(n)*product(n-1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":270,"studentId":0,"date":"2016-02-08 12:03:14.509912","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    if n == 1:   =>           \r\n        return 1 =>           \r\n    elif n > 0:  =>           \r\n                 =>           \r\n    if n != 0:   <=           \r\n                 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n != 0:\n        return term(n) * product(n-1, term)\n    \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    elif n > 0:\n        return term(n) * product(n-1, term)\n\n\n","SubmissionTime":"2016-02-08T12:03:14.509912","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n-1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":271,"studentId":0,"date":"2016-02-08 21:29:00.847646","diff":"\r\nInputObject                           SideIndicator\r\n-----------                           -------------\r\n    product =1                        =>           \r\n    for i in range (1,n+1):           =>           \r\n        product=product*term(i)       =>           \r\n    product, k =1,1                   <=           \r\n    while k<=n:                       <=           \r\n        product,k=product*term(n),k+1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product, k =1,1\n    while k<=n:\n        product,k=product*term(n),k+1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product =1\n    for i in range (1,n+1):\n        product=product*term(i)\n    return product\n\n","SubmissionTime":"2016-02-08T21:29:00.847646","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","27","","# Error: expected","#     6","# but got","#     27","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":272,"studentId":0,"date":"2016-02-10 00:31:41.607173","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n    total = 1                     =>           \r\n    while 1 <= n:                 =>           \r\n        total = total * term(n)   =>           \r\n        n = n-1                   =>           \r\n    return product(n, identity)   =>           \r\n    return combiner(base,product) =>           \r\n    total, k = 1, 1               <=           \r\n    while k <= n:                 <=           \r\n        total = total * k         <=           \r\n        k = k+1                   <=           \r\n    return _______                <=           \r\n    \"*** YOUR CODE HERE ***\"      <=           \r\n                                  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total = total * k\n        k = k+1\n    return total\n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while 1 <= n:\n        total = total * term(n)\n        n = n-1\n    return total\n\n\n","SubmissionTime":"2016-02-10T00:31:41.607173","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":274,"studentId":0,"date":"2016-02-08 08:28:38.782605","diff":"\r\nInputObject                         SideIndicator\r\n-----------                         -------------\r\n    i = 1                           =>           \r\n    result = 1                      =>           \r\n    while i <= n:                   =>           \r\n        result *= term(i)           =>           \r\n        i += 1                      =>           \r\n    return result                   =>           \r\n    if n == 1:                      <=           \r\n        return term(1)              <=           \r\n    elif n == 2:                    <=           \r\n        return term(1) * term(2)    <=           \r\n    else:                           <=           \r\n        return product(n - 1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    elif n == 2:\n        return term(1) * term(2)\n    else:\n        return product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    result = 1\n    while i <= n:\n        result *= term(i)\n        i += 1\n    return result\n\n","SubmissionTime":"2016-02-08T08:28:38.782605","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":275,"studentId":0,"date":"2016-02-08 11:46:57.730343","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    k = n           <=           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = n\n    total, k = 0, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n\n","SubmissionTime":"2016-02-08T11:46:57.730343","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":276,"studentId":0,"date":"2016-02-12 20:14:11.369887","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    return term(n) * product(n-1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return term(n) * product(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-12T20:14:11.369887","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return term(n) * product(n-1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":277,"studentId":0,"date":"2016-02-08 14:36:38.028288","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) * product(n-1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T14:36:38.028288","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(n) * product(n-1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":278,"studentId":0,"date":"2016-02-12 15:00:39.768594","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n            return term(k) * inner(term, k+1) =>           \r\n            return term(k) * inner(k+1)       <=           \r\n\r\n\r\n","before":"def product(n, term, k =1):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def inner (term, k):\n        if k == n:\n            return term (n)\n        else:\n            return term(k) * inner(k+1)\n    return inner (term, k)\n\n","after":"def product(n, term, k =1):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def inner (term, k):\n        if k == n:\n            return term (n)\n        else:\n            return term(k) * inner(term, k+1)\n    return inner (term, k)\n\n","SubmissionTime":"2016-02-12T15:00:39.768594","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return inner (term, k)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in inner","    return term(k) * inner(k+1)","TypeError: inner() missing 1 required positional argument: 'k'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":279,"studentId":0,"date":"2016-02-15 16:10:34.780817","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n        return n * product(n - 1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return n * product(n - 1, term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return term(n) * product(n - 1, term)\n\n\n","SubmissionTime":"2016-02-15T16:10:34.780817","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":280,"studentId":0,"date":"2016-02-08 16:46:21.326586","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while i <= n: =>           \r\n    while i < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = i\n    while i < n:\n        total = total * term(i)\n        i = increment(i)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = i\n    while i <= n:\n        total = total * term(i)\n        i = increment(i)\n    return total\n\n","SubmissionTime":"2016-02-08T16:46:21.326586","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":281,"studentId":0,"date":"2016-02-09 23:18:25.167688","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    while n >= 1:\n        total *= term(n)\n        n -= 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n >= 1:\n        total *= term(n)\n        n -= 1\n    return total\n\n\n","SubmissionTime":"2016-02-09T23:18:25.167688","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":282,"studentId":0,"date":"2016-02-13 18:54:56.247236","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n)*product((n-1), term) =>           \r\n                                        =>           \r\n    return term(n)*(product(n-1), term) <=           \r\n                                        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==1:\n        return term(1)\n    return term(n)*(product(n-1), term)\n    \n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==1:\n        return term(1)\n    return term(n)*product((n-1), term)\n\n","SubmissionTime":"2016-02-13T18:54:56.247236","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n)*(product(n-1), term)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":283,"studentId":0,"date":"2016-02-08 18:43:28.983621","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return 1 * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return 1 * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T18:43:28.983621","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":284,"studentId":0,"date":"2016-02-08 21:07:44.556896","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n        total = total * term(i) =>           \r\n        total = total * i       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    i = n\n    total = 1\n    while i > 0:\n        total = total * i\n        i -= 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    i = n\n    total = 1\n    while i > 0:\n        total = total * term(i)\n        i -= 1\n    return total\n\n","SubmissionTime":"2016-02-08T21:07:44.556896","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":285,"studentId":0,"date":"2016-02-15 20:55:22.411703","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return product(n - 1, term) * term(n) =>           \r\n        return product(n - 1) * term(n)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n    \treturn term(n)\n    else:\n    \treturn product(n - 1) * term(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n    \treturn term(n)\n    else:\n    \treturn product(n - 1, term) * term(n)\n\n","SubmissionTime":"2016-02-15T20:55:22.411703","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return product(n - 1) * term(n)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":286,"studentId":0,"date":"2016-02-08 10:17:58.056183","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n        return term(n)*product(n-1,term) =>           \r\n        term(n)*product(n-1,term)        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 1:\n        return 1\n    else:\n        term(n)*product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 1:\n        return 1\n    else:\n        return term(n)*product(n-1,term)\n\n","SubmissionTime":"2016-02-08T10:17:58.056183","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    term(n)*product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    term(n)*product(n-1,term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":287,"studentId":0,"date":"2016-02-13 13:54:49.413527","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n            return term(R) * helper(R+1) =>           \r\n            return term(R) + helper(R+1) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper (R) :\n        if R == n :\n            return term(n)\n        else :\n            return term(R) + helper(R+1)\n    return helper(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper (R) :\n        if R == n :\n            return term(n)\n        else :\n            return term(R) * helper(R+1)\n    return helper(1)\n\n","SubmissionTime":"2016-02-13T13:54:49.413527","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":288,"studentId":0,"date":"2016-02-13 18:56:36.308378","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    x=1     =>           \r\n            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n\n    while x<=n:\n        result *= term(x)\n        x += 1\n\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n    x=1\n    while x<=n:\n        result *= term(x)\n        x += 1\n\n    return result\n\n","SubmissionTime":"2016-02-13T18:56:36.308378","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    while x<=n:","UnboundLocalError: local variable 'x' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":289,"studentId":0,"date":"2016-02-09 16:43:44.716492","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) + product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return 0\n    elif n==1:\n        return term(1)\n    else:\n        return term(n) + product(n-1, term)\n\n    \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return 0\n    elif n==1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n    \n\n","SubmissionTime":"2016-02-09T16:43:44.716492","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":290,"studentId":0,"date":"2016-02-10 13:32:46.367419","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    return term(n) * product(n - 1, term) =>           \r\n    return term(n) * term(n - 1)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    return term(n) * term(n - 1)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    return term(n) * product(n - 1, term)\n\n\n","SubmissionTime":"2016-02-10T13:32:46.367419","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":291,"studentId":0,"date":"2016-02-08 21:56:17.501636","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 1\n    return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 1\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T21:56:17.501636","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":292,"studentId":0,"date":"2016-02-12 22:38:23.235895","diff":"\r\nInputObject                         SideIndicator\r\n-----------                         -------------\r\n            total = total * term(i) =>           \r\n            total = total * i       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(i, total):\n        if i > n:\n            return total\n        else:\n            total = total * i\n            return helper(i + 1, total)\n    return helper(1, 1)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(i, total):\n        if i > n:\n            return total\n        else:\n            total = total * term(i)\n            return helper(i + 1, total)\n    return helper(1, 1)\n\n\n","SubmissionTime":"2016-02-12T22:38:23.235895","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":293,"studentId":0,"date":"2016-02-12 15:47:03.686214","diff":"\r\nInputObject                                                             SideIndicator\r\n-----------                                                             -------------\r\n    total = 1                                                           =>           \r\n    for i in range(1, n+1):                                             =>           \r\n        a = term(i)                                                     =>           \r\n        total *= a                                                      =>           \r\n    return product(n, identity)                                         =>           \r\n    total = base                                                        =>           \r\n    for i in range(1, n):                                               =>           \r\n        total = combiner(total, term(i))                                =>           \r\n    return total                                                        =>           \r\n    # def summation_using_accumulate(n, term):                          =>           \r\n    # \"\"\"Returns the sum of TERM(1) + ... + TERM(N). The implementation =>           \r\n    # uses accumulate.                                                  =>           \r\n    # >>> summation_using_accumulate(5, square)                         =>           \r\n    # 55                                                                =>           \r\n    # >>> summation_using_accumulate(5, triple)                         =>           \r\n    # 45                                                                =>           \r\n    # >>> from construct_check import check                             =>           \r\n    # >>> check(HW_SOURCE_FILE, 'summation_using_accumulate',           =>           \r\n    # ...       ['Recursion', 'For', 'While'])                          =>           \r\n    # True                                                              =>           \r\n    # \"\"\"                                                               =>           \r\n    # \"*** YOUR CODE HERE ***\"                                          =>           \r\n    # return _______                                                    =>           \r\n                                                                        =>           \r\n    total = 0                                                           <=           \r\n    for i in range(0, n+1):                                             <=           \r\n        total += map(term,i)                                            <=           \r\ndef summation_using_accumulate(n, term):                                <=           \r\n    \"\"\"Returns the sum of TERM(1) + ... + TERM(N). The implementation   <=           \r\n    uses accumulate.                                                    <=           \r\n    >>> summation_using_accumulate(5, square)                           <=           \r\n    55                                                                  <=           \r\n    >>> summation_using_accumulate(5, triple)                           <=           \r\n    45                                                                  <=           \r\n    >>> check(HW_SOURCE_FILE, 'summation_using_accumulate',             <=           \r\n    ...       ['Recursion', 'For', 'While'])                            <=           \r\n    return _______                                                      <=           \r\n    return _______                                                      <=           \r\n    >>> from construct_check import check                               <=           \r\n    True                                                                <=           \r\n    \"*** YOUR CODE HERE ***\"                                            <=           \r\n    \"*** YOUR CODE HERE ***\"                                            <=           \r\n    \"\"\"                                                                 <=           \r\n    \"*** YOUR CODE HERE ***\"                                            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    for i in range(0, n+1):\n        total += map(term,i)\n    return total\n        \n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for i in range(1, n+1):\n        a = term(i)\n        total *= a\n    return total\n        \n\n\n\n\n","SubmissionTime":"2016-02-12T15:47:03.686214","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    total += map(term,i)","TypeError: 'int' object is not iterable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":294,"studentId":0,"date":"2016-02-08 15:29:58.057841","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T15:29:58.057841","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":295,"studentId":0,"date":"2016-02-09 16:55:05.248007","diff":"\r\nInputObject        SideIndicator\r\n-----------        -------------\r\n        if i > n:  =>           \r\n        if i == n: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(i=1):\n        if i == n:\n            return 1\n        return term(i) * helper(i + 1)\n    return helper()\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(i=1):\n        if i > n:\n            return 1\n        return term(i) * helper(i + 1)\n    return helper()\n\n\n","SubmissionTime":"2016-02-09T16:55:05.248007","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":296,"studentId":0,"date":"2016-02-11 12:40:10.238020","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return 1                            =>           \r\n        return term(n) * product(n-1, term) =>           \r\n        return 0                            <=           \r\n        return term(n) + product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 1:\n        return 0\n    else:\n        return term(n) + product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 1:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-11T12:40:10.23802","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":297,"studentId":0,"date":"2016-02-15 13:38:45.905996","diff":"\r\nInputObject        SideIndicator\r\n-----------        -------------\r\n    total, i = 1,1 =>           \r\n    while i<=n:    =>           \r\n    total, i = 1,0 <=           \r\n    while i<n:     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, i = 1,0\n    while i<n:\n        total *= term(i)\n        i+=1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, i = 1,1\n    while i<=n:\n        total *= term(i)\n        i+=1\n    return total\n\n","SubmissionTime":"2016-02-15T13:38:45.905996","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":298,"studentId":0,"date":"2016-02-11 19:15:57.616914","diff":"\r\nInputObject                                  SideIndicator\r\n-----------                                  -------------\r\n        return (term(n)*product((n-1),term)) =>           \r\n        return (term(n)*product(n-1))        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    if n==1:\n        return term(n)\n    else:\n        return (term(n)*product(n-1))\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    if n==1:\n        return term(n)\n    else:\n        return (term(n)*product((n-1),term))\n\n\n","SubmissionTime":"2016-02-11T19:15:57.616914","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return (term(n)*product(n-1))","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":299,"studentId":0,"date":"2016-02-12 13:24:13.596937","diff":"\r\nInputObject                                    SideIndicator\r\n-----------                                    -------------\r\n        return term(n) * product(n-1, term)    =>           \r\n        return term(n) * product(n, term(n-1)) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(n) \n    else:\n        return term(n) * product(n, term(n-1))\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(n) \n    else:\n        return term(n) * product(n-1, term)\n\n\n","SubmissionTime":"2016-02-12T13:24:13.596937","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n, term(n-1))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n, term(n-1))","TypeError: 'int' object is not callable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":300,"studentId":0,"date":"2016-02-12 21:34:26.737176","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    if n == 0:                            =>           \r\n        return 1                          =>           \r\n        return term(n)*product(n-1, term) =>           \r\n                                          =>           \r\n    else:                                 =>           \r\n    def count(k):                         <=           \r\n        if k == 0:                        <=           \r\n            return                        <=           \r\n        else:                             <=           \r\n            return term(k)*count(k-1)     <=           \r\n    return count(n)                       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def count(k):\n        if k == 0:\n            return \n        else:\n            return term(k)*count(k-1)\n    return count(n)\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    else:\n        return term(n)*product(n-1, term)\n    \n\n\n\n","SubmissionTime":"2016-02-12T21:34:26.737176","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return count(n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in count","    return term(k)*count(k-1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in count","    return term(k)*count(k-1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in count","    return term(k)*count(k-1)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":301,"studentId":0,"date":"2016-02-13 18:54:22.584197","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    prod = 1; =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    while i <= n:\n    \tprod *= term(i)\n    \ti += 1\n    return prod\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    prod = 1;\n    while i <= n:\n    \tprod *= term(i)\n    \ti += 1\n    return prod\n\n","SubmissionTime":"2016-02-13T18:54:22.584197","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    prod *= term(i)","UnboundLocalError: local variable 'prod' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":302,"studentId":0,"date":"2016-02-14 07:33:43.204018","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while k <= n: =>           \r\n    while k <= 1: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k,multi=1,1\n    while k <= 1:\n        multi=term(k)*multi\n        k=k+1\n    return multi \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k,multi=1,1\n    while k <= n:\n        multi=term(k)*multi\n        k=k+1\n    return multi \n\n","SubmissionTime":"2016-02-14T07:33:43.204018","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":303,"studentId":0,"date":"2016-02-12 14:45:13.910761","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) + product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) + product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-12T14:45:13.910761","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":304,"studentId":0,"date":"2016-02-12 09:48:44.076163","diff":"\r\nInputObject                SideIndicator\r\n-----------                -------------\r\n    return prod_help(1, 1) =>           \r\n    return prod_help(1, 0) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def prod_help(x, total):\n        total = total * term(x)\n        x += 1\n        if x > n:\n            return total\n        else:\n            return prod_help(x, total)\n    return prod_help(1, 0)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def prod_help(x, total):\n        total = total * term(x)\n        x += 1\n        if x > n:\n            return total\n        else:\n            return prod_help(x, total)\n    return prod_help(1, 1)\n\n","SubmissionTime":"2016-02-12T09:48:44.076163","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":305,"studentId":0,"date":"2016-02-10 20:46:04.287600","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n            return term(k) * counter(k + 1) =>           \r\n            return k * counter(k + 1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    def counter(k):\n        if k == n:\n            return term(k)\n        else:\n            return k * counter(k + 1)\n    return counter(1)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    def counter(k):\n        if k == n:\n            return term(k)\n        else:\n            return term(k) * counter(k + 1)\n    return counter(1)\n\n\n","SubmissionTime":"2016-02-10T20:46:04.2876","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","18","","# Error: expected","#     36","# but got","#     18","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":306,"studentId":0,"date":"2016-02-11 23:00:30.245976","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return product(n - 1, term) * term(n) =>           \r\n        return n * product(n - 1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0: \n        return 1 \n    else: \n        return n * product(n - 1, term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0: \n        return 1 \n    else: \n        return product(n - 1, term) * term(n)\n\n\n","SubmissionTime":"2016-02-11T23:00:30.245976","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":307,"studentId":0,"date":"2016-02-11 00:08:48.258704","diff":"\r\nInputObject                                                          SideIndicator\r\n-----------                                                          -------------\r\n            return f(counter) * product_counter((counter + 1), n, f) =>           \r\n            return f(n) * product_counter((counter + 1), n, f)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_counter(counter, n, f):\n        if counter == n:\n            return f(n)\n        else: \n            return f(n) * product_counter((counter + 1), n, f)\n\n    return product_counter(1, n, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_counter(counter, n, f):\n        if counter == n:\n            return f(n)\n        else: \n            return f(counter) * product_counter((counter + 1), n, f)\n\n    return product_counter(1, n, term)\n\n","SubmissionTime":"2016-02-11T00:08:48.258704","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","27","","# Error: expected","#     6","# but got","#     27","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":308,"studentId":0,"date":"2016-02-08 22:03:53.180257","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n                                            =>           \r\n        return term(1)                      =>           \r\n        return term(n) * product(n-1, term) =>           \r\n                                            =>           \r\n        return 1                            <=           \r\n        return n * product(n-1, term)       <=           \r\n                                            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    else:\n        return n * product(n-1, term)\n        \n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T22:03:53.180257","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":309,"studentId":0,"date":"2016-02-08 09:41:33.785732","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    x = 1                       =>           \r\n    func = lambda y: term(y)    =>           \r\n    track = 1                   =>           \r\n    while x <= n:               =>           \r\n        track = track * func(x) =>           \r\n        x += 1                  =>           \r\n    return track                =>           \r\n                                =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    x = 1\n    func = lambda y: term(y)\n    track = 1\n    while x <= n:\n    \ttrack = track * func(x)\n    \tx += 1\n    return track\n\n\n","SubmissionTime":"2016-02-08T09:41:33.785732","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":310,"studentId":0,"date":"2016-02-14 18:04:33.757762","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n        return term(n) * product(n - 1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n - 1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-14T18:04:33.757762","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n - 1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":311,"studentId":0,"date":"2016-02-10 19:08:28.615872","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    sum =1  =>           \r\n    sum =0  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=1\n    sum =0\n    while i<=n:\n        sum *= term(i)\n        i+=1\n    return sum\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=1\n    sum =1\n    while i<=n:\n        sum *= term(i)\n        i+=1\n    return sum\n\n","SubmissionTime":"2016-02-10T19:08:28.615872","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":312,"studentId":0,"date":"2016-02-13 22:25:03.846275","diff":"\r\nInputObject                SideIndicator\r\n-----------                -------------\r\n    for i in range(1,n+1): =>           \r\n    for i in range(1,n):   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    product=1\n    for i in range(1,n):\n        number=term(i)\n        product=product*number\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    product=1\n    for i in range(1,n+1):\n        number=term(i)\n        product=product*number\n    return product\n\n","SubmissionTime":"2016-02-13T22:25:03.846275","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":313,"studentId":0,"date":"2016-02-12 14:42:47.410537","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    k = 1   =>           \r\n    k = 0   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 0\n    prod = 1\n    while k <= n:\n       prod *= term(k)\n       k += 1\n    return prod\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 1\n    prod = 1\n    while k <= n:\n       prod *= term(k)\n       k += 1\n    return prod\n\n","SubmissionTime":"2016-02-12T14:42:47.410537","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":314,"studentId":0,"date":"2016-02-16 14:17:39.296253","diff":"\r\nInputObject                                       SideIndicator\r\n-----------                                       -------------\r\n    k,product=1,1                                 =>           \r\n    while k<=n:                                   =>           \r\n        product,k=product*term(k), k+1            =>           \r\n    return product                                =>           \r\n    t = term                                      <=           \r\n    def product(n,t):                             <=           \r\n        if n>=0:                                  <=           \r\n            def factorial(n):                     <=           \r\n                if n==0:                          <=           \r\n                    return 1                      <=           \r\n                else:                             <=           \r\n                    return n * factorial(n-1)     <=           \r\n        if t == increment:                        <=           \r\n            return (n + 1) * factorial((n+1)-1)   <=           \r\n        elif t == square:                         <=           \r\n            n = x                                 <=           \r\n            x = n*n                               <=           \r\n            return (n) * factorial(n-1)           <=           \r\n        elif t == triple:                         <=           \r\n            return (3 * n) * factorial((3 * n)-1) <=           \r\n        else:                                     <=           \r\n            return n * factorial(n-1)             <=           \r\n    return product(n,t)                           <=           \r\n    def factorial(n):                             <=           \r\n            if n==0:                              <=           \r\n                return 1                          <=           \r\n            else:                                 <=           \r\n                return n * factorial(n-1)         <=           \r\n    return n                                      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    t = term\n    def product(n,t):\n        if n>=0:\n            ","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k,product=1,1\n    while k<=n:\n        product,k=product*term(k), k+1\n    return product\n\n\n","SubmissionTime":"2016-02-16T14:17:39.296253","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 48, in product","    return product(n,t)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 41, in product","    n = x","UnboundLocalError: local variable 'x' referenced before assignment","","# Error: expected","#     36","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":315,"studentId":0,"date":"2016-02-16 11:32:18.412907","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    sum = 1 =>           \r\n    sum = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    sum = 0\n    i = 1\n\n    while i <= n:\n        sum = sum * term(i)\n        i += 1\n    return sum\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    sum = 1\n    i = 1\n\n    while i <= n:\n        sum = sum * term(i)\n        i += 1\n    return sum\n\n\n","SubmissionTime":"2016-02-16T11:32:18.412907","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":316,"studentId":0,"date":"2016-02-12 11:48:04.695215","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n    if n==1:                             =>           \r\n        return term(n)*product(n-1,term) =>           \r\n    if n==0:                             <=           \r\n        return term(n)*term(n-1)         <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return term(n)\n    else:\n        return term(n)*term(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(n)\n    else:\n        return term(n)*product(n-1,term)\n\n","SubmissionTime":"2016-02-12T11:48:04.695215","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":317,"studentId":0,"date":"2016-02-12 22:44:50.089588","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) * term(n-1)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * term(n-1)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n\n","SubmissionTime":"2016-02-12T22:44:50.089588","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":318,"studentId":0,"date":"2016-02-15 23:02:07.092464","diff":"\r\nInputObject        SideIndicator\r\n-----------        -------------\r\n    while i < n+1: =>           \r\n    while i != n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i != n:\n        total = total * term(i)\n        i +=1\n    return total\n    \"\"\"def helper(i, total):\n        if i<n:\n            return helper(i+1, total*term(i))\n        else:\n            return total\n    helper(1,0)\"\"\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i < n+1:\n        total = total * term(i)\n        i +=1\n    return total\n    \"\"\"def helper(i, total):\n        if i<n:\n            return helper(i+1, total*term(i))\n        else:\n            return total\n    helper(1,0)\"\"\"\n\n","SubmissionTime":"2016-02-15T23:02:07.092464","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":319,"studentId":0,"date":"2016-02-15 16:14:03.519396","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    a, total = n, 1 =>           \r\n    a, b = n, 1     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a, b = n, 1\n    while a > 1:\n        total *= term(a)\n        a -= 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a, total = n, 1\n    while a > 1:\n        total *= term(a)\n        a -= 1\n    return total\n\n\n","SubmissionTime":"2016-02-15T16:14:03.519396","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    total *= term(a)","UnboundLocalError: local variable 'total' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":320,"studentId":0,"date":"2016-02-16 11:28:08.657264","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k<=n:\n        total, k = total*term(k), k+1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k<=n:\n        total, k = total*term(k), k+1\n    return total\n\n","SubmissionTime":"2016-02-16T11:28:08.657264","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":321,"studentId":0,"date":"2016-02-12 16:10:49.777757","diff":"\r\nInputObject                                                  SideIndicator\r\n-----------                                                  -------------\r\n            return term(k) * product_bodyguard(n, term, k+1) =>           \r\n            return k * product_bodyguard(n, term, k+1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_bodyguard(n, term, k):\n        if k == n:\n            return term(n)\n        else:\n            return k * product_bodyguard(n, term, k+1)\n    return product_bodyguard(n, term, 1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_bodyguard(n, term, k):\n        if k == n:\n            return term(n)\n        else:\n            return term(k) * product_bodyguard(n, term, k+1)\n    return product_bodyguard(n, term, 1)\n\n","SubmissionTime":"2016-02-12T16:10:49.777757","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","18","","# Error: expected","#     36","# but got","#     18","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":322,"studentId":0,"date":"2016-02-14 14:15:44.764826","diff":"\r\nInputObject     SideIndicator\r\n-----------     -------------\r\n    i, b = 1, 1 =>           \r\n    i, b = 0, 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, b = 0, 0\n    while i <= n:\n        b *= term(i)\n        i += 1\n    return b\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, b = 1, 1\n    while i <= n:\n        b *= term(i)\n        i += 1\n    return b\n\n\n\n","SubmissionTime":"2016-02-14T14:15:44.764826","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":323,"studentId":0,"date":"2016-02-12 16:09:36.495157","diff":"\r\nInputObject                                                         SideIndicator\r\n-----------                                                         -------------\r\n    if n == 1:                                                      =>           \r\n        return term(1)                                              =>           \r\n    return term(n)*product(n-1, term)                               =>           \r\n    if n == 0:                                                      =>           \r\n        return 1                                                    =>           \r\n    return product(n, identity)                                     =>           \r\n    if n == 0:                                                      =>           \r\n        return base                                                 =>           \r\n    return combiner(accumulate(combiner, base, n-1, term), term(n)) =>           \r\n    return accumulate(add, 0, n, term)                              =>           \r\n                                                                    =>           \r\n    x = 1                                                           <=           \r\n    def helper_fxn(x, term):                                        <=           \r\n        if x <= n:                                                  <=           \r\n            return term(x) * helper_fxn(x+1, term)                  <=           \r\n        else:                                                       <=           \r\n            return 0                                                <=           \r\n    return _______                                                  <=           \r\n    return _______                                                  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    x = 1\n    def helper_fxn(x, term):\n        if x <= n:\n            return term(x) * helper_fxn(x+1, term)\n        else:\n            return 0\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-12T16:09:36.495157","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":324,"studentId":0,"date":"2016-02-11 18:51:57.098106","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    k, total = 1, 1                       =>           \r\n    while k <= n:                         =>           \r\n        total, k = total * term(k), k + 1 =>           \r\n    return total                          =>           \r\n    return n * product(n - 1, identity)   =>           \r\n    return Y(________)  # Replace         =>           \r\n    return _______                        <=           \r\n    return Y(________)  # Replace         <=           \r\n    \"*** YOUR CODE HERE ***\"              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, total = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-11T18:51:57.098106","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":325,"studentId":0,"date":"2016-02-15 18:15:54.291659","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n        product=product*term(k) =>           \r\n        product=product*term(n) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, product = 1, 1\n    while k<=n:\n        product=product*term(n)\n        k+=1\n    return product\n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, product = 1, 1\n    while k<=n:\n        product=product*term(k)\n        k+=1\n    return product\n\n\n\n\n","SubmissionTime":"2016-02-15T18:15:54.291659","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","27","","# Error: expected","#     6","# but got","#     27","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":326,"studentId":0,"date":"2016-02-13 13:40:14.700443","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) + product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    else:\n        return term(n) + product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-13T13:40:14.700443","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","7","","# Error: expected","#     6","# but got","#     7","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":327,"studentId":0,"date":"2016-02-12 17:15:17.719900","diff":"\r\nInputObject                        SideIndicator\r\n-----------                        -------------\r\n            return term(k) * total =>           \r\n            return k * total       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(k,total):\n        if k == n:\n            return k * total\n        else:\n            total = total * term(k)\n        return helper(k+1,total)\n    return helper(1,1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(k,total):\n        if k == n:\n            return term(k) * total\n        else:\n            total = total * term(k)\n        return helper(k+1,total)\n    return helper(1,1)\n\n","SubmissionTime":"2016-02-12T17:15:17.7199","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","12","","# Error: expected","#     36","# but got","#     12","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":328,"studentId":0,"date":"2016-02-15 21:40:26.827489","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product((n-1), term) =>           \r\n        return term(n) * term(n-1)            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * term(n-1)\n\n\n    \"\"\" without recursion\n    i = 1\n    total = 1\n    while i <= n:\n        total = total * term(i)\n        i = i+1\n    return total\n    \"\"\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product((n-1), term)\n\n\n    \"\"\" without recursion\n    i = 1\n    total = 1\n    while i <= n:\n        total = total * term(i)\n        i = i+1\n    return total\n    \"\"\"\n\n","SubmissionTime":"2016-02-15T21:40:26.827489","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":329,"studentId":0,"date":"2016-02-14 14:08:55.845247","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n    if n==1:                             =>           \r\n        return term(1)                   =>           \r\n        return product(n-1,term)*term(n) =>           \r\n    else:                                =>           \r\n    product=1                            <=           \r\n    while n>=1:                          <=           \r\n        a=term(n)                        <=           \r\n        product=product*a                <=           \r\n    return product                       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    product=1\n    while n>=1:\n        a=term(n)\n        product=product*a\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==1:\n        return term(1)\n    else:\n        return product(n-1,term)*term(n)\n\n","SubmissionTime":"2016-02-14T14:08:55.845247","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":330,"studentId":0,"date":"2016-02-12 17:22:34.289033","diff":"\r\nInputObject              SideIndicator\r\n-----------              -------------\r\n    return counter(1, 1) =>           \r\n    return counter(1, 0) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def counter(i, total):\n        if i > n:\n            return total \n        else:\n            total = total * term(i)\n            return counter(i+1, total)\n    return counter(1, 0)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def counter(i, total):\n        if i > n:\n            return total \n        else:\n            total = total * term(i)\n            return counter(i+1, total)\n    return counter(1, 1)\n\n","SubmissionTime":"2016-02-12T17:22:34.289033","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":331,"studentId":0,"date":"2016-02-09 21:33:47.322302","diff":"\r\nInputObject                      SideIndicator\r\n-----------                      -------------\r\n    if term == identity:         =>           \r\n        while n > 0:             =>           \r\n            total = total * n    =>           \r\n            n -= 1               =>           \r\n        return total             =>           \r\n    if term == square:           =>           \r\n        while n > 0:             =>           \r\n            total = total * n**2 =>           \r\n            n -= 1               =>           \r\n        return total             =>           \r\n                                 =>           \r\n                                 =>           \r\n    while n > 0:                 <=           \r\n        total = total * n        <=           \r\n        n -= 1                   <=           \r\n    return total                 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n > 0:\n        total = total * n\n        n -= 1\n\n    return total \n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    if term == identity:\n        while n > 0:\n            total = total * n\n            n -= 1\n\n        return total \n\n    if term == square:\n        while n > 0:\n            total = total * n**2\n            n -= 1\n\n        return total \n\n\n","SubmissionTime":"2016-02-09T21:33:47.322302","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":332,"studentId":0,"date":"2016-02-10 15:14:02.804058","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 1\n    total = 0\n    while k <= n:\n        total = total * term(k)\n        k = k + 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k = 1\n    total = 1\n    while k <= n:\n        total = total * term(k)\n        k = k + 1\n    return total\n\n\n","SubmissionTime":"2016-02-10T15:14:02.804058","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":333,"studentId":0,"date":"2016-02-08 15:00:16.752603","diff":"\r\nInputObject  SideIndicator\r\n-----------  -------------\r\n        i+=1 =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i=1;s=1\n    while i<=n:\n        s=s*term(i)\n    return s\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i=1;s=1\n    while i<=n:\n        s=s*term(i)\n        i+=1\n    return s\n\n","SubmissionTime":"2016-02-08T15:00:16.752603","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":334,"studentId":0,"date":"2016-02-13 17:23:58.480771","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    if n == 1 or n == 0:                    =>           \r\n        return 1                            =>           \r\n        return term(n) * product(n-1, term) =>           \r\n    \"\"\"total = 1                            <=           \r\n    k = 1                                   <=           \r\n    while k <= n:                           <=           \r\n        total *= term(k)                    <=           \r\n    return total\"\"\"                         <=           \r\n    if k == n:                              <=           \r\n        return term(k)                      <=           \r\n        return term(k) + product(k-1, term) <=           \r\n    k = 0                                   <=           \r\n        k += 1                              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \"\"\"total = 1\n    k = 1\n    while k <= n:\n        total *= term(k)\n        k += 1\n    return total\"\"\"\n    k = 0\n    if k == n:\n        return term(k)\n    else:\n        return term(k) + product(k-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1 or n == 0:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-13T17:23:58.480771","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 41, in product","    return term(k) + product(k-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 41, in product","    return term(k) + product(k-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 41, in product","    return term(k) + product(k-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 41, in product","    return term(k) + product(k-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 41, in product","    return term(k) + product(k-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 41, in product","    return term(k) + product(k-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 38, in product","    if k == n:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":335,"studentId":0,"date":"2016-02-10 00:19:26.094758","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-10T00:19:26.094758","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":336,"studentId":0,"date":"2016-02-08 18:05:49.836687","diff":"\r\nInputObject                           SideIndicator\r\n-----------                           -------------\r\n            total = total * term(i)   =>           \r\n            result = result * term(i) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else: \n        total = 1\n        for i in range(1, n+1):\n            result = result * term(i)\n        return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else: \n        total = 1\n        for i in range(1, n+1):\n            total = total * term(i)\n        return total\n\n","SubmissionTime":"2016-02-08T18:05:49.836687","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 38, in product","    result = result * term(i)","UnboundLocalError: local variable 'result' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":337,"studentId":0,"date":"2016-02-13 14:45:30.763170","diff":"\r\nInputObject    SideIndicator\r\n-----------    -------------\r\n    a = 1      =>           \r\n        a += 1 =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if a == n:\n        return term(n)\n    else:\n        return term(n) * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a = 1\n    if a == n:\n        return term(n)\n    else:\n        a += 1\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-13T14:45:30.76317","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    if a == n:","NameError: name 'a' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":338,"studentId":0,"date":"2016-02-12 19:35:58.440264","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n    \treturn 1\n\n    else:\n    \treturn n * product(n-1, term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n    \treturn 1\n\n    else:\n    \treturn term(n) * product(n-1, term)\n\n\n","SubmissionTime":"2016-02-12T19:35:58.440264","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":339,"studentId":0,"date":"2016-02-13 20:47:30.656354","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n                                              =>           \r\n        return term(n) + product(n - 1, term) <=           \r\n                                              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) + product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-13T20:47:30.656354","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":340,"studentId":0,"date":"2016-02-10 20:38:43.807515","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 0\n    while i <= n:\n        total *= term(i)\n        i += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i <= n:\n        total *= term(i)\n        i += 1\n    return total\n\n","SubmissionTime":"2016-02-10T20:38:43.807515","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":341,"studentId":0,"date":"2016-02-14 20:22:49.274345","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    x = 1   =>           \r\n    x = 0   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 0\n    for i in range(1,n+1):\n        x *= term(i)\n    return (x)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 1\n    for i in range(1,n+1):\n        x *= term(i)\n    return (x)\n\n","SubmissionTime":"2016-02-14T20:22:49.274345","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":342,"studentId":0,"date":"2016-02-09 14:28:39.530060","diff":"\r\nInputObject                           SideIndicator\r\n-----------                           -------------\r\n        result = result * term(trial) =>           \r\n        result = result * trial       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    trial, result = 1, 1\n    while trial <= n:\n        result = result * trial\n        trial = trial + 1\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    trial, result = 1, 1\n    while trial <= n:\n        result = result * term(trial)\n        trial = trial + 1\n    return result\n\n","SubmissionTime":"2016-02-09T14:28:39.53006","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":343,"studentId":0,"date":"2016-02-15 20:10:07.562017","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    if n == 1:                              =>           \r\n        return term(1)                      =>           \r\n    else:                                   =>           \r\n        return term(n) * product(n-1, term) =>           \r\n    return term(n) * product(n-1, term)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n    \treturn term(1)\n    else: \n    \treturn term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-15T20:10:07.562017","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":344,"studentId":0,"date":"2016-02-08 16:33:37.030249","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    for i in range(1, n+1): =>           \r\n    for i in range(0, n):   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    for i in range(0, n):\n        total = total * term(i)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    for i in range(1, n+1):\n        total = total * term(i)\n    return total\n\n","SubmissionTime":"2016-02-08T16:33:37.030249","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":345,"studentId":0,"date":"2016-02-12 13:35:55.880716","diff":"\r\nInputObject     SideIndicator\r\n-----------     -------------\r\n    while k<=n: =>           \r\n    while k<n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k,mul = 1,1\n    while k<n:\n        k, mul = k+1, mul*term(k)\n    return mul\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k,mul = 1,1\n    while k<=n:\n        k, mul = k+1, mul*term(k)\n    return mul\n\n\n","SubmissionTime":"2016-02-12T13:35:55.880716","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":346,"studentId":0,"date":"2016-02-15 20:58:44.992299","diff":"\r\nInputObject               SideIndicator\r\n-----------               -------------\r\n        i = term (k)      =>           \r\n        total = total * i =>           \r\n    k = term(k)           <=           \r\n        total = total * k <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k = 1\n    k = term(k)\n    total = 1\n    while k <= n:\n        total = total * k\n        k += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k = 1\n    total = 1\n    while k <= n:\n        i = term (k)\n        total = total * i\n        k += 1\n    return total\n\n","SubmissionTime":"2016-02-15T20:58:44.992299","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":347,"studentId":0,"date":"2016-02-10 01:46:21.149018","diff":"\r\nInputObject                            SideIndicator\r\n-----------                            -------------\r\n            return term(i)*helper(i-1) =>           \r\n    current = term(n)                  <=           \r\n            return current*term(i-1)   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    current = term(n)\n    def helper(i):\n        if i == 1:\n            return term(1)\n        else:\n            return current*term(i-1)\n    return helper(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(i):\n        if i == 1:\n            return term(1)\n        else:\n            return term(i)*helper(i-1)\n    return helper(n)\n\n","SubmissionTime":"2016-02-10T01:46:21.149018","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":348,"studentId":0,"date":"2016-02-09 21:18:17.671140","diff":"\r\nInputObject                                            SideIndicator\r\n-----------                                            -------------\r\n            return term(k) * helper_product(k+1, term) =>           \r\n    if n==1:                                           =>           \r\n        return 1                                       =>           \r\n        return helper_product(1, term)                 =>           \r\n    else:                                              =>           \r\n                                                       =>           \r\n            return term(1) * helper_product(k+1, term) <=           \r\n    return helper_product(1, term)                     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper_product(k, term):\n        if k>n:\n            return 1\n        else:\n            return term(1) * helper_product(k+1, term)\n    return helper_product(1, term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper_product(k, term):\n        if k>n:\n            return 1\n        else:\n            return term(k) * helper_product(k+1, term)\n    if n==1:\n        return 1\n\n    else:\n        return helper_product(1, term)\n\n\n","SubmissionTime":"2016-02-09T21:18:17.67114","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":349,"studentId":0,"date":"2016-02-16 19:20:57.920823","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        return 1                          =>           \r\n        return term(n)*product(n-1, term) =>           \r\n        return 0                          <=           \r\n    elif n==1:                            <=           \r\n        return n                          <=           \r\n        return n*product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return 0\n    elif n==1:\n        return n\n    else:\n        return n*product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return 1\n    else:\n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-16T19:20:57.920823","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":350,"studentId":0,"date":"2016-02-08 21:07:33.866577","diff":"\r\nInputObject    SideIndicator\r\n-----------    -------------\r\n    while n>1: =>           \r\n    while n>0: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    while n>0:\n        return term(n)*product(n-1, term)\n    return term(n)\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    while n>1:\n        return term(n)*product(n-1, term)\n    return term(n)\n\n\n\n","SubmissionTime":"2016-02-08T21:07:33.866577","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":351,"studentId":0,"date":"2016-02-16 09:10:05.101060","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while a <= n: =>           \r\n    while a < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total,a = 1,1\n    while a < n:\n        a, total = a+1 , term(a) * total\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total,a = 1,1\n    while a <= n:\n        a, total = a+1 , term(a) * total\n    return total\n\n","SubmissionTime":"2016-02-16T09:10:05.10106","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":352,"studentId":0,"date":"2016-02-13 16:49:30.607124","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n == 1:         =>           \r\n        return term(1) =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def product_term(x, num):\n        if num == 1:\n            return x\n        else:\n            return product_term(x*term(num), num-1)\n    #return product_term(1, n)\n    return product(n-1, term) * term (n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def product_term(x, num):\n        if num == 1:\n            return x\n        else:\n            return product_term(x*term(num), num-1)\n    #return product_term(1, n)\n    if n == 1:\n        return term(1)\n    return product(n-1, term) * term (n)\n\n","SubmissionTime":"2016-02-13T16:49:30.607124","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n-1, term) * term (n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n-1, term) * term (n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n-1, term) * term (n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n-1, term) * term (n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n-1, term) * term (n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n-1, term) * term (n)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n-1, term) * term (n)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":353,"studentId":0,"date":"2016-02-08 20:06:23.881924","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    if n == 1:                            =>           \r\n        return term(n)                    =>           \r\n        return term(n)*product(n-1, term) =>           \r\n    else:                                 =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-08T20:06:23.881924","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":354,"studentId":0,"date":"2016-02-08 09:10:08.191507","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    if n > 0:                               =>           \r\n        return term(n) * product(n-1, term) =>           \r\n        return 1                            =>           \r\n    else:                                   =>           \r\n    return term(n) * product(n-1, term)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n > 0:\n        return term(n) * product(n-1, term)\n    else:\n        return 1 \n\n","SubmissionTime":"2016-02-08T09:10:08.191507","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n-1, term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":355,"studentId":0,"date":"2016-02-09 08:56:03.327537","diff":"\r\nInputObject                          SideIndicator\r\n-----------                          -------------\r\n    return term(n)*product(n-1,term) =>           \r\n    return n*product(n-1,term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n<=0:\n        return 1\n    return n*product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n<=0:\n        return 1\n    return term(n)*product(n-1,term)\n\n","SubmissionTime":"2016-02-09T08:56:03.327537","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":356,"studentId":0,"date":"2016-02-08 12:35:12.906514","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n        return term(n) * product(n-1,term) =>           \r\n        return n * product(n-1,term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n <1:\n        return 1\n    else:\n        return n * product(n-1,term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n <1:\n        return 1\n    else:\n        return term(n) * product(n-1,term)\n\n\n","SubmissionTime":"2016-02-08T12:35:12.906514","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":357,"studentId":0,"date":"2016-02-09 16:33:24.271634","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-09T16:33:24.271634","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":358,"studentId":0,"date":"2016-02-14 10:14:16.845462","diff":"\r\nInputObject    SideIndicator\r\n-----------    -------------\r\n        i += 1 =>           \r\n        i += i <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a = 1\n    i = 1\n    while i < n:\n        a = a*term(i)\n        i += i\n    return a*term(n)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a = 1\n    i = 1\n    while i < n:\n        a = a*term(i)\n        i += 1\n    return a*term(n)\n\n\n","SubmissionTime":"2016-02-14T10:14:16.845462","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","40","","# Error: expected","#     120","# but got","#     40","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":359,"studentId":0,"date":"2016-02-10 14:07:52.734231","diff":"\r\nInputObject                            SideIndicator\r\n-----------                            -------------\r\n    return term(n)* product(n-1, term) =>           \r\n    return term(n)+ product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n ==1:\n        return n\n    return term(n)+ product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n ==1:\n        return n\n    return term(n)* product(n-1, term)\n\n","SubmissionTime":"2016-02-10T14:07:52.734231","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":360,"studentId":0,"date":"2016-02-09 20:56:40.406508","diff":"\r\nInputObject              SideIndicator\r\n-----------              -------------\r\n    i = 1                =>           \r\n    while i<=n:          =>           \r\n    for i in range(1,n): <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1;\n    for i in range(1,n):\n        total = total*term(i)\n        i+=1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1;\n    i = 1\n    while i<=n:\n        total = total*term(i)\n        i+=1\n    return total\n\n\n","SubmissionTime":"2016-02-09T20:56:40.406508","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":361,"studentId":0,"date":"2016-02-11 21:09:33.530578","diff":"\r\nInputObject                                        SideIndicator\r\n-----------                                        -------------\r\n    mapped_list = [term(x) for x in range(1, n+1)] =>           \r\n    [term(x) for x in range(1, n+1)]               <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    [term(x) for x in range(1, n+1)]\n    total = 1\n    for i in mapped_list:\n        total = total * i\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    mapped_list = [term(x) for x in range(1, n+1)]\n    total = 1\n    for i in mapped_list:\n        total = total * i\n    return total\n\n\n","SubmissionTime":"2016-02-11T21:09:33.530578","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    for i in mapped_list:","NameError: name 'mapped_list' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":362,"studentId":0,"date":"2016-02-17 21:52:48.560696","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n    if n == 1:                             =>           \r\n        return term(n)                     =>           \r\n    else:                                  =>           \r\n        return term(n)*product(n-1, term)  =>           \r\n    #if n == 1:                            <=           \r\n    #    return term(n)                    <=           \r\n    #else:                                 <=           \r\n    #    return term(n)*product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    #i, total = 1, 1\n    #while i <= n:\n    #    total = total * term(i)\n    #    i += 1\n    #return total\n    #if n == 1:\n    #    return term(n)\n    #else: \n    #    return term(n)*product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    #i, total = 1, 1\n    #while i <= n:\n    #    total = total * term(i)\n    #    i += 1\n    #return total\n    if n == 1:\n        return term(n)\n    else: \n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-17T21:52:48.560696","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":363,"studentId":0,"date":"2016-02-13 14:15:39.341568","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n        total = total * term(k)\n        k = k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 1\n    while k <= n:\n        total = total * term(k)\n        k = k + 1\n    return total\n\n","SubmissionTime":"2016-02-13T14:15:39.341568","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":364,"studentId":0,"date":"2016-02-13 01:21:26.935992","diff":"\r\nInputObject                                    SideIndicator\r\n-----------                                    -------------\r\n        return square(n) * product((n-1),term) =>           \r\n        return square(n)+ product((n-1),term)  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n== 1:\n        return n\n    elif term == square:\n        return square(n)+ product((n-1),term)\n    else:\n        return n* product((n-1),term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n== 1:\n        return n\n    elif term == square:\n        return square(n) * product((n-1),term)\n    else:\n        return n* product((n-1),term)\n\n","SubmissionTime":"2016-02-13T01:21:26.935992","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","14","","# Error: expected","#     36","# but got","#     14","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":365,"studentId":0,"date":"2016-02-15 19:04:13.363477","diff":"\r\nInputObject               SideIndicator\r\n-----------               -------------\r\n        x = term(counter) =>           \r\n        x = term(n)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter=n\n    listen = []\n    while counter>0:\n        counter-=1\n        x = term(n)\n        listen.append(x)\n    product = 1\n    for x in listen:\n        product *= x\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter=n\n    listen = []\n    while counter>0:\n        x = term(counter)\n        listen.append(x)\n        counter-=1\n    product = 1\n    for x in listen:\n        product *= x\n    return product\n\n","SubmissionTime":"2016-02-15T19:04:13.363477","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","27","","# Error: expected","#     6","# but got","#     27","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":366,"studentId":0,"date":"2016-02-16 17:59:10.311373","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n        # print(total) =>           \r\n    print(total)       =>           \r\n        print(total)   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, total = 1, 1\n    while k <= n:\n        k, total = k+1, total*term(k)\n        print(total)\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, total = 1, 1\n    while k <= n:\n        k, total = k+1, total*term(k)\n        # print(total)\n    return total\n    print(total)\n\n\n","SubmissionTime":"2016-02-16T17:59:10.311373","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","2","6","6","","# Error: expected","#     6","# but got","#     1","#     2","#     6","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":367,"studentId":0,"date":"2016-02-10 01:04:57.663235","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 0\n    while i <= n:\n        total *= term(i)\n        i += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i <= n:\n        total *= term(i)\n        i += 1\n    return total\n\n","SubmissionTime":"2016-02-10T01:04:57.663235","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":368,"studentId":0,"date":"2016-02-12 19:30:50.618251","diff":"\r\nInputObject                                  SideIndicator\r\n-----------                                  -------------\r\n    if term == identity:                     =>           \r\n        if n == 1:                           =>           \r\n            return 1                         =>           \r\n        else:                                =>           \r\n            return n * product(n-1, term)    =>           \r\n    elif term == square:                     =>           \r\n        if n == 1:                           =>           \r\n            return 1                         =>           \r\n        else:                                =>           \r\n            return n**2 * product(n-1, term) =>           \r\n                                             =>           \r\n    if n == 1:                               <=           \r\n        return 1                             <=           \r\n        return n * product(n-1, term)        <=           \r\n    else:                                    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    else:\n        return n * product(n-1, term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if term == identity:\n        if n == 1:\n            return 1\n        else:\n            return n * product(n-1, term)\n    elif term == square:\n        if n == 1:\n            return 1\n        else:\n            return n**2 * product(n-1, term)\n\n\n\n","SubmissionTime":"2016-02-12T19:30:50.618251","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":369,"studentId":0,"date":"2016-02-14 15:51:29.131680","diff":"\r\nInputObject                                       SideIndicator\r\n-----------                                       -------------\r\n        return mul(term(n), product(n - 1, term)) =>           \r\n        return mul(n, product(n - 1, term))       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 1\n    else:\n        return mul(n, product(n - 1, term))\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 1\n    else:\n        return mul(term(n), product(n - 1, term))\n\n","SubmissionTime":"2016-02-14T15:51:29.13168","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":370,"studentId":0,"date":"2016-02-15 00:03:37.750318","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        term(n) * product(n-1, term)        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    else:\n        term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-15T00:03:37.750318","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    term(n) * product(n-1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":371,"studentId":0,"date":"2016-02-09 08:19:39.049281","diff":"\r\nInputObject                  SideIndicator\r\n-----------                  -------------\r\n    i, prod=1, 1             =>           \r\n        prod= prod * term(i) =>           \r\n    return prod              =>           \r\n    i=1                      <=           \r\n    return product           <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i=1\n    while i<n:\n        i+=1\n    return product\n\n\nidentity= lambda c: c\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, prod=1, 1\n    while i<n:\n        i+=1\n        prod= prod * term(i)\n    return prod\n\n\nidentity= lambda c: c\n","SubmissionTime":"2016-02-09T08:19:39.049281","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","<function product at 0x000001C81A431048>","","# Error: expected","#     6","# but got","#     <function product at 0x000001C81A431048>","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":372,"studentId":0,"date":"2016-02-09 14:16:16.994067","diff":"\r\nInputObject                                                    SideIndicator\r\n-----------                                                    -------------\r\n            return 1                                           =>           \r\n            return term(x) * awkward_product(x+1, term, n)     =>           \r\n            return term(x)                                     <=           \r\n            print (x)                                          <=           \r\n            return mul(term(x), awkward_product(x+1, term, n)) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def awkward_product(x, term, n):\n        if x>n:\n            return term(x)\n        else:\n            print (x)\n            return mul(term(x), awkward_product(x+1, term, n))\n    return awkward_product(1, term, n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def awkward_product(x, term, n):\n        if x>n:\n            return 1\n        else:\n            return term(x) * awkward_product(x+1, term, n)\n    return awkward_product(1, term, n)\n\n","SubmissionTime":"2016-02-09T14:16:16.994067","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","2","3","24","","# Error: expected","#     6","# but got","#     1","#     2","#     3","#     24","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":373,"studentId":0,"date":"2016-02-12 08:28:38.480199","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return product(n - 1, term) * term(n) =>           \r\n        return term(n - 1) * term(n)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n - 1) * term(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return product(n - 1, term) * term(n)\n\n","SubmissionTime":"2016-02-12T08:28:38.480199","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":374,"studentId":0,"date":"2016-02-08 20:01:11.688564","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n        print(product) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k=1\n    product=1\n    while k<=n:\n        product*=term(k)\n        print(product)\n        k+=1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k=1\n    product=1\n    while k<=n:\n        product*=term(k)\n        k+=1\n    return product\n\n","SubmissionTime":"2016-02-08T20:01:11.688564","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","2","6","6","","# Error: expected","#     6","# but got","#     1","#     2","#     6","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":375,"studentId":0,"date":"2016-02-11 19:26:41.474488","diff":"\r\nInputObject                        SideIndicator\r\n-----------                        -------------\r\n    return t                       =>           \r\n    return _______                 =>           \r\n    \"*** YOUR CODE HERE ***\"       =>           \r\n        return t                   <=           \r\n    return product(n, lambda x: x) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    t, i = 1, 1\n    while i <= n:\n        t *= term(i)\n        i += 1\n        return t\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    t, i = 1, 1\n    while i <= n:\n        t *= term(i)\n        i += 1\n    return t\n\n","SubmissionTime":"2016-02-11T19:26:41.474488","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":376,"studentId":0,"date":"2016-02-15 15:55:11.208755","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1 ,1 =>           \r\n    total, k = 0,1  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0,1\n    while k <= n:\n        total, k = total * term(k) , k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1 ,1\n    while k <= n:\n        total, k = total * term(k) , k + 1\n    return total\n\n","SubmissionTime":"2016-02-15T15:55:11.208755","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":377,"studentId":0,"date":"2016-02-10 16:02:17.863469","diff":"\r\nInputObject        SideIndicator\r\n-----------        -------------\r\n    i, prod = 1, 1 =>           \r\n    i, prod = 1, 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, prod = 1, 0\n    while i <= n:\n        prod = prod * term(i)\n        i += 1\n    return prod\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, prod = 1, 1\n    while i <= n:\n        prod = prod * term(i)\n        i += 1\n    return prod\n\n","SubmissionTime":"2016-02-10T16:02:17.863469","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":378,"studentId":0,"date":"2016-02-14 20:35:34.807574","diff":"\r\nInputObject               SideIndicator\r\n-----------               -------------\r\n    prod, incr_val = 1, 1 =>           \r\n    prod, incr_val = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    prod, incr_val = 0, 1\n    while incr_val <= n:\n        prod, incr_val = prod * term(incr_val), incr_val+1\n    return prod \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    prod, incr_val = 1, 1\n    while incr_val <= n:\n        prod, incr_val = prod * term(incr_val), incr_val+1\n    return prod \n\n","SubmissionTime":"2016-02-14T20:35:34.807574","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":379,"studentId":0,"date":"2016-02-13 20:57:22.967204","diff":"\r\nInputObject                                      SideIndicator\r\n-----------                                      -------------\r\n            return term(count)*count_up(count-1) =>           \r\n            return term(count)*term(count-1)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    def count_up(count):\n        if count == 1:\n            return 1\n        else:\n            return term(count)*term(count-1)\n    return count_up(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    def count_up(count):\n        if count == 1:\n            return 1\n        else:\n            return term(count)*count_up(count-1)\n    return count_up(n)\n\n","SubmissionTime":"2016-02-13T20:57:22.967204","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":380,"studentId":0,"date":"2016-02-13 13:59:16.654510","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    for i in range(1, n+1): =>           \r\n    for i in range(0, n+1): <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for i in range(0, n+1):\n        total = total * term(i)\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for i in range(1, n+1):\n        total = total * term(i)\n    return total\n\n\n","SubmissionTime":"2016-02-13T13:59:16.65451","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":381,"studentId":0,"date":"2016-02-13 12:35:12.565943","diff":"\r\nInputObject           SideIndicator\r\n-----------           -------------\r\n    while count <= n: =>           \r\n    while count < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product = 1\n    count = 1\n    while count < n:\n        product = product * term(count)\n        count += 1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product = 1\n    count = 1\n    while count <= n:\n        product = product * term(count)\n        count += 1\n    return product\n\n","SubmissionTime":"2016-02-13T12:35:12.565943","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":382,"studentId":0,"date":"2016-02-14 12:55:24.582160","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n        p *= term(i) =>           \r\n                     =>           \r\n        p *= term(p) <=           \r\n                     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    p = 1\n    for i in range(1, n + 1):\n        p *= term(p)\n    return p\n    \n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    p = 1\n    for i in range(1, n + 1):\n        p *= term(i)\n    return p\n\n","SubmissionTime":"2016-02-14T12:55:24.58216","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":383,"studentId":0,"date":"2016-02-15 02:02:46.758076","diff":"\r\nInputObject           SideIndicator\r\n-----------           -------------\r\n    sumofproducts = 1 =>           \r\n    sumofproducts = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    sumofproducts = 0\n    i = 1\n    while i <= n:\n        sumofproducts *= term(i)\n        i += 1\n    return sumofproducts\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    sumofproducts = 1\n    i = 1\n    while i <= n:\n        sumofproducts *= term(i)\n        i += 1\n    return sumofproducts\n\n","SubmissionTime":"2016-02-15T02:02:46.758076","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":384,"studentId":0,"date":"2016-02-08 13:23:01.180664","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 1    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1\n    while k <= n:\n    \ttotal = total * term (k)\n    \tk += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n    \ttotal = total * term (k)\n    \tk += 1\n    return total\n\n","SubmissionTime":"2016-02-08T13:23:01.180664","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    total, k = 1","TypeError: 'int' object is not iterable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":385,"studentId":0,"date":"2016-02-13 14:58:47.771540","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-13T14:58:47.77154","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":386,"studentId":0,"date":"2016-02-09 19:02:41.251197","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    if n == 1:                              =>           \r\n        return term(n)                      =>           \r\n        return term(n) * product(n-1, term) =>           \r\n    if n == 1:                              =>           \r\n        return 1                            =>           \r\n    else:                                   =>           \r\n        return n * factorial(n-1)           =>           \r\n    else:                                   =>           \r\n    return _______                          <=           \r\n    \"*** YOUR CODE HERE ***\"                <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-09T19:02:41.251197","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":387,"studentId":0,"date":"2016-02-12 20:13:25.855814","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    if n == 0  or n == 1:                   =>           \r\n        return term(n) * product(n-1, term) =>           \r\n    if n == 1:                              <=           \r\n        return term(n) * term(n-1)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n \n    if n == 1:\n        return 1\n    else:\n        return term(n) * term(n-1)\n    \n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n \n    if n == 0  or n == 1:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n    \n\n\n\n\n","SubmissionTime":"2016-02-12T20:13:25.855814","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":388,"studentId":0,"date":"2016-02-11 17:03:53.655231","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    elif n == 0: =>           \r\n        return 1 =>           \r\n                 =>           \r\n                 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n >= 1:\n        return term(n) * product(n-1, term)\n        \n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n >= 1:\n        return term(n) * product(n-1, term)\n    elif n == 0:\n        return 1\n\n\n\n","SubmissionTime":"2016-02-11T17:03:53.655231","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return term(n) * product(n-1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":389,"studentId":0,"date":"2016-02-16 21:32:23.415175","diff":"\r\nInputObject                      SideIndicator\r\n-----------                      -------------\r\n        _sum_ = _sum_ * term(x)  =>           \r\n        _sum_, = _sum_ * term(x) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 1\n    _sum_ = 1\n    while x<=n:\n        _sum_, = _sum_ * term(x)\n        x += 1\n    return _sum_\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 1\n    _sum_ = 1\n    while x<=n:\n        _sum_ = _sum_ * term(x)\n        x += 1\n    return _sum_\n\n\n","SubmissionTime":"2016-02-16T21:32:23.415175","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    _sum_, = _sum_ * term(x)","TypeError: 'int' object is not iterable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":390,"studentId":0,"date":"2016-02-08 23:44:09.330737","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    for i in range(1, n+1): =>           \r\n    for i in range(1, n):   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    j = 1\n    for i in range(1, n):\n    \tj*=term(i)\n    return j\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    j = 1\n    for i in range(1, n+1):\n    \tj*=term(i)\n    return j\n\n","SubmissionTime":"2016-02-08T23:44:09.330737","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":391,"studentId":0,"date":"2016-02-08 19:33:19.915900","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n        return term(n)*product(n-1,term) =>           \r\n        return term*product(n-1,term)    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return n\n    else:\n        return term*product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return n\n    else:\n        return term(n)*product(n-1,term)\n\n","SubmissionTime":"2016-02-08T19:33:19.9159","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term*product(n-1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term*product(n-1,term)","TypeError: unsupported operand type(s) for *: 'function' and 'int'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":393,"studentId":0,"date":"2016-02-13 13:26:42.830137","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        times, k = times * term(k), k - 1 =>           \r\n    return product(n, identity)           =>           \r\n        times, k = times(k), k - 1        <=           \r\n    return _______                        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    # k, times = 1, 1\n    # while k <= n:\n    #     times, k = times * term(k), k + 1\n    # return times\n\n    k, times = n, 1\n    while k > 0:\n        times, k = times(k), k - 1\n    return times\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    # k, times = 1, 1\n    # while k <= n:\n    #     times, k = times * term(k), k + 1\n    # return times\n\n    k, times = n, 1\n    while k > 0:\n        times, k = times * term(k), k - 1\n    return times\n\n","SubmissionTime":"2016-02-13T13:26:42.830137","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    times, k = times(k), k - 1","TypeError: 'int' object is not callable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":394,"studentId":0,"date":"2016-02-11 12:48:25.920681","diff":"\r\nInputObject                           SideIndicator\r\n-----------                           -------------\r\n    def product_helper(i):            =>           \r\n    return product_helper(1)          =>           \r\n        return term(n)                <=           \r\n        return term(n) * product(n-1) <=           \r\n    \"\"\"def product_helper(i):         <=           \r\n    return product_helper(1)\"\"\"       <=           \r\n    if n==0:                          <=           \r\n    else:                             <=           \r\n                                      <=           \r\n                                      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==0:\n        return term(n)\n    else:\n        return term(n) * product(n-1)\n\n\n    \"\"\"def product_helper(i):\n        if i==n:\n            return term(i)\n        else:\n            return term(i) * product_helper(i+1)\n    return product_helper(1)\"\"\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def product_helper(i):\n        if i==n:\n            return term(i)\n        else:\n            return term(i) * product_helper(i+1)\n    return product_helper(1)\n\n","SubmissionTime":"2016-02-11T12:48:25.920681","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(n) * product(n-1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":395,"studentId":0,"date":"2016-02-13 12:51:18.369875","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    total, k=1,1 =>           \r\n    total, k=0,1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\"\"\"\n    total, k=0,1\n    while k<=n:\n        total,k=total*term(k),k+1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\"\"\"\n    total, k=1,1\n    while k<=n:\n        total,k=total*term(k),k+1\n    return total\n\n\n","SubmissionTime":"2016-02-13T12:51:18.369875","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":396,"studentId":0,"date":"2016-02-12 20:04:18.103466","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    while x < n+1:                      =>           \r\n    x = 1                               =>           \r\n        return product(n, increment(x)) =>           \r\n    return _______                      <=           \r\n    \"*** YOUR CODE HERE ***\"            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 1\n    total = 1\n    while x < n:\n        total = total*term(x)\n        x += 1\n    return total\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 1\n    total = 1\n    while x < n+1:\n        total = total*term(x)\n        x += 1\n    return total\n\n","SubmissionTime":"2016-02-12T20:04:18.103466","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":397,"studentId":0,"date":"2016-02-08 10:40:40.682635","diff":"\r\nInputObject                                         SideIndicator\r\n-----------                                         -------------\r\n        total_product = term(i) * total_product     =>           \r\n        total_product = identity(i) * total_product <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total_product = 1\n    while i <= n:\n        total_product = identity(i) * total_product\n        i += 1\n\n    return total_product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total_product = 1\n    while i <= n:\n        total_product = term(i) * total_product\n        i += 1\n\n    return total_product\n\n","SubmissionTime":"2016-02-08T10:40:40.682635","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":398,"studentId":0,"date":"2016-02-13 10:55:18.468825","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n    total, k = 1, 1                         =>           \r\n        total, k = total * term(k), k + 1   =>           \r\n    total, k = 0, 1                         <=           \r\n        total, k = (total * term(k)), k + 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    total, k = 0, 1\n    while k <= n:\n        total, k = (total * term(k)), k + 1\n    return total\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n\n\n","SubmissionTime":"2016-02-13T10:55:18.468825","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":399,"studentId":0,"date":"2016-02-15 13:26:41.863903","diff":"\r\nInputObject                         SideIndicator\r\n-----------                         -------------\r\n    prod = 1                        =>           \r\n        prod = term(i) * prod       =>           \r\n    return prod                     =>           \r\n    return x                        =>           \r\n    product = 1                     <=           \r\n        product = term(i) * product <=           \r\n    return product                  <=           \r\n    return                          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    product = 1\n\n    while i <= n:\n        product = term(i) * product\n        i += 1\n\n    return product\n\ndef identity(x):\n    return\n\ndef square(x):\n    return x * x\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    prod = 1\n\n    while i <= n:\n        prod = term(i) * prod\n        i += 1\n\n    return prod\n\ndef identity(x):\n    return x\n\ndef square(x):\n    return x * x\n\n","SubmissionTime":"2016-02-15T13:26:41.863903","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    product = term(i) * product","TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":400,"studentId":0,"date":"2016-02-15 21:13:23.249457","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while x <= n: =>           \r\n    while x != n: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    x = 1\n    total = 1    \n    while x != n:\n        total = term(x) * total \n        x = x + 1  \n    return total  \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    x = 1\n    total = 1    \n    while x <= n:\n        total = term(x) * total \n        x = x + 1  \n    return total  \n\n","SubmissionTime":"2016-02-15T21:13:23.249457","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":401,"studentId":0,"date":"2016-02-09 13:59:21.999775","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    if n <= 1:                          =>           \r\n        return term(n)                  =>           \r\n    return term(n) * product(n-1, term) =>           \r\n                                        =>           \r\n    return Y(________)  # Replace       =>           \r\n    return Y(________)  # Replace       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n <= 1:\n        return term(n)\n\n    return term(n) * product(n-1, term)\n    \n","SubmissionTime":"2016-02-09T13:59:21.999775","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":402,"studentId":0,"date":"2016-02-16 18:25:28.561145","diff":"\r\nInputObject     SideIndicator\r\n-----------     -------------\r\n    while n>1:  =>           \r\n    while n>=1: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = term(n)\n    while n>=1:\n        result, n = result*term(n-1), n-1\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = term(n)\n    while n>1:\n        result, n = result*term(n-1), n-1\n    return result\n\n","SubmissionTime":"2016-02-16T18:25:28.561145","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":403,"studentId":0,"date":"2016-02-15 21:45:37.614125","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    total, k = 1, 1                       =>           \r\n        total, k = total * term(k), k + 1 =>           \r\ndef identity(k):                          <=           \r\n    total, k = 0, 1                       <=           \r\n        total, k = total + term(k), k + 1 <=           \r\ndef square(x):                            <=           \r\n    total, k = 0, 1                       <=           \r\n    while k<= n:                          <=           \r\n        total, k = total + k**2, k + 1    <=           \r\n    return total                          <=           \r\n                                          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\ndef identity(k):\n    total, k = 0, 1\n    while k <= n:\n        total, k = total + term(k), k + 1\n    return total\n\ndef square(x):\n    total, k = 0, 1\n    while k<= n:\n        total, k = total + k**2, k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-15T21:45:37.614125","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":404,"studentId":0,"date":"2016-02-16 17:36:41.354444","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    if (n == 1):                          =>           \r\n        return term(n)                    =>           \r\n        return term(n)*product(n-1, term) =>           \r\n                                          =>           \r\n    else:                                 =>           \r\n    x = 1                                 <=           \r\n    product = 1                           <=           \r\n    x = term(x)                           <=           \r\n    while n > 0:                          <=           \r\n        product = product*x               <=           \r\n        x += 1                            <=           \r\n        n -= 1                            <=           \r\n    if n == 0:                            <=           \r\n        return product                    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 1\n    product = 1 \n    x = term(x) \n    while n > 0: \n        product = product*x \n        x += 1 \n        n -= 1 \n    if n == 0: \n        return product    \n            \n            \n        \n        \n         \n         \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if (n == 1):\n        return term(n)\n    else:\n        return term(n)*product(n-1, term)\n              \n            \n            \n        \n        \n         \n         \n\n","SubmissionTime":"2016-02-16T17:36:41.354444","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":405,"studentId":0,"date":"2016-02-10 20:19:03.720640","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    if n == 1:                            =>           \r\n        return term(1)                    =>           \r\n    else:                                 =>           \r\n        return term(n)*product(n-1, term) =>           \r\n    n > 0                                 <=           \r\n    x = product(n-1, term)                <=           \r\n    return term(n)*x                      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    n > 0\n    x = product(n-1, term)\n    return term(n)*x\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:    \n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-10T20:19:03.72064","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    x = product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    x = product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    x = product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    x = product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    x = product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    x = product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    n > 0","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":407,"studentId":0,"date":"2016-02-11 22:49:50.245940","diff":"\r\nInputObject  SideIndicator\r\n-----------  -------------\r\n    if n==1: =>           \r\n    if n==0: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==0:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-11T22:49:50.24594","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":408,"studentId":0,"date":"2016-02-13 18:47:22.832363","diff":"\r\nInputObject                      SideIndicator\r\n-----------                      -------------\r\n    result = 1                   =>           \r\n    for i in range(1, n + 1):    =>           \r\n        result *= term(i)        =>           \r\n    return result                =>           \r\n    re = 1                       <=           \r\n    for i in range(1, n + 1, 1): <=           \r\n        ret *= term(i)           <=           \r\n    return ret                   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    re = 1\n    for i in range(1, n + 1, 1):\n        ret *= term(i)\n    return ret\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n    for i in range(1, n + 1):\n        result *= term(i)\n    return result\n\n","SubmissionTime":"2016-02-13T18:47:22.832363","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    ret *= term(i)","UnboundLocalError: local variable 'ret' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":409,"studentId":0,"date":"2016-02-08 19:20:00.061373","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n        return term(x)*product(x-1, term)  =>           \r\n        return x*product(x-1, term)        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x=n\n    if x==1:\n        return 1\n    else:\n        return x*product(x-1, term) \n        \n    \n\n \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x=n\n    if x==1:\n        return 1\n    else:\n        return term(x)*product(x-1, term) \n        \n    \n\n \n\n","SubmissionTime":"2016-02-08T19:20:00.061373","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":410,"studentId":0,"date":"2016-02-16 22:24:36.204314","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    acc = 1 =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    for i in range(n):\n        acc = acc*term(i+1)\n    return acc\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    acc = 1\n    for i in range(n):\n        acc = acc*term(i+1)\n    return acc\n\n\n","SubmissionTime":"2016-02-16T22:24:36.204314","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    acc = acc*term(i+1)","UnboundLocalError: local variable 'acc' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":411,"studentId":0,"date":"2016-02-10 23:49:58.784788","diff":"\r\nInputObject                                        SideIndicator\r\n-----------                                        -------------\r\n            return term(num) * times (num+1)       =>           \r\n            return term(num) * times (num+1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def times(num):\n        if num < n:\n            return term(num) * times (num+1, term)\n        else: \n            return term(n)\n    return times(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def times(num):\n        if num < n:\n            return term(num) * times (num+1)\n        else: \n            return term(n)\n    return times(1)\n\n","SubmissionTime":"2016-02-10T23:49:58.784788","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return times(1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in times","    return term(num) * times (num+1, term)","TypeError: times() takes 1 positional argument but 2 were given","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":412,"studentId":0,"date":"2016-02-12 14:16:58.656090","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    total, k = 1, 1                     =>           \r\n    while k<=n:                         =>           \r\n        total, k = total * term(k), k+1 =>           \r\n    return total                        =>           \r\n    # x = identity(n-1)                 =>           \r\n    # k = n * x                         =>           \r\n    # x -= 1                            =>           \r\n    # if x == 0:                        =>           \r\n    #     return                        =>           \r\n    identity(n)                         <=           \r\n    x = n                               <=           \r\n    x -= 1                              <=           \r\n    return n*x                          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    identity(n)\n    x = n\n    x -= 1\n    return n*x\n    \n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k<=n:\n        total, k = total * term(k), k+1\n    return total\n    # x = identity(n-1)\n    # k = n * x\n    # x -= 1\n    # if x == 0:\n    #     return\n    \n","SubmissionTime":"2016-02-12T14:16:58.65609","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":413,"studentId":0,"date":"2016-02-13 09:27:42.207352","diff":"\r\nInputObject                                  SideIndicator\r\n-----------                                  -------------\r\n            return term(i) * terminater(i+1) =>           \r\n            return term(i) + terminater(i+1) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def terminater(i):\n        if i == n:\n            return term(i) \n        else:\n            return term(i) + terminater(i+1)\n\n    return terminater(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def terminater(i):\n        if i == n:\n            return term(i) \n        else:\n            return term(i) * terminater(i+1)\n\n    return terminater(1)\n\n","SubmissionTime":"2016-02-13T09:27:42.207352","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":414,"studentId":0,"date":"2016-02-13 12:06:29.797013","diff":"\r\nInputObject                                      SideIndicator\r\n-----------                                      -------------\r\n        return product(n-1,term) * term(n)       =>           \r\n                                                 =>           \r\n                                                 =>           \r\n    return                                       =>           \r\n    else:                                        =>           \r\n                                                 =>           \r\n    return product(term(increment(n-2)))*term(n) <=           \r\n    return _______                               <=           \r\n    \"*** YOUR CODE HERE ***\"                     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    return product(term(increment(n-2)))*term(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return product(n-1,term) * term(n)\n\n    \n\n","SubmissionTime":"2016-02-13T12:06:29.797013","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    return product(term(increment(n-2)))*term(n)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":415,"studentId":0,"date":"2016-02-08 13:36:05.851400","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    if n == 1:   =>           \r\n        return 1 =>           \r\n    if n == 0:   <=           \r\n        return   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return\n    return term(n) * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-08T13:36:05.8514","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n - 1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":416,"studentId":0,"date":"2016-02-16 10:12:27.746040","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    return term(n) * product((n-1), term) =>           \r\n    return product(n, identity)           =>           \r\n    return n * product((n-1), term)       <=           \r\n    return _______                        <=           \r\n    \"*** YOUR CODE HERE ***\"              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return n * product((n-1), term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    return term(n) * product((n-1), term)\n\n","SubmissionTime":"2016-02-16T10:12:27.74604","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":417,"studentId":0,"date":"2016-02-13 14:56:47.247816","diff":"\r\nInputObject             SideIndicator\r\n-----------             -------------\r\n    while counter <= n: =>           \r\n    while counter < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n  #  if n == 1:\n   #     return term(1)\n    #else:\n     #   return term(n) * product(n - 1, term)\n    counter = 1\n    total = 1\n    while counter < n:\n        total = total * term(counter) \n        counter += 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n  #  if n == 1:\n   #     return term(1)\n    #else:\n     #   return term(n) * product(n - 1, term)\n    counter = 1\n    total = 1\n    while counter <= n:\n        total = total * term(counter) \n        counter += 1\n    return total\n\n\n","SubmissionTime":"2016-02-13T14:56:47.247816","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":419,"studentId":0,"date":"2016-02-08 23:14:46.424171","diff":"\r\nInputObject                  SideIndicator\r\n-----------                  -------------\r\n                             =>           \r\ndef product(n,term):         <=           \r\n    \"*** YOUR CODE HERE ***\" <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\ndef product(n,term):\n    k,total = 1, 1\n    while k<=n:\n        total,k = total * term (k), k+1\n    return total\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k,total = 1, 1\n    while k<=n:\n        total,k = total * term (k), k+1\n    return total\n\n\n\n","SubmissionTime":"2016-02-08T23:14:46.424171","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","","-- No doctests found for product --","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":420,"studentId":0,"date":"2016-02-08 09:53:17.439243","diff":"\r\nInputObject  SideIndicator\r\n-----------  -------------\r\n        n-=1 =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n>0:\n        total *= term(n)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n>0:\n        total *= term(n)\n        n-=1\n    return total\n\n","SubmissionTime":"2016-02-08T09:53:17.439243","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":421,"studentId":0,"date":"2016-02-08 21:02:47.790317","diff":"\r\nInputObject                                                    SideIndicator\r\n-----------                                                    -------------\r\n    while n >= 1:                                              =>           \r\n        total = term_output(n) * total                         =>           \r\n        n-=1                                                   =>           \r\n                                                               =>           \r\n        return product(n-1, term_output(n-1)) * term_output()  =>           \r\n    total = 1                                                  =>           \r\n    return total                                               =>           \r\n                                                               =>           \r\n        return product(n-1, term_output(n-1)) * term_output(n) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def term_output(n):\n        return term(n)\n\n\n    if n > 1:\n        return\n    else:\n        return product(n-1, term_output(n-1)) * term_output(n)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def term_output(n):\n        return term(n)\n\n    total = 1\n    while n >= 1:\n        total = term_output(n) * total\n        n-=1\n    \n    return total\n\n\n    if n > 1:\n        return\n    else:\n        return product(n-1, term_output(n-1)) * term_output()\n\n\n","SubmissionTime":"2016-02-08T21:02:47.790317","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":422,"studentId":0,"date":"2016-02-08 11:54:33.676892","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    return k                    =>           \r\n    return product(n, identity) =>           \r\n    return x                    <=           \r\n    return _______              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, x = 1, 1\n    while x <= n:\n        k, x = k * term(x), x + 1\n    return x\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, x = 1, 1\n    while x <= n:\n        k, x = k * term(x), x + 1\n    return k\n\n\n","SubmissionTime":"2016-02-08T11:54:33.676892","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","4","","# Error: expected","#     6","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":423,"studentId":0,"date":"2016-02-09 15:38:53.922033","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    total=1                 =>           \r\n        total=total*term(k) =>           \r\n    return total            =>           \r\n        term(k)             <=           \r\n    return term(k)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k=0\n    while k<n: \n        k=k+1\n        term(k)\n    return term(k)\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k=0\n    total=1\n    while k<n: \n        k=k+1\n        total=total*term(k)\n    return total\n","SubmissionTime":"2016-02-09T15:38:53.922033","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","3","","# Error: expected","#     6","# but got","#     3","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":424,"studentId":0,"date":"2016-02-16 17:44:33.493945","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    for i in range(1, n+1): =>           \r\n    for i in range(n):      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    p = 1\n    for i in range(n):\n        p = p * term(i)\n    return p        \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    p = 1\n    for i in range(1, n+1):\n        p = p * term(i)\n    return p        \n\n","SubmissionTime":"2016-02-16T17:44:33.493945","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":425,"studentId":0,"date":"2016-02-10 11:10:38.595004","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while i < n:  =>           \r\n    while i <= n: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 0\n    total = 1\n    while i <= n:\n        i = i + 1\n        total = total * term(i)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 0\n    total = 1\n    while i < n:\n        i = i + 1\n        total = total * term(i)\n    return total\n\n","SubmissionTime":"2016-02-10T11:10:38.595004","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","24","","# Error: expected","#     6","# but got","#     24","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":426,"studentId":0,"date":"2016-02-08 15:54:56.034366","diff":"\r\nInputObject                                           SideIndicator\r\n-----------                                           -------------\r\n        product_value = product_value * term(term_no) =>           \r\n        product_value = product_value * term(n)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    term_no = 1\n    product_value = 1\n    while term_no <= n:\n        product_value = product_value * term(n)\n        term_no += 1\n    return product_value\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    term_no = 1\n    product_value = 1\n    while term_no <= n:\n        product_value = product_value * term(term_no)\n        term_no += 1\n    return product_value\n\n","SubmissionTime":"2016-02-08T15:54:56.034366","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","27","","# Error: expected","#     6","# but got","#     27","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":427,"studentId":0,"date":"2016-02-09 21:15:41.518221","diff":"\r\nInputObject                                    SideIndicator\r\n-----------                                    -------------\r\n            i+=1                               =>           \r\n            return result * product_counter(i) =>           \r\n            return result * product_counter()  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    def product_counter(i):\n        result = 0\n        if i == n:\n            return term(n)\n        else:\n            result += term(i)\n            return result * product_counter()\n    return product_counter(i)\n    # i = 1\n    # while i < n:\n    #     term(i)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    def product_counter(i):\n        result = 0\n        if i == n:\n            return term(n)\n        else:\n            result += term(i)\n            i+=1\n            return result * product_counter(i)\n    return product_counter(i)\n    # i = 1\n    # while i < n:\n    #     term(i)\n\n","SubmissionTime":"2016-02-09T21:15:41.518221","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 38, in product","    return product_counter(i)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product_counter","    return result * product_counter()","TypeError: product_counter() missing 1 required positional argument: 'i'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":428,"studentId":0,"date":"2016-02-11 01:38:51.797239","diff":"\r\nInputObject                            SideIndicator\r\n-----------                            -------------\r\n    while n >= i:                      =>           \r\n    # return ________                  =>           \r\n    while n > 0:                       =>           \r\n        return (product(n -  1, term)) =>           \r\n    while n > i:                       <=           \r\n    return _______                     <=           \r\n                                       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    i = 1\n    while n > i:\n        total *= term(i)\n        #n = n - 1\n        i = i + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total = 1\n    i = 1\n    while n >= i:\n        total *= term(i)\n        #n = n - 1\n        i = i + 1\n    return total\n\n","SubmissionTime":"2016-02-11T01:38:51.797239","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":429,"studentId":0,"date":"2016-02-15 09:16:37.487856","diff":"","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a = 1\n    final = 1\n    while a <= n:\n        a += 1\n        final *= term(a)\n    return final\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a = 1\n    final = 1\n    while a <= n:\n        final *= term(a)\n        a += 1\n    return final\n\n","SubmissionTime":"2016-02-15T09:16:37.487856","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","24","","# Error: expected","#     6","# but got","#     24","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":430,"studentId":0,"date":"2016-02-08 13:52:11.952939","diff":"\r\nInputObject                            SideIndicator\r\n-----------                            -------------\r\n    k, product=1,1                     =>           \r\n        product,k=product*term(k), k+1 =>           \r\n    k, product=1,0                     <=           \r\n        product,k=product*term(n), k+1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, product=1,0\n    while k<=n:\n        product,k=product*term(n), k+1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, product=1,1\n    while k<=n:\n        product,k=product*term(k), k+1\n    return product\n\n","SubmissionTime":"2016-02-08T13:52:11.952939","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":431,"studentId":0,"date":"2016-02-12 19:22:25.916972","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n    totalProduct = 1 =>           \r\n    totalProduct = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    count = 1\n    totalProduct = 0\n    while count <= n:\n        totalProduct *= term(count)\n        count += 1\n    return totalProduct\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    count = 1\n    totalProduct = 1\n    while count <= n:\n        totalProduct *= term(count)\n        count += 1\n    return totalProduct\n\n","SubmissionTime":"2016-02-12T19:22:25.916972","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":432,"studentId":0,"date":"2016-02-14 11:55:37.987174","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    product = term(n)                   <=           \r\n    return product * product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    product = term(n)\n    return product * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-14T11:55:37.987174","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product * product(n-1, term)","TypeError: 'int' object is not callable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":433,"studentId":0,"date":"2016-02-11 17:25:13.147295","diff":"\r\nInputObject                                           SideIndicator\r\n-----------                                           -------------\r\n        return term(n) * product (n-1, term)          =>           \r\n        return product(n, term) * product (n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n    \treturn n\n    else:\n    \treturn product(n, term) * product (n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n    \treturn n\n    else:\n    \treturn term(n) * product (n-1, term)\n\n","SubmissionTime":"2016-02-11T17:25:13.147295","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product (n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product (n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product (n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product (n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product (n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return product(n, term) * product (n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    if n == 1:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":434,"studentId":0,"date":"2016-02-13 17:58:13.031298","diff":"\r\nInputObject                          SideIndicator\r\n-----------                          -------------\r\n        if x>n:                      =>           \r\n            return 1                 =>           \r\n        return term(x)*function(x+1) =>           \r\n    return product(n,identity)       =>           \r\n    n+=1                             =>           \r\n    def function(x):                 =>           \r\n        def function_2(n):           =>           \r\n            if n==0:                 =>           \r\n                return               =>           \r\n            term(n)                  =>           \r\n            return function_2(n-1)   =>           \r\n        return function_2            =>           \r\n    return function                  =>           \r\n                                     =>           \r\n        if x<=n:                     <=           \r\n            term(x)*term(x+1)        <=           \r\n    return _______                   <=           \r\n    \"*** YOUR CODE HERE ***\"         <=           \r\n    \"*** YOUR CODE HERE ***\"         <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def function(x):\n        if x<=n:\n            term(x)*term(x+1)\n    return function(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def function(x):\n        if x>n:\n            return 1\n        return term(x)*function(x+1)\n    return function(1)\n\n","SubmissionTime":"2016-02-13T17:58:13.031298","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":435,"studentId":0,"date":"2016-02-12 15:38:28.825122","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    if n == 1:                          =>           \r\n        return term(n)                  =>           \r\n    return term(n) * product(n-1, term) =>           \r\n    return product(n, term)             =>           \r\n    if n == term:                       <=           \r\n        return term                     <=           \r\n    return term * product(n, term+1)    <=           \r\n    return product(n, 2)                <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == term:\n        return term\n    return term * product(n, term+1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-12T15:38:28.825122","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term * product(n, term+1)","TypeError: unsupported operand type(s) for +: 'function' and 'int'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":436,"studentId":0,"date":"2016-02-09 10:49:17.676882","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        total = total * function(index)     =>           \r\n    return product(n, identity)             =>           \r\n    index = 1                               =>           \r\n    while index <= n:                       =>           \r\n        total = combiner(base, term(index)) =>           \r\n        index += 1                          =>           \r\n    return total                            =>           \r\n        total = total * function(n)         <=           \r\n    return _______                          <=           \r\n    \"*** YOUR CODE HERE ***\"                <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def function(n):\n        return term(n)\n    index, total = 1, 1\n    while index <= n:\n        total = total * function(n)\n        index += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def function(n):\n        return term(n)\n    index, total = 1, 1\n    while index <= n:\n        total = total * function(index)\n        index += 1\n    return total\n\n","SubmissionTime":"2016-02-09T10:49:17.676882","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","27","","# Error: expected","#     6","# but got","#     27","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":437,"studentId":0,"date":"2016-02-16 20:21:33.305508","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    total, k = 1,1                        =>           \r\n    while k <= n:                         =>           \r\n        total, k = total * term(k), k + 1 =>           \r\n    return total                          =>           \r\n    while product(n,term):                <=           \r\n        result = 1                        <=           \r\n        for i in range(1, n + 1):         <=           \r\n            result *= term(i)             <=           \r\n    while product(n,square):              <=           \r\n        result = 1                        <=           \r\n        for i in range(1, n + 1):         <=           \r\n            result *= result * term(i)    <=           \r\n    return result                         <=           \r\n    return result                         <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    while product(n,term):\n        result = 1\n        for i in range(1, n + 1):\n            result *= term(i)\n    return result\n    while product(n,square):\n        result = 1 \n        for i in range(1, n + 1):\n            result *= result * term(i)\n    return result        \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1,1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total         \n\n","SubmissionTime":"2016-02-16T20:21:33.305508","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    while product(n,term):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    while product(n,term):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    while product(n,term):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    while product(n,term):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    while product(n,term):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    while product(n,term):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    while product(n,term):","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":438,"studentId":0,"date":"2016-02-14 15:40:36.664729","diff":"\r\nInputObject                   SideIndicator\r\n-----------                   -------------\r\n    value =  term(1)          =>           \r\n    for i in range(2, n+1):   =>           \r\n        value = value*term(i) =>           \r\n    return value              =>           \r\n    value = 1                 <=           \r\n    for i in range(1, n+1):   <=           \r\n         return 6             <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    value = 1\n    for i in range(1, n+1):\n         return 6\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    value =  term(1)\n    for i in range(2, n+1):\n        value = value*term(i)\n    return value\n\n","SubmissionTime":"2016-02-14T15:40:36.664729","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","6","","# Error: expected","#     120","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":439,"studentId":0,"date":"2016-02-10 16:55:28.366997","diff":"\r\nInputObject                   SideIndicator\r\n-----------                   -------------\r\n    for i in range(1, n + 1): =>           \r\n    for i in range(0, n):     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    x = 1\n    for i in range(0, n):\n        x = x * term(i)\n    return x\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n\n    x = 1\n    for i in range(1, n + 1):\n        x = x * term(i)\n    return x\n\n\n","SubmissionTime":"2016-02-10T16:55:28.366997","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":440,"studentId":0,"date":"2016-02-08 11:26:25.752674","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    y = 1   =>           \r\n    y = 0   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 1\n    y = 0\n    while x <= n:\n        y *= term(x)\n        x += 1\n    return y\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 1\n    y = 1\n    while x <= n:\n        y *= term(x)\n        x += 1\n    return y\n\n","SubmissionTime":"2016-02-08T11:26:25.752674","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":441,"studentId":0,"date":"2016-02-09 20:56:31.259296","diff":"\r\nInputObject                                     SideIndicator\r\n-----------                                     -------------\r\n        return term(n) * product(n-1, term)     =>           \r\n        return term(n) + product(n-1, term)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) + product(n-1, term)    \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)    \n\n","SubmissionTime":"2016-02-09T20:56:31.259296","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":442,"studentId":0,"date":"2016-02-13 10:43:21.014905","diff":"\r\nInputObject                                        SideIndicator\r\n-----------                                        -------------\r\n        return term(1)                             =>           \r\n        return mul(term(n), (product(n-1, term)))  =>           \r\n    return product(n, identity)                    =>           \r\n        return term(n)                             <=           \r\n        return mul((term(n), product(n-1, term)))  <=           \r\n    return product(n, lambda n: n)                 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return mul((term(n), product(n-1, term))) \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return mul(term(n), (product(n-1, term))) \n\n","SubmissionTime":"2016-02-13T10:43:21.014905","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return mul((term(n), product(n-1, term)))","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return mul((term(n), product(n-1, term)))","TypeError: op_mul expected 2 arguments, got 1","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":443,"studentId":0,"date":"2016-02-14 21:06:49.111604","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        return term(n)*product(n-1, term) =>           \r\n        return term(n)*term(n-1)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==0:\n        return 1\n    else:\n        return term(n)*term(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n==0:\n        return 1\n    else:\n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-14T21:06:49.111604","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":444,"studentId":0,"date":"2016-02-11 12:55:40.652634","diff":"\r\nInputObject               SideIndicator\r\n-----------               -------------\r\n    for i in range(1, n): =>           \r\n    for i in range(n):    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for i in range(n):\n        total *= term(i)\n    return total * term (n)\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for i in range(1, n):\n        total *= term(i)\n    return total * term (n)\n","SubmissionTime":"2016-02-11T12:55:40.652634","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":445,"studentId":0,"date":"2016-02-16 18:11:07.143850","diff":"\r\nInputObject          SideIndicator\r\n-----------          -------------\r\n    return total     =>           \r\n        return total <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, i = 1, 1\n    while i <= n:\n        total = total * term(i)\n        i += 1\n        return total\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, i = 1, 1\n    while i <= n:\n        total = total * term(i)\n        i += 1\n    return total\n\n\n\n","SubmissionTime":"2016-02-16T18:11:07.14385","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":446,"studentId":0,"date":"2016-02-14 18:28:35.019325","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    if n <= 1:                            =>           \r\n        return term(1)                    =>           \r\n        return term(n)*product(n-1, term) =>           \r\n    if n < 1:                             <=           \r\n        return a                          <=           \r\n        a = n*product(n-1, term)          <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 1:\n        return a\n    else:\n        a = n*product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n <= 1:\n        return term(1)\n    else:\n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-14T18:28:35.019325","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    a = n*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    a = n*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    a = n*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    return a","UnboundLocalError: local variable 'a' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":447,"studentId":0,"date":"2016-02-08 12:39:03.618375","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n ==1:\n        return n\n    else:\n        return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n ==1:\n        return n\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T12:39:03.618375","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":448,"studentId":0,"date":"2016-02-14 16:27:04.294894","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        return term(n)*product(n-1, term) =>           \r\n        return term(n)*prduct(n-1, term)  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n ==1:\n        return 1\n    else:\n        return term(n)*prduct(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n ==1:\n        return 1\n    else:\n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-14T16:27:04.294894","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n)*prduct(n-1, term)","NameError: name 'prduct' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":449,"studentId":0,"date":"2016-02-16 13:17:09.267155","diff":"\r\nInputObject                         SideIndicator\r\n-----------                         -------------\r\n        total = total*term(n)       =>           \r\n    total = 1                       =>           \r\n    while n != 0:                   =>           \r\n        return product(n, identity) =>           \r\n        total = total*n             <=           \r\n    while n == 0:                   <=           \r\n        return 1                    <=           \r\n        return product (n)          <=           \r\n    else:                           <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n != 0:\n        total = total*n\n        n -= 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n != 0:\n        total = total*term(n)\n        n -= 1\n    return total\n\n\n","SubmissionTime":"2016-02-16T13:17:09.267155","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":450,"studentId":0,"date":"2016-02-13 17:54:46.521981","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n            sum1 = sum1 * term(k) =>           \r\n        return sum1               =>           \r\n            sum1 = sum1 * term(k) =>           \r\n        return sum1               =>           \r\n        return sum1 * term(k)     <=           \r\n        return sum1 * term(k)     <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k = 1\n    sum1 = 1\n\n    if term == identity :\n        while k <= n :\n            k += 1\n        return sum1 * term(k)\n    if term == square :\n        while k <= n :\n            k += 1\n        return sum1 * term(k)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k = 1\n    sum1 = 1\n\n    if term == identity :\n        while k <= n :\n            sum1 = sum1 * term(k)\n            k += 1\n        return sum1\n    if term == square :\n        while k <= n :\n            sum1 = sum1 * term(k)\n            k += 1\n        return sum1\n\n\n","SubmissionTime":"2016-02-13T17:54:46.521981","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","4","","# Error: expected","#     6","# but got","#     4","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":451,"studentId":0,"date":"2016-02-16 21:38:05.548420","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    return term(total) =>           \r\n    return total       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x=0\n    total = 1\n    while x < n:\n        x= increment(x)\n        total = x * total\n    return total\n\n    \n\n\n    \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x=0\n    total = 1\n    while x < n:\n        x= increment(x)\n        total = x * total\n    return term(total)\n\n    \n\n\n    \n\n","SubmissionTime":"2016-02-16T21:38:05.54842","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":452,"studentId":0,"date":"2016-02-10 10:55:19.659379","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-10T10:55:19.659379","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":453,"studentId":0,"date":"2016-02-10 23:06:22.285372","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-10T23:06:22.285372","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":454,"studentId":0,"date":"2016-02-15 17:45:00.511695","diff":"","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    return product_helper(n,term,1)\n    def product_helper(x,termx,k):\n        if k==n:\n            return termx(x)\n        return termx(k)*product_helper(x,termx,k+1)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def product_helper(x,termx,k):\n        if k==n:\n            return termx(x)\n        return termx(k)*product_helper(x,termx,k+1)\n    return product_helper(n,term,1)\n\n\n","SubmissionTime":"2016-02-15T17:45:00.511695","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return product_helper(n,term,1)","UnboundLocalError: local variable 'product_helper' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":455,"studentId":0,"date":"2016-02-08 16:03:18.955364","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n == 1:         =>           \r\n        return term(n) =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    return term(n)*product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-08T16:03:18.955364","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n)*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n)*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n)*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n)*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n)*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n)*product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n)*product(n-1, term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":456,"studentId":0,"date":"2016-02-13 21:41:33.766090","diff":"\r\nInputObject                            SideIndicator\r\n-----------                            -------------\r\n    return term(n) * product(n-1,term) =>           \r\n    return term(n) + product(n-1,term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    return term(n) + product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    return term(n) * product(n-1,term)\n\n","SubmissionTime":"2016-02-13T21:41:33.76609","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":457,"studentId":0,"date":"2016-02-08 15:53:08.337383","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n        return n * product(n - 1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    else:\n        return n * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return 1\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-08T15:53:08.337383","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":458,"studentId":0,"date":"2016-02-16 18:07:28.343006","diff":"\r\nInputObject                                                       SideIndicator\r\n-----------                                                       -------------\r\n    if n == 1:                                                    =>           \r\n        return n                                                  =>           \r\n        k = term(n)                                               =>           \r\n        return product(n-1, term) * k                             =>           \r\n    return product(n, identity)                                   =>           \r\n    if n == 0:                                                    =>           \r\n        return base                                               =>           \r\n    else:                                                         =>           \r\n        k = combiner(base, term(n))                               =>           \r\n        return combiner(accumulate(combiner, base, n-1, term), k) =>           \r\n    if n == 3:                                                    =>           \r\n        return f                                                  =>           \r\n    else:                                                         =>           \r\n        #f = compose1(f, f)                                       =>           \r\n        return repeated(compose1(f, f), n-1)                      =>           \r\n    if n <= 3:                                                    =>           \r\n        return n                                                  =>           \r\n    if n > 3:                                                     =>           \r\n        return g(n - 1) + 2 * g(n - 2) + 3 * g(n - 3)             =>           \r\n    value = 0                                                     =>           \r\n    k = 0                                                         =>           \r\n    while k < n:                                                  =>           \r\n        value += 1                                                =>           \r\n        if has_seven(value):                                      =>           \r\n            value -= 1                                            =>           \r\n        if value % 7 == 0:                                        =>           \r\n            value += 1                                            =>           \r\n        k += 1                                                    =>           \r\n    return value                                                  =>           \r\n                                                                  =>           \r\n    else:                                                         =>           \r\n                                                                  =>           \r\n    return _______                                                <=           \r\n    \"*** YOUR CODE HERE ***\"                                      <=           \r\n    \"*** YOUR CODE HERE ***\"                                      <=           \r\n    \"*** YOUR CODE HERE ***\"                                      <=           \r\n    \"*** YOUR CODE HERE ***\"                                      <=           \r\n    \"*** YOUR CODE HERE ***\"                                      <=           \r\n    \"*** YOUR CODE HERE ***\"                                      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return n\n    else:\n        k = term(n)\n        return product(n-1, term) * k\n\n","SubmissionTime":"2016-02-16T18:07:28.343006","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":459,"studentId":0,"date":"2016-02-10 11:14:22.034206","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return product(n) * product(n-1)    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return term(1)\n    else:\n        return product(n) * product(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-10T11:14:22.034206","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return product(n) * product(n-1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":460,"studentId":0,"date":"2016-02-16 16:09:09.200247","diff":"\r\nInputObject    SideIndicator\r\n-----------    -------------\r\n        i += 1 =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    final = 1\n    i = 1\n    while i <= n:\n        final = final * term(i)\n    return final\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    final = 1\n    i = 1\n    while i <= n:\n        final = final * term(i)\n        i += 1\n    return final\n\n","SubmissionTime":"2016-02-16T16:09:09.200247","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":461,"studentId":0,"date":"2016-02-08 21:53:06.013114","diff":"\r\nInputObject                                      SideIndicator\r\n-----------                                      -------------\r\n    total, k = 1, 1                              =>           \r\n    while k <= n:                                =>           \r\n        total, k = total * term(k), increment(k) =>           \r\n    return total                                 =>           \r\n    total = 1                                    <=           \r\n    k = 1                                        <=           \r\n    if n == 0:                                   <=           \r\n        return 0                                 <=           \r\n    elif n == 1:                                 <=           \r\n        return 1                                 <=           \r\n        return product(n, term)                  <=           \r\n    n += 1                                       <=           \r\n    '''while k <= n:                             <=           \r\n        total = total * term(k)                  <=           \r\n        k = increment(k)                         <=           \r\n    return total'''                              <=           \r\n    else:                                        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    k = 1\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return product(n, term)\n    n += 1\n    '''while k <= n:\n        total = total * term(k)\n        k = increment(k)\n    return total'''\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), increment(k)\n    return total\n\n","SubmissionTime":"2016-02-08T21:53:06.013114","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return product(n, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    if n == 0:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":464,"studentId":0,"date":"2016-02-13 22:25:37.620658","diff":"\r\nInputObject                           SideIndicator\r\n-----------                           -------------\r\n    x = 1                             =>           \r\n    while x <= n:                     =>           \r\n        result = term(x) * result     =>           \r\n        x += 1                        =>           \r\n    return product(n, identity(n))    =>           \r\n                                      =>           \r\n    while(n != 0):                    <=           \r\n        result = result * n * (n - 1) <=           \r\n        n -= 2                        <=           \r\n    result = term(result)             <=           \r\n    return product (n, lambda k: k)   <=           \r\n                                      <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    result = 1\n    while(n != 0):\n        result = result * n * (n - 1)\n        n -= 2\n    result = term(result)\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    result = 1\n    x = 1\n    while x <= n:\n        result = term(x) * result\n        x += 1\n    return result\n\n","SubmissionTime":"2016-02-13T22:25:37.620658","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":465,"studentId":0,"date":"2016-02-10 14:09:24.039097","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return term(n) * product(n-1, term) =>           \r\n    return term(n) + product(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 1\n    return term(n) + product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 1\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-10T14:09:24.039097","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","7","","# Error: expected","#     6","# but got","#     7","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":466,"studentId":0,"date":"2016-02-15 17:13:24.141269","diff":"","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, total = 1, 1\n    while k < n:\n        n -= 1\n        total = total * term(n)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, total = 1, 1\n    while k < n:\n        total = total * term(n)\n        n -= 1\n    return total\n\n","SubmissionTime":"2016-02-15T17:13:24.141269","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":467,"studentId":0,"date":"2016-02-13 17:07:47.575972","diff":"\r\nInputObject                                        SideIndicator\r\n-----------                                        -------------\r\n            return term_a(x) * helper_a(x+1, term) =>           \r\n            return term_a(x) + helper_a(x+1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    y = 1\n    def helper_a(x, term_a):\n        if x == n:\n            return term_a(x)\n        else:\n            return term_a(x) + helper_a(x+1, term)\n    return helper_a(y, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    y = 1\n    def helper_a(x, term_a):\n        if x == n:\n            return term_a(x)\n        else:\n            return term_a(x) * helper_a(x+1, term)\n    return helper_a(y, term)\n\n","SubmissionTime":"2016-02-13T17:07:47.575972","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":468,"studentId":0,"date":"2016-02-16 17:22:24.877805","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    k, total = 1, 1 =>           \r\n    k, total = 1, 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, total = 1, 0\n    while k <= n:\n        total, k = total * term(k), k+1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, total = 1, 1\n    while k <= n:\n        total, k = total * term(k), k+1\n    return total\n\n","SubmissionTime":"2016-02-16T17:22:24.877805","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":469,"studentId":0,"date":"2016-02-09 12:33:29.387146","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n        return term(n) + product(n - 1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) + product(n - 1, term)\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term)\n","SubmissionTime":"2016-02-09T12:33:29.387146","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":470,"studentId":0,"date":"2016-02-09 10:17:23.161883","diff":"\r\nInputObject  SideIndicator\r\n-----------  -------------\r\n        a+=1 =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a=1\n    total=1\n    while a<=n:\n        total=total*term(a)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    a=1\n    total=1\n    while a<=n:\n        total=total*term(a)\n        a+=1\n    return total\n\n","SubmissionTime":"2016-02-09T10:17:23.161883","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":471,"studentId":0,"date":"2016-02-13 21:51:32.003292","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n            total = total * term(n)     =>           \r\n            total = total * term(n - 1) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def functions(n, term, total):\n        if n == 1:\n            return total\n        else:\n            total = total * term(n - 1)\n            return functions(n - 1, term, total)\n    return functions(n, term, 1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def functions(n, term, total):\n        if n == 1:\n            return total\n        else:\n            total = total * term(n)\n            return functions(n - 1, term, total)\n    return functions(n, term, 1)\n\n","SubmissionTime":"2016-02-13T21:51:32.003292","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":472,"studentId":0,"date":"2016-02-16 16:54:07.444377","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n                                =>           \r\n    while n  >= 1:              =>           \r\n        total = total * term(n) =>           \r\n        n -= 1                  =>           \r\n    x = 0                       <=           \r\n    while x < n:                <=           \r\n        total = total * term(x) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    x = 0\n    while x < n:\n        total = total * term(x)\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    \n    while n  >= 1:\n        total = total * term(n)\n        n -= 1\n    return total\n\n\n","SubmissionTime":"2016-02-16T16:54:07.444377","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":473,"studentId":0,"date":"2016-02-14 15:20:08.416393","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n        return n * product(n - 1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1 or 0:\n        return 1\n    else:\n        return n * product(n - 1, term)\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1 or 0:\n        return 1\n    else:\n        return term(n) * product(n - 1, term)\n","SubmissionTime":"2016-02-14T15:20:08.416393","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":474,"studentId":0,"date":"2016-02-08 15:16:00.496109","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return n * term(n-1)                <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return term(n)\n    else:\n        return n * term(n-1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T15:16:00.496109","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":475,"studentId":0,"date":"2016-02-16 19:47:51.679030","diff":"\r\nInputObject                                          SideIndicator\r\n-----------                                          -------------\r\n            return identity_helper(x+1,func)*func(x) =>           \r\n    return identity_helper(1,term)                   =>           \r\n            return multi(x+1,func)*func(x)           <=           \r\n    return multi(1,term)                             <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def identity_helper(x,func):\n        if x==n:\n            return func(n)\n        else:\n            return multi(x+1,func)*func(x)\n    return multi(1,term)\n\n \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def identity_helper(x,func):\n        if x==n:\n            return func(n)\n        else:\n            return identity_helper(x+1,func)*func(x)\n    return identity_helper(1,term)\n\n \n\n","SubmissionTime":"2016-02-16T19:47:51.67903","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return multi(1,term)","NameError: name 'multi' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":476,"studentId":0,"date":"2016-02-13 14:20:46.356598","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n            return term(i)*counter(i+1) =>           \r\n    return counter(i)                   =>           \r\n            return term(i)+counter(i+1) <=           \r\n                                        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i=1\n    def counter(i):\n        if i==n:\n            return term(n)\n        else:\n            return term(i)+counter(i+1)\n        \n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i=1\n    def counter(i):\n        if i==n:\n            return term(n)\n        else:\n            return term(i)*counter(i+1)\n    return counter(i)\n\n\n\n\n","SubmissionTime":"2016-02-13T14:20:46.356598","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":477,"studentId":0,"date":"2016-02-15 21:43:12.054087","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    total = 1                   =>           \r\n        total *= term(x)        =>           \r\n    return product(n, identity) =>           \r\n    total = combiner(base, n)   =>           \r\n    x = 1                       =>           \r\n    while not x > n:            =>           \r\n        total (x)               =>           \r\n        x += 1                  =>           \r\n    return total                =>           \r\n    total = 0                   <=           \r\n        total += term(x)        <=           \r\n    return _______              <=           \r\n    \"*** YOUR CODE HERE ***\"    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 0\n    x = 1\n    while not x > n:\n        total += term(x)\n        x += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    x = 1\n    while not x > n:\n        total *= term(x)\n        x += 1\n    return total\n\n","SubmissionTime":"2016-02-15T21:43:12.054087","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":478,"studentId":0,"date":"2016-02-10 21:13:11.592509","diff":"\r\nInputObject                    SideIndicator\r\n-----------                    -------------\r\n    def counter(i, total = 1): =>           \r\n    def counter(i, total = 0): <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def counter(i, total = 0):\n        if i == n:\n            return total * term(i)\n        else:\n            return counter(i + 1, total * term(i))\n    return counter(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def counter(i, total = 1):\n        if i == n:\n            return total * term(i)\n        else:\n            return counter(i + 1, total * term(i))\n    return counter(1)\n\n","SubmissionTime":"2016-02-10T21:13:11.592509","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":480,"studentId":0,"date":"2016-02-16 09:36:15.902417","diff":"\r\nInputObject                 SideIndicator\r\n-----------                 -------------\r\n    total = 1               =>           \r\n        total=total*term(i) =>           \r\n    total = 0               <=           \r\n        total += term(i)    <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 0\n    while i<=n:\n        total += term(i)\n        i+=1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i<=n:\n        total=total*term(i)\n        i+=1\n    return total\n\n","SubmissionTime":"2016-02-16T09:36:15.902417","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":481,"studentId":0,"date":"2016-02-08 09:14:46.151664","diff":"\r\nInputObject                                  SideIndicator\r\n-----------                                  -------------\r\n        total = term(n) * product(n-1, term) =>           \r\n        return total                         =>           \r\n        total = term(n)                      <=           \r\n        return term(n-1) * total             <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    else:\n        total = term(n)\n        return term(n-1) * total \n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    else:\n        total = term(n) * product(n-1, term)\n        return total \n\n\n","SubmissionTime":"2016-02-08T09:14:46.151664","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","20","","# Error: expected","#     120","# but got","#     20","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":482,"studentId":0,"date":"2016-02-08 20:19:19.282204","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    k, pro = 1, 1 =>           \r\n    k, pro = 1, 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, pro = 1, 0\n    while k <= n:\n        pro, k = pro*term(k), k + 1\n    return pro\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, pro = 1, 1\n    while k <= n:\n        pro, k = pro*term(k), k + 1\n    return pro\n\n","SubmissionTime":"2016-02-08T20:19:19.282204","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":483,"studentId":0,"date":"2016-02-11 11:51:01.494215","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) * produce(n-1, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return identity(n)\n    else:\n        return term(n) * produce(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return identity(n)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-11T11:51:01.494215","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * produce(n-1, term)","NameError: name 'produce' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":484,"studentId":0,"date":"2016-02-09 14:53:30.747834","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    while i != n+1: =>           \r\n    while i != n:   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    thing = 1\n    while i != n:\n        thing *= term(i)\n        i += 1\n    return thing\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    thing = 1\n    while i != n+1:\n        thing *= term(i)\n        i += 1\n    return thing\n\n","SubmissionTime":"2016-02-09T14:53:30.747834","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":485,"studentId":0,"date":"2016-02-16 18:32:09.895830","diff":"\r\nInputObject             SideIndicator\r\n-----------             -------------\r\n        v = v * term(x) =>           \r\n        v = v * x       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 1\n    v = x\n    while n > 0:\n        v = v * x\n        x = x + 1\n        n = n - 1\n    return v \n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x = 1\n    v = x\n    while n > 0:\n        v = v * term(x)\n        x = x + 1\n        n = n - 1\n    return v \n\n\n\n\n","SubmissionTime":"2016-02-16T18:32:09.89583","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":486,"studentId":0,"date":"2016-02-15 00:04:31.430766","diff":"\r\nInputObject                                                                              SideIndicator\r\n-----------                                                                              -------------\r\n    if n == 1:                                                                           =>           \r\n        return term(1)                                                                   =>           \r\n        return term(n)*product(n-1, term)                                                =>           \r\n    if n == 0:                                                                           =>           \r\n        return 1                                                                         =>           \r\n    return product(n, identity)                                                          =>           \r\n    if n == 0:                                                                           =>           \r\n        return base                                                                      =>           \r\n    else:                                                                                =>           \r\n        return combiner(term(n), accumulate(combiner, base, n-1, term))                  =>           \r\n    return accumulate(add, 0, n, term)                                                   =>           \r\n    return accumulate(mul, 1, n, term)                                                   =>           \r\n    return accumulate(lambda x,y: combiner(x, y) if pred(term(x)) else y, base, n, term) =>           \r\n    curr_f = identity                                                                    =>           \r\n    while n > 0:                                                                         =>           \r\n        curr_f = compose1(f, curr_f)                                                     =>           \r\n        n -= 1                                                                           =>           \r\n    return curr_f                                                                        =>           \r\n    else:                                                                                =>           \r\n    return _______                                                                       <=           \r\n    return _______                                                                       <=           \r\n    return _______                                                                       <=           \r\n    return _______                                                                       <=           \r\n    \"*** YOUR CODE HERE ***\"                                                             <=           \r\n    \"*** YOUR CODE HERE ***\"                                                             <=           \r\n    \"*** YOUR CODE HERE ***\"                                                             <=           \r\n    \"*** YOUR CODE HERE ***\"                                                             <=           \r\n    \"*** YOUR CODE HERE ***\"                                                             <=           \r\n    \"*** YOUR CODE HERE ***\"                                                             <=           \r\n    \"*** YOUR CODE HERE ***\"                                                             <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n)*product(n-1, term)\n\n","SubmissionTime":"2016-02-15T00:04:31.430766","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":487,"studentId":0,"date":"2016-02-13 17:22:48.103683","diff":"\r\nInputObject                                SideIndicator\r\n-----------                                -------------\r\n    if n==1:                               =>           \r\n        return term(1)                     =>           \r\n        return term(n) * product(n-1,term) =>           \r\n    x=1                                    <=           \r\n    if x==n:                               <=           \r\n        return term(x)                     <=           \r\n        return term(x) * product(x+1,term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    x=1\n    if x==n:\n        return term(x)\n    else:\n        return term(x) * product(x+1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(1)\n    else:\n        return term(n) * product(n-1,term)\n\n","SubmissionTime":"2016-02-13T17:22:48.103683","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(x) * product(x+1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(x) * product(x+1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(x) * product(x+1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(x) * product(x+1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(x) * product(x+1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return term(x) * product(x+1,term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    if x==n:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":488,"studentId":0,"date":"2016-02-08 16:49:41.013236","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n == 1:         =>           \r\n        return term(n) =>           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    return term(n) * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(n)\n    return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-08T16:49:41.013236","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    return term(n) * product(n - 1, term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":489,"studentId":0,"date":"2016-02-08 12:16:37.651616","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    return total =>           \r\n                 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total *= term(k)\n        k = increment(k)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total *= term(k)\n        k = increment(k)\n    return total\n\n","SubmissionTime":"2016-02-08T12:16:37.651616","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":490,"studentId":0,"date":"2016-02-11 17:53:21.953746","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n    total, k = 1, 1                       =>           \r\n        total, k = total * term(k), k + 1 =>           \r\n    total, k = 0, 1                       <=           \r\n        total, k = total + term(k), k + 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total + term(k), k + 1\n    return total\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total, k = total * term(k), k + 1\n    return total\n\n\n\n","SubmissionTime":"2016-02-11T17:53:21.953746","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":491,"studentId":0,"date":"2016-02-12 15:41:39.874251","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n    \ttotal, k = total * term(k), k+1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n    \ttotal, k = total * term(k), k+1\n    return total\n\n\n","SubmissionTime":"2016-02-12T15:41:39.874251","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":492,"studentId":0,"date":"2016-02-14 14:29:41.134111","diff":"\r\nInputObject                       SideIndicator\r\n-----------                       -------------\r\n        result *= term(i)         =>           \r\n        result = term(result) * i <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, result = 1, 1\n    while i <= n:\n        result = term(result) * i\n        i += 1\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, result = 1, 1\n    while i <= n:\n        result *= term(i)\n        i += 1\n    return result\n\n","SubmissionTime":"2016-02-14T14:29:41.134111","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","12","","# Error: expected","#     36","# but got","#     12","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":493,"studentId":0,"date":"2016-02-11 23:31:46.526669","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n == 1:         =>           \r\n        return term(1) =>           \r\n    if n == 0:         <=           \r\n        return term(0) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return term(0)\n    else:\n        return term(n) * product((n - 1), term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product((n - 1), term)\n\n","SubmissionTime":"2016-02-11T23:31:46.526669","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":494,"studentId":0,"date":"2016-02-08 21:40:44.847156","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 2:\n        return 1\n    else:\n        return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n < 2:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-08T21:40:44.847156","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":495,"studentId":0,"date":"2016-02-09 14:46:08.431691","diff":"\r\nInputObject                          SideIndicator\r\n-----------                          -------------\r\n        return term(x)*helper(x+1)   =>           \r\n    return helper(1)                 =>           \r\n                                     =>           \r\n        return term(x+1)*helper(x+1) <=           \r\n    return helper(0)                 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(x):\n        if(n == x):\n            return term(x)\n        return term(x+1)*helper(x+1)\n    return helper(0)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    def helper(x):\n        if(n == x):\n            return term(x)\n        return term(x)*helper(x+1)\n\n    return helper(1)\n\n\n","SubmissionTime":"2016-02-09T14:46:08.431691","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","18","","# Error: expected","#     6","# but got","#     18","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":496,"studentId":0,"date":"2016-02-13 15:44:18.642968","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return 1                            =>           \r\n        return term(n) * product(n-1, term) =>           \r\n                                            =>           \r\n        return prod                         <=           \r\n        prod = term(n) * product(n-1, term) <=           \r\n        return prod                         <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n  \n    if n == 0:\n        return prod\n    else:\n        prod = term(n) * product(n-1, term)\n        return prod\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n  \n    if n == 0:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n        \n\n\n\n","SubmissionTime":"2016-02-13T15:44:18.642968","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    prod = term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    prod = term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    prod = term(n) * product(n-1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return prod","UnboundLocalError: local variable 'prod' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":497,"studentId":0,"date":"2016-02-08 11:54:48.099520","diff":"\r\nInputObject                      SideIndicator\r\n-----------                      -------------\r\n        product *= term(counter) =>           \r\n        product *= counter       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter, product = 1, 1\n    while counter <= n:\n        product *= counter\n        counter += 1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    counter, product = 1, 1\n    while counter <= n:\n        product *= term(counter)\n        counter += 1\n    return product\n\n","SubmissionTime":"2016-02-08T11:54:48.09952","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":498,"studentId":0,"date":"2016-02-08 11:55:08.004603","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    r = 1\n    total = 0\n    while r <= n:\n        total *= term(r)\n        r += 1\n    return total \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    r = 1\n    total = 1\n    while r <= n:\n        total *= term(r)\n        r += 1\n    return total \n\n","SubmissionTime":"2016-02-08T11:55:08.004603","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":499,"studentId":0,"date":"2016-02-14 17:16:39.327552","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    k, prod = 1, 1                      =>           \r\n        k, prod = k + 1, prod * term(k) =>           \r\n    k, prod = 1, 0                      <=           \r\n        k, prod = k + 1, prod + term(k) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, prod = 1, 0\n    while k <= n:\n        k, prod = k + 1, prod + term(k)\n    return prod\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    k, prod = 1, 1\n    while k <= n:\n        k, prod = k + 1, prod * term(k)\n    return prod\n\n\n","SubmissionTime":"2016-02-14T17:16:39.327552","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":500,"studentId":0,"date":"2016-02-12 13:20:52.810219","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n            return helper(n - 1, term, total) =>           \r\n            return helper(n - 1, term)        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(n, term, total):\n        if n == 1: \n            return total\n        else:\n            total *= term(n)\n            return helper(n - 1, term)\n\n    return helper(n, term, 1)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def helper(n, term, total):\n        if n == 1: \n            return total\n        else:\n            total *= term(n)\n            return helper(n - 1, term, total)\n\n    return helper(n, term, 1)\n\n\n","SubmissionTime":"2016-02-12T13:20:52.810219","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 37, in product","    return helper(n, term, 1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in helper","    return helper(n - 1, term)","TypeError: helper() missing 1 required positional argument: 'total'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":501,"studentId":0,"date":"2016-02-10 20:28:04.917919","diff":"\r\nInputObject                                            SideIndicator\r\n-----------                                            -------------\r\n    def combiner(i):                                   =>           \r\n        if i <= n:                                     =>           \r\n            return result * term(i) * combiner(i + 1)  =>           \r\n        else:                                          =>           \r\n            return result                              =>           \r\n    return combiner(1)                                 =>           \r\n    i = 1                                              <=           \r\n    if i <= n:                                         <=           \r\n        return result * term(i) * product(i + 1, term) <=           \r\n        return result                                  <=           \r\n    else:                                              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n    i = 1\n    if i <= n:\n    \treturn result * term(i) * product(i + 1, term)\n    else:\n    \treturn result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n    def combiner(i):\n    \tif i <= n:\n    \t\treturn result * term(i) * combiner(i + 1)\n    \telse:\n    \t\treturn result\n    return combiner(1)\n\n","SubmissionTime":"2016-02-10T20:28:04.917919","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return result * term(i) * product(i + 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return result * term(i) * product(i + 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return result * term(i) * product(i + 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return result * term(i) * product(i + 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return result * term(i) * product(i + 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return result * term(i) * product(i + 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    if i <= n:","RecursionError: maximum recursion depth exceeded in comparison","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":502,"studentId":0,"date":"2016-02-10 23:25:32.925831","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n        return 1 =>           \r\n        return 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    return term(n) * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-10T23:25:32.925831","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":503,"studentId":0,"date":"2016-02-15 00:23:32.213126","diff":"\r\nInputObject             SideIndicator\r\n-----------             -------------\r\n        #print(y)       =>           \r\n        #print('y')     =>           \r\n        #print(count)   =>           \r\n        #print('count') =>           \r\n        print(y)        <=           \r\n        print('y')      <=           \r\n        print(count)    <=           \r\n        print('count')  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    count = 1\n    for x in range(1, n + 1):\n        y = term(x)\n        count = count * term(x)\n        print(y)\n        print('y')\n        print(count)\n        print('count')\n    return count\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    count = 1\n    for x in range(1, n + 1):\n        y = term(x)\n        count = count * term(x)\n        #print(y)\n        #print('y')\n        #print(count)\n        #print('count')\n    return count\n\n\n","SubmissionTime":"2016-02-15T00:23:32.213126","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","y","1","count","2","y","2","count","3","y","6","count","6","","# Error: expected","#     6","# but got","#     1","#     y","#     1","#     count","#     2","#     y","#     2","#     count","#     3","#     y","#     6","#     count","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":504,"studentId":0,"date":"2016-02-15 17:42:22.040193","diff":"\r\nInputObject                    SideIndicator\r\n-----------                    -------------\r\n    total = 1                  =>           \r\n    for i in range(1, n+1):    =>           \r\n        total *= term(i)       =>           \r\n                               =>           \r\n                               <=           \r\n    step == 1                  <=           \r\n    for step in range(1, n+1): <=           \r\n        total *= term(step)    <=           \r\n    return total               <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    step == 1\n    for step in range(1, n+1):\n        total *= term(step)\n    return total\n\n    return total\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    for i in range(1, n+1):\n        total *= term(i)\n    return total\n\n","SubmissionTime":"2016-02-15T17:42:22.040193","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 30, in product","    step == 1","UnboundLocalError: local variable 'step' referenced before assignment","","# Error: expected","#     6","# but got","#     UnboundLocalError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":505,"studentId":0,"date":"2016-02-12 09:54:49.387808","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n    i =1         =>           \r\n    total = 1    =>           \r\n    i, total = 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i, total = 1\n    while i <= n:\n        total = total * term(i)\n        i += 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i =1 \n    total = 1\n    while i <= n:\n        total = total * term(i)\n        i += 1\n    return total\n\n","SubmissionTime":"2016-02-12T09:54:49.387808","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 31, in product","    i, total = 1","TypeError: 'int' object is not iterable","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":506,"studentId":0,"date":"2016-02-08 11:57:09.420352","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        mul(n, term(n) - 1)                 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    if n < 0:\n        return \n    elif n == 1:\n        return 1\n    else:\n        mul(n, term(n) - 1)\n\n\n\n\n    \"*** YOUR CODE HERE ***\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \n    if n < 0:\n        return \n    elif n == 1:\n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n\n\n\n    \"*** YOUR CODE HERE ***\"\n\n","SubmissionTime":"2016-02-08T11:57:09.420352","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":507,"studentId":0,"date":"2016-02-08 17:21:45.237218","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n    return product(n-1, term) * term(n) =>           \r\n    return product(n-1, term) * n       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if (n == 1):\n        return 1\n    return product(n-1, term) * n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if (n == 1):\n        return 1\n    return product(n-1, term) * term(n)\n\n","SubmissionTime":"2016-02-08T17:21:45.237218","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":508,"studentId":0,"date":"2016-02-16 15:57:26.233000","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    sum, i = 1, 1 =>           \r\n    sum, i = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    sum, i = 0, 1\n    while i<=n:\n        sum*=term(i)\n        i+=1\n    return sum\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    sum, i = 1, 1\n    while i<=n:\n        sum*=term(i)\n        i+=1\n    return sum\n\n","SubmissionTime":"2016-02-16T15:57:26.233","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":509,"studentId":0,"date":"2016-02-12 11:24:13.564809","diff":"\r\nInputObject         SideIndicator\r\n-----------         -------------\r\n    total, k = 1, 1 =>           \r\n    total, k = 0, 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, k = 0, 1\n    while k <= n:\n        total, k =  total * term (k), k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, k = 1, 1\n    while k <= n:\n        total, k =  total * term (k), k + 1\n    return total\n\n","SubmissionTime":"2016-02-12T11:24:13.564809","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":510,"studentId":0,"date":"2016-02-10 15:18:05.245352","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n        return 1 =>           \r\n        return 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    return term(n) * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-10T15:18:05.245352","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":511,"studentId":0,"date":"2016-02-08 09:42:27.979899","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    i,total = 1,1 =>           \r\n    i,total = 1,0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i,total = 1,0\n    while i <= n:\n    \ttotal = total * term(i)\n    \ti += 1\n    return total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i,total = 1,1\n    while i <= n:\n    \ttotal = total * term(i)\n    \ti += 1\n    return total\n\n\n","SubmissionTime":"2016-02-08T09:42:27.979899","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":512,"studentId":0,"date":"2016-02-15 20:28:44.917030","diff":"\r\nInputObject                SideIndicator\r\n-----------                -------------\r\n    for i in range(1,n+1): =>           \r\n    for i in range(0,n):   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product=1\n    for i in range(0,n):\n        product=product*term(i)\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product=1\n    for i in range(1,n+1):\n        product=product*term(i)\n    return product\n\n","SubmissionTime":"2016-02-15T20:28:44.91703","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":513,"studentId":0,"date":"2016-02-16 18:57:25.787815","diff":"\r\nInputObject                               SideIndicator\r\n-----------                               -------------\r\n        i, total = i + 1, total * term(i) =>           \r\n        i += 1                            <=           \r\n        total = total * term(i)           <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, total = 1, 1\n    while i <= n:\n        i += 1\n        total = total * term(i)\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, total = 1, 1\n    while i <= n:\n        i, total = i + 1, total * term(i)\n    return total\n\n","SubmissionTime":"2016-02-16T18:57:25.787815","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","24","","# Error: expected","#     6","# but got","#     24","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":514,"studentId":0,"date":"2016-02-12 21:55:32.368882","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n        #f b==n:  =>           \r\n        i#f b==n: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def count(b,a=1):\n        if b<=n:\n            a*=term(b)\n            return count(b+1,a)\n        i#f b==n:\n        return a\n    return count(1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def count(b,a=1):\n        if b<=n:\n            a*=term(b)\n            return count(b+1,a)\n        #f b==n:\n        return a\n    return count(1)\n\n","SubmissionTime":"2016-02-12T21:55:32.368882","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 36, in product","    return count(1)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in count","    return count(b+1,a)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in count","    return count(b+1,a)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in count","    return count(b+1,a)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in count","    i#f b==n:","NameError: name 'i' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":515,"studentId":0,"date":"2016-02-08 16:33:42.530647","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n <= 0: \n        return 1\n    else:\n        return n * product(n-1, term)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n <= 0: \n        return 1\n    else:\n        return term(n) * product(n-1, term)\n\n\n","SubmissionTime":"2016-02-08T16:33:42.530647","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":516,"studentId":0,"date":"2016-02-11 19:47:04.798991","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while x < n:  =>           \r\n    while x <= n: <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n\n\n    \"\"\"\n    x = 1\n    total = 1\n    while x <= n:\n        x = x + 1\n        total = total*term(x)\n    return total\n\n    \"\"\"def identity()\n \n        return identity\"\"\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n\n\n    \"\"\"\n    x = 1\n    total = 1\n    while x < n:\n        x = x + 1\n        total = total*term(x)\n    return total\n\n    \"\"\"def identity()\n \n        return identity\"\"\"\n\n","SubmissionTime":"2016-02-11T19:47:04.798991","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","24","","# Error: expected","#     6","# but got","#     24","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":517,"studentId":0,"date":"2016-02-15 15:59:12.426533","diff":"\r\nInputObject                             SideIndicator\r\n-----------                             -------------\r\n        k, total = k+1, total*term(k)   =>           \r\n    return product(n+1,mul)             =>           \r\n        k, total = k+1, total*term(k,1) <=           \r\n    return product(n,mul)               <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, total = 1,1\n    while k <= n:\n        k, total = k+1, total*term(k,1)\n    return total \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, total = 1,1\n    while k <= n:\n        k, total = k+1, total*term(k)\n    return total \n\n","SubmissionTime":"2016-02-15T15:59:12.426533","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    k, total = k+1, total*term(k,1)","TypeError: identity() takes 1 positional argument but 2 were given","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":518,"studentId":0,"date":"2016-02-13 02:18:14.683662","diff":"\r\nInputObject                SideIndicator\r\n-----------                -------------\r\n    while k <= n:          =>           \r\n        product *= term(k) =>           \r\n    while k < n:           <=           \r\n        product *= term(n) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, product = 1, 1\n    while k < n:\n        product *= term(n)\n        k += 1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    k, product = 1, 1\n    while k <= n:\n        product *= term(k)\n        k += 1\n    return product\n\n","SubmissionTime":"2016-02-13T02:18:14.683662","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","9","","# Error: expected","#     6","# but got","#     9","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":519,"studentId":0,"date":"2016-02-15 22:02:23.092768","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    total, k = 1, 1             =>           \r\n        total = total * term(k) =>           \r\n    total, k = 0, 1             <=           \r\n        total = total + term(k) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total = total + term(k)\n        k = k + 1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total, k = 1, 1\n    while k <= n:\n        total = total * term(k)\n        k = k + 1\n    return total\n\n","SubmissionTime":"2016-02-15T22:02:23.092768","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":520,"studentId":0,"date":"2016-02-10 17:25:19.052272","diff":"\r\nInputObject                                    SideIndicator\r\n-----------                                    -------------\r\n    def better_product(n, term, i=1, total=1): =>           \r\n    return better_product(n, term, 1, 1)       =>           \r\n    def better_product(n, term, i=1, total=0): <=           \r\n    return better_product(n, term, 1, 0)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def better_product(n, term, i=1, total=0):\n        if i > n:\n            return total\n        else:\n            return better_product(n, term, i + 1, total * term(i))\n    return better_product(n, term, 1, 0)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def better_product(n, term, i=1, total=1):\n        if i > n:\n            return total\n        else:\n            return better_product(n, term, i + 1, total * term(i))\n    return better_product(n, term, 1, 1)\n\n","SubmissionTime":"2016-02-10T17:25:19.052272","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":521,"studentId":0,"date":"2016-02-10 15:04:19.686067","diff":"\r\nInputObject                    SideIndicator\r\n-----------                    -------------\r\n    return counter(n, term, 1) =>           \r\n    counter(n, term, 1)        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \"\"\"if(n == 1):\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\"\"\"\n\n    def counter(n, term, i):\n        if(i == n):\n            return term(n)\n        else:\n            return term(i) * counter(n, term, i+1)\n\n    counter(n, term, 1)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    \"\"\"if(n == 1):\n        return term(n)\n    else:\n        return term(n) * product(n-1, term)\"\"\"\n\n    def counter(n, term, i):\n        if(i == n):\n            return term(n)\n        else:\n            return term(i) * counter(n, term, i+1)\n\n    return counter(n, term, 1)\n\n","SubmissionTime":"2016-02-10T15:04:19.686067","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","","# Error: expected","#     6","# but got","#     ","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":522,"studentId":0,"date":"2016-02-13 15:02:01.184453","diff":"\r\nInputObject                                    SideIndicator\r\n-----------                                    -------------\r\n    if n == 1:                                 =>           \r\n        return result * term(n)                =>           \r\n        result *= term(n)*product(n - 1, term) =>           \r\n        return result                          =>           \r\n    else:                                      =>           \r\n    result *= term(n)*product(n - 1, term)     <=           \r\n    return result                              <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    result = 1\n    result *= term(n)*product(n - 1, term)\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    result = 1\n    if n == 1:\n        return result * term(n)\n    else:\n        result *= term(n)*product(n - 1, term)\n        return result\n\n","SubmissionTime":"2016-02-13T15:02:01.184453","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  ...","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    result *= term(n)*product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    result *= term(n)*product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    result *= term(n)*product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    result *= term(n)*product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    result *= term(n)*product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    result *= term(n)*product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 32, in product","    result *= term(n)*product(n - 1, term)","RecursionError: maximum recursion depth exceeded","","# Error: expected","#     6","# but got","#     RecursionError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":523,"studentId":0,"date":"2016-02-10 15:52:14.924803","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return term(n) * product(n - 1, term) =>           \r\n    return product(n, identity)               =>           \r\n        return term(n) + product(n - 1, term) <=           \r\n    return _______                            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) + product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-10T15:52:14.924803","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":524,"studentId":0,"date":"2016-02-12 11:32:06.805215","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n    return counter(1,n,1,term)  =>           \r\n    return counter*(1,n,1,term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n\n    def counter(g,n,i,term):\n        if i <= n:\n            placeholder = int(term(i))\n            g *= placeholder\n            return counter(g,n,i+1,term)\n        else:\n            return g\n    return counter*(1,n,1,term)\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n\n    def counter(g,n,i,term):\n        if i <= n:\n            placeholder = int(term(i))\n            g *= placeholder\n            return counter(g,n,i+1,term)\n        else:\n            return g\n    return counter(1,n,1,term)\n","SubmissionTime":"2016-02-12T11:32:06.805215","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 40, in product","    return counter*(1,n,1,term)","TypeError: can't multiply sequence by non-int of type 'function'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":525,"studentId":0,"date":"2016-02-10 16:45:06.633321","diff":"\r\nInputObject                                        SideIndicator\r\n-----------                                        -------------\r\n    i, Total = 1, 1                                =>           \r\n    while i<=n:                                    =>           \r\n        i, Total = i + 1, Total * term(i)          =>           \r\n    return Total                                   =>           \r\n    item, Total = 0, 1                             <=           \r\n    while item<=n:                                 <=           \r\n        item, Total = item + 1, Total * term(item) <=           \r\n        return Total                               <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    item, Total = 0, 1\n\n    while item<=n:\n        item, Total = item + 1, Total * term(item)\n        return Total\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i, Total = 1, 1\n\n    while i<=n:\n        i, Total = i + 1, Total * term(i)\n    return Total\n\n\n","SubmissionTime":"2016-02-10T16:45:06.633321","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":526,"studentId":0,"date":"2016-02-16 19:03:08.536301","diff":"\r\nInputObject             SideIndicator\r\n-----------             -------------\r\n                        =>           \r\n        total *=term(i) =>           \r\n        term(i)         <=           \r\n        total *=i       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    total =1\n    while i <= n:\n        term(i)\n        total *=i\n        i+=1\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    total =1\n    while i <= n:\n\n        total *=term(i)\n        i+=1\n    return total\n\n","SubmissionTime":"2016-02-16T19:03:08.536301","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":527,"studentId":0,"date":"2016-02-14 14:05:52.138589","diff":"\r\nInputObject                                    SideIndicator\r\n-----------                                    -------------\r\n    def multiplication(n, term, i=1, total=1): =>           \r\n    def multiplication(n, term, i=1, total=0): <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def multiplication(n, term, i=1, total=0):\n        if n == 0:\n            return 0\n        if i > n:\n            return total\n        total = total*term(i)\n        return multiplication(n, term, i+1, total)\n    return multiplication(n, term)\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def multiplication(n, term, i=1, total=1):\n        if n == 0:\n            return 0\n        if i > n:\n            return total\n        total = total*term(i)\n        return multiplication(n, term, i+1, total)\n    return multiplication(n, term)\n","SubmissionTime":"2016-02-14T14:05:52.138589","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":528,"studentId":0,"date":"2016-02-16 15:16:49.630294","diff":"\r\nInputObject              SideIndicator\r\n-----------              -------------\r\n    return prod(1, term) =>           \r\n    return prod(n, term) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def prod(m, func):\n        if m == n:\n            return func(m)\n        else:\n            return func(m) * prod(m + 1, func)\n    return prod(n, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    def prod(m, func):\n        if m == n:\n            return func(m)\n        else:\n            return func(m) * prod(m + 1, func)\n    return prod(1, term)\n\n","SubmissionTime":"2016-02-16T15:16:49.630294","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","3","","# Error: expected","#     6","# but got","#     3","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":529,"studentId":0,"date":"2016-02-10 16:44:38.271248","diff":"\r\nInputObject                                   SideIndicator\r\n-----------                                   -------------\r\n        return product(n - 1, term) * term(n) =>           \r\n        return product(n - 1) * term(n)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    else:\n        return product(n - 1) * term(n)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(n)\n    else:\n        return product(n - 1, term) * term(n)\n\n","SubmissionTime":"2016-02-10T16:44:38.271248","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 34, in product","    return product(n - 1) * term(n)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":530,"studentId":0,"date":"2016-02-17 21:17:58.763375","diff":"\r\nInputObject SideIndicator\r\n----------- -------------\r\n    i = 1   =>           \r\n    i = 0   <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product = 1\n    i = 0\n    while (i <= n):\n        product *= term(i)\n        i += 1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    product = 1\n    i = 1\n    while (i <= n):\n        product *= term(i)\n        i += 1\n    return product\n\n","SubmissionTime":"2016-02-17T21:17:58.763375","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":531,"studentId":0,"date":"2016-02-09 00:08:44.751578","diff":"\r\nInputObject   SideIndicator\r\n-----------   -------------\r\n    total = 1 =>           \r\n    total = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    count = 1\n    total = 0\n    while count <= n:\n        total *= term(count)\n        count += 1\n\n    return total\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    count = 1\n    total = 1\n    while count <= n:\n        total *= term(count)\n        count += 1\n\n    return total\n\n","SubmissionTime":"2016-02-09T00:08:44.751578","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":532,"studentId":0,"date":"2016-02-09 19:23:17.997232","diff":"\r\nInputObject            SideIndicator\r\n-----------            -------------\r\n    if n == 1:         =>           \r\n        return term(1) =>           \r\n    if n == 0:         <=           \r\n        return         <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return\n    else:\n        return term(n) * product(n - 1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n - 1, term)\n\n","SubmissionTime":"2016-02-09T19:23:17.997232","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n - 1, term)","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n - 1, term)","TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":533,"studentId":0,"date":"2016-02-13 21:08:37.367272","diff":"\r\nInputObject    SideIndicator\r\n-----------    -------------\r\n        i += 1 =>           \r\n        i *= 1 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    t, i = 1, 1\n    while i <= n:\n        t *= term(i)\n        i *= 1\n    return t\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    t, i = 1, 1\n    while i <= n:\n        t *= term(i)\n        i += 1\n    return t\n\n","SubmissionTime":"2016-02-13T21:08:37.367272","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","# Error: evaluation exceeded 10 seconds.","","# Error: expected","#     6","# but got","#     Timeout","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":534,"studentId":0,"date":"2016-02-10 16:31:28.660797","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) + product(n-1, term) <=           \r\n                                            <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) + product(n-1, term)\n\n\n\n\"\"\"\n    def sum_product(n):\n        total = 0\n        k = 1\n        while k < n:\n            total = total + term(k)\n            sum_product(n-1)\n    return sum_product(n)\"\"\"\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n\n\"\"\"\n    def sum_product(n):\n        total = 0\n        k = 1\n        while k < n:\n            total = total + term(k)\n            sum_product(n-1)\n    return sum_product(n)\"\"\"\n\n","SubmissionTime":"2016-02-10T16:31:28.660797","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","15","","# Error: expected","#     120","# but got","#     15","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":535,"studentId":0,"date":"2016-02-08 19:57:37.344474","diff":"\r\nInputObject      SideIndicator\r\n-----------      -------------\r\n        return 1 =>           \r\n        return 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return term(n) * product(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 0:\n        return 1\n    else:\n        return term(n) * product(n-1,term)\n\n","SubmissionTime":"2016-02-08T19:57:37.344474","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":536,"studentId":0,"date":"2016-02-14 10:43:51.597845","diff":"\r\nInputObject                          SideIndicator\r\n-----------                          -------------\r\n        result *= term(x)            =>           \r\n        result = term(x) * term(x+1) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n    for x in range(1, n+1):\n        result = term(x) * term(x+1)\n    return result\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    result = 1\n    for x in range(1, n+1):\n        result *= term(x)\n    return result\n\n","SubmissionTime":"2016-02-14T10:43:51.597845","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","12","","# Error: expected","#     6","# but got","#     12","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":537,"studentId":0,"date":"2016-02-14 11:20:53.834550","diff":"\r\nInputObject    SideIndicator\r\n-----------    -------------\r\n    result = 1 =>           \r\n    result = 0 <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    result = 0\n    for x in range (1, n+1):\n        result *= term(x)\n    return result\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    result = 1\n    for x in range (1, n+1):\n        result *= term(x)\n    return result\n\n\n","SubmissionTime":"2016-02-14T11:20:53.83455","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":538,"studentId":0,"date":"2016-02-16 10:45:00.324944","diff":"\r\nInputObject                     SideIndicator\r\n-----------                     -------------\r\n        total = total * term(n) =>           \r\n        total = total + term(n) <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n > 0:\n        total = total + term(n)\n        n -= 1\n    return total \n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total = 1\n    while n > 0:\n        total = total * term(n)\n        n -= 1\n    return total \n\n","SubmissionTime":"2016-02-16T10:45:00.324944","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","7","","# Error: expected","#     6","# but got","#     7","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":539,"studentId":0,"date":"2016-02-15 20:40:57.173152","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return term(n) * product(n-1)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return n\n    else:\n        return term(n) * product(n-1)\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n == 1:\n        return n\n    else:\n        return term(n) * product(n-1, term)\n\n\n","SubmissionTime":"2016-02-15T20:40:57.173152","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 33, in product","    return term(n) * product(n-1)","TypeError: product() missing 1 required positional argument: 'term'","","# Error: expected","#     6","# but got","#     TypeError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":540,"studentId":0,"date":"2016-02-13 13:09:18.907802","diff":"\r\nInputObject                              SideIndicator\r\n-----------                              -------------\r\n        return term(n)*product(n-1,term) =>           \r\n        return term(1)*(n-1,term)        <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(n)\n    else:\n        return term(1)*(n-1,term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    if n==1:\n        return term(n)\n    else:\n        return term(n)*product(n-1,term)\n\n","SubmissionTime":"2016-02-13T13:09:18.907802","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","(2, <function identity at 0x000002BF83DB6EA0>)","","# Error: expected","#     6","# but got","#     (2, <function identity at 0x000002BF83DB6EA0>)","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":541,"studentId":0,"date":"2016-02-12 14:26:52.103000","diff":"\r\nInputObject                                 SideIndicator\r\n-----------                                 -------------\r\n        return term(n) * product(n-1, term) =>           \r\n        return n * product(n-1, term)       <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return n * product(n-1, term)\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    if n == 1:\n        return term(1)\n    else:\n        return term(n) * product(n-1, term)\n\n","SubmissionTime":"2016-02-12T14:26:52.103","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","6",">>> product(5, identity) # 1 * 2 * 3 * 4 * 5","120",">>> product(3, square)   # 1^2 * 2^2 * 3^2","6","","# Error: expected","#     36","# but got","#     6","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":542,"studentId":0,"date":"2016-02-16 15:01:59.050967","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    i = 1         =>           \r\n    while i <= n: =>           \r\n    i = 0         <=           \r\n    while i < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 0\n    product = 1\n    while i < n:\n        product = product * term(i)\n        i += 1\n    return product\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = 1\n    product = 1\n    while i <= n:\n        product = product * term(i)\n        i += 1\n    return product\n\n","SubmissionTime":"2016-02-16T15:01:59.050967","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","0","","# Error: expected","#     6","# but got","#     0","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":543,"studentId":0,"date":"2016-02-15 15:15:10.119251","diff":"\r\nInputObject             SideIndicator\r\n-----------             -------------\r\n    return total        =>           \r\n    return totalproduct <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, i = 1, 1\n    while i <= n:\n        total = total * term(i)\n        i = i + 1\n    return totalproduct\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    total, i = 1, 1\n    while i <= n:\n        total = total * term(i)\n        i = i + 1\n    return total\n\n","SubmissionTime":"2016-02-15T15:15:10.119251","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","Traceback (most recent call last):","  File \"C:\\Users\\Gustavo\\Box Sync\\pesquisa\\tutor\\hw02-sp16\\hw02.py\", line 35, in product","    return totalproduct","NameError: name 'totalproduct' is not defined","","# Error: expected","#     6","# but got","#     NameError","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":544,"studentId":0,"date":"2016-02-13 13:36:24.178349","diff":"\r\nInputObject       SideIndicator\r\n-----------       -------------\r\n    while i <= n: =>           \r\n    while i < n:  <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i < n:\n        i, total = i + 1, total * term(i)\n    return total\n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    i = 1\n    total = 1\n    while i <= n:\n        i, total = i + 1, total * term(i)\n    return total\n\n\n\n\n","SubmissionTime":"2016-02-13T13:36:24.178349","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","2","","# Error: expected","#     6","# but got","#     2","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]},{"ErrorFlag":0,"Id":545,"studentId":0,"date":"2016-02-08 15:40:02.176852","diff":"\r\nInputObject                  SideIndicator\r\n-----------                  -------------\r\n        total=term(n)*total  =>           \r\n        total==term(n)*total <=           \r\n\r\n\r\n","before":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total=1\n    while n>0:\n        total==term(n)*total\n        n-=1\n    return total\n\n\n\n\n","after":"def product(n, term):\n    \"\"\"Return the product of the first n terms in a sequence.\n\n    n    -- a positive integer\n    term -- a function that takes one argument\n\n    >>> product(3, identity) # 1 * 2 * 3\n    6\n    >>> product(5, identity) # 1 * 2 * 3 * 4 * 5\n    120\n    >>> product(3, square)   # 1^2 * 2^2 * 3^2\n    36\n    >>> product(5, square)   # 1^2 * 2^2 * 3^2 * 4^2 * 5^2\n    14400\n    \"\"\"\n    total=1\n    while n>0:\n        total=term(n)*total\n        n-=1\n    return total\n\n\n\n\n","SubmissionTime":"2016-02-08T15:40:02.176852","SynthesizedAfter":null,"IsFixed":false,"GeneratedFix":null,"UsedFix":null,"failed":["=====================================================================","Assignment: Homework 2","OK, version v1.5.3","=====================================================================","","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","Running tests","","---------------------------------------------------------------------","Doctests for product","",">>> from hw02 import *",">>> product(3, identity) # 1 * 2 * 3","1","","# Error: expected","#     6","# but got","#     1","","---------------------------------------------------------------------","Test summary","    0 test cases passed before encountering first failed test case",""]}]